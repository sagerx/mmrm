[{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Thank interest contributing repo! contribution highly valued. Please go document guidance contribute.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"programming-conventions","dir":"","previous_headings":"","what":"Programming conventions","title":"Contributing","text":"Please follow programming conventions ensure consistent programming style across package. Generally follow tidyverse style guide. specific conventions deviate explained .","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"functions","dir":"","previous_headings":"Programming conventions","what":"Functions","title":"Contributing","text":"Function names explicit clear. Words separated underscore (snake_case). Functions starting h_ helper functions exported. Functions well documented using roxygen2 (even exported). Functions must unit tested (even exported).","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"imports","dir":"","previous_headings":"Programming conventions","what":"Imports","title":"Contributing","text":"package mmrm, follow following convention package imports. DESCRIPTION, add package Imports. function imported can random function within package. Always use package::function style wherever need use function. Example: stats. DESCRIPTION, add package Imports. mmrm-package.R, use import import every function. Use functions directly without prefix. Example: checkmate.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"comments","dir":"","previous_headings":"Programming conventions","what":"Comments","title":"Contributing","text":"Comments always follow sentence style. Comments minimal possible: Generally code variable names clear enough need comments. use needed explain “” “”.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"Programming conventions","what":"Documentation","title":"Contributing","text":"functions must documented using roxygen2 chunks, including internal functions (see also ). Exported objects must lifecycle badge clarify maturity. Start \"experimental\" status consider upgrading \"stable\" interface stable several months. Use Title Style title documentation. Always include @description part least one sentence describing object. arguments use following convention: type argument parentheses, followed line break, followed lower case half-sentence ending full stop. references help pages use corresponding markdown syntax, e.g. [function()] reference functions. Exported objects must included _pkgdown.yml file populated pkgdown website. vignettes, directly reference help pages pkgdown web pages. Note includes exported objects. make look similar help page references, please also use function() style.","code":"@param formula (`formula`)\\cr the model formula, see details."},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"github-conventions","dir":"","previous_headings":"","what":"Github conventions","title":"Contributing","text":"using github collaborate, following conventions needed: going work issue, please assign . Branches associated GitHub issue linked issue id. name branch form: <issue_id>_<short_discription>. Please use clear commit messages. Please keep changes focused issue. independent changes, please separate another PR linking another issue. Functions well documented. Functions corresponding unit tests. Changes pass github action checks. checklist corresponding issue completed. least one approval needed merge.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"development-environment-set-up","dir":"","previous_headings":"Contribution tips","what":"Development environment Set-up","title":"Contributing","text":"development mmrm package based latest R version C++ compilers. package dependencies recent versions CRAN. recommend working environment set way. Additionally, tools recommend install: RTools work Windows operating system. Alternatively can use docker separate operating system development system. GitKraken useful user interface git including visualization git commit graphs, file history, etc. lintr allow perform static code analysis. pre-commit Python module allows identify issues commit locally.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"issue-labels","dir":"","previous_headings":"Contribution tips","what":"Issue labels","title":"Contributing","text":"issues categorized several labels: Please choose issue based interest, issue complexity, priority.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"add-new-unit-tests","dir":"","previous_headings":"Contribution tips","what":"Add new unit tests","title":"Contributing","text":"add new unit test, need first identify test scope. test fit scope existing tests? , please modify existing test files tests/testthat/ folder src/ folder, depending whether code tested R C++. Otherwise please create new test file, name prefix “test-”. test case, use following structure: purpose test clearly stated first. test body part, conduct tests, e.g. use expect_identical check consistency, expect_error catch error messages, etc. test body follow implementation logic package , otherwise may miss mistakes implementation.","code":"test_that(\"function_name does something as expected\", {   result <- function_name(input)   expected <- hardcoded_result   expect_identical(result, expected) })"},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"add-integration-tests","dir":"","previous_headings":"Contribution tips","what":"Add integration tests","title":"Contributing","text":"Integration tests compare results SAS R assures quality code. add integration test, need following: Use SAS run appropriate mmrm model proc mixed, using fev_data. Save results .txt format design/SAS/ folder. Decide key outputs needed comparison. Add unit test verifying R implementation model results (conversion may needed).","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"get-started-with-c","dir":"","previous_headings":"Contribution tips","what":"Get started with C++","title":"Contributing","text":"experience C++, totally fine: TMB provided us many high-level functionalities similar R. list important things need go begin C++ programming. Semicolons. C++ use semicolons terminate statement. R, can use semicolons line breaks , C++, need semicolons line breaks. int = 1; works, declare int define 1. = 1; fails, declared yet. int ; = 1; works, declared defined. int = 1, j = 2; works, j int. R, (TRUE) { = '123' }; print() legal. C++, (1) {string = '123'}; std::stdout << << std::endl; illegal, object terminated already. C++, string ; (1) {= '123'}; std::stdout << << std::endl; legal, declared prior statement. Template special function works generic argument type. imagine single function work arguments arbitrary type, template functions make possible separation function logic argument declaration. way can use template functions avoid need replicate whole code type. points mind, ready go.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"get-started-with-tmb","dir":"","previous_headings":"Contribution tips","what":"Get started with TMB","title":"Contributing","text":"mmrm including latent variables Laplace approximation aspect TMB used. use automatic differentiation part TMB. detailed documentation TMB, visit TMB reference. One important feature TMB R style matrix/array calculations. important mainly use part conduct calculations. See matrix_arrays.cpp examples.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"add-a-new-covariance-structure","dir":"","previous_headings":"Contribution tips","what":"Add a new covariance structure","title":"Contributing","text":"add new covariance structure, need following: Understand covariance structure add appropriate documentation covariance structure. Create draft pull request invite discussion team members. Implement covariance structure C++ side corresponding R interface. Add unit tests make sure new covariance structure working expected. Add integration tests design/SAS/ folder make sure SAS R produce similar results (within tolerance).","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"add-additional-data","dir":"","previous_headings":"Contribution tips","what":"Add additional data","title":"Contributing","text":"add additional data mmrm, please follow next steps: Make sure data needed. Document data R/data.R. Use save create rda data containing dataset. function usethis::use_data can also helpful.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"communications-within-team","dir":"","previous_headings":"","what":"Communications within team","title":"Contributing","text":"several communication channels, please use appropriate ones.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"github","dir":"","previous_headings":"Communications within team","what":"GitHub","title":"Contributing","text":"GitHub issues pull requests implementations discussed reviewed. Feature requests, bugs, enhancements, technical implementations can discussed . ideas needs documented, better github.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"slack","dir":"","previous_headings":"Communications within team","what":"Slack","title":"Contributing","text":"Slack messaging tool mmrm channel rinpharma space. can put anything slack channel, e.g., completed issue waiting review, questions don’t want wait next stand-meeting. join slack channel, please make sure slack account, send email address team member.","code":""},{"path":"https://openpharma.github.io/mmrm/main/CONTRIBUTING.html","id":"stand-up-meetings","dir":"","previous_headings":"Communications within team","what":"Stand-up meetings","title":"Contributing","text":"stand-meetings currently three times week. purpose stand-meetings team members discuss current work progress raise issue/questions team discussion needed. don’t need join three meetings.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"model-definition","dir":"Articles","previous_headings":"","what":"Model definition","title":"Details of the Model Fitting in `mmrm`","text":"mixed model repeated measures (MMRM) definition using package following. Let \\(= 1, \\dotsc, n\\) denote subjects observe multiple observations \\(j = 1, \\dotsc, m_i\\) total \\(m_i\\) time points \\(t_{ij} \\\\{t_1, \\dotsc, t_m\\}\\). Note number time points specific subject, \\(m_i\\), can smaller \\(m\\), subset possible \\(m\\) time points observed.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"linear-model","dir":"Articles","previous_headings":"Model definition","what":"Linear model","title":"Details of the Model Fitting in `mmrm`","text":"subject \\(\\) observe vector \\[ Y_i = (y_{i1}, \\dotsc, y_{im_i})^\\top \\\\mathbb{R}^{m_i} \\] given design matrix \\[ X_i \\\\mathbb{R}^{m_i \\times p} \\] corresponding coefficient vector \\(\\beta \\\\mathbb{R}^{p}\\) assume observations multivariate normal distributed: \\[ Y_i \\sim N(X_i\\beta, \\Sigma_i) \\] covariance matrix \\(\\Sigma_i \\\\mathbb{R}^{m_i \\times m_i}\\) derived subsetting overall covariance matrix \\(\\Sigma \\\\mathbb{R}^{m \\times m}\\) appropriately \\[ \\Sigma_i = G_i^{-1/2} S_i^\\top \\Sigma S_i G_i^{-1/2} \\] subsetting matrix \\(S_i \\\\{0, 1\\}^{m \\times m_i}\\) contains \\(m_i\\) columns contains single 1 indicating overall time point matching \\(t_{ij}\\). row contains single 1 can also contain 0 time point observed. example, assume subject observed time points \\(1, 3, 4\\) total \\(5\\) subsetting matrix \\[ S_i = \\begin{pmatrix} 1 & 0 & 0 \\\\ 0 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\\\ 0 & 0 & 0 \\end{pmatrix}. \\] \\(G_i \\\\mathbb{R}_{\\gt 0}^{m_i \\times m_i}\\) diagonal weight matrix, identity matrix weights specified. Note follows well known property multivariate normal distribution linear combinations random vector multivariate normal distribution correspondingly modified mean vector covariance matrix. Conditional design matrices \\(X_i\\), coefficient vector \\(\\beta\\) covariance matrix \\(\\Sigma\\) assume observations independent subjects. can write linear model subjects together \\[ Y = X\\beta + \\epsilon \\] \\(Y \\\\mathbb{R}^N\\) combines subject specific observations vectors \\(Y_i\\) total \\(N = \\sum_{= 1}^{n}{m_i}\\) observations, \\(X \\\\mathbb{R}^{N \\times p}\\) combines subject specific design matrices \\(\\epsilon \\\\mathbb{R}^N\\) multivariate normal distribution \\[ \\epsilon \\sim N(0, \\Omega) \\] \\(\\Omega \\\\mathbb{R}^{N \\times N}\\) block-diagonal containing subject specific \\(\\Sigma_i\\) covariance matrices diagonal 0 remaining entries.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"covariance-matrix-model","dir":"Articles","previous_headings":"Model definition","what":"Covariance matrix model","title":"Details of the Model Fitting in `mmrm`","text":"symmetric positive definite covariance matrix \\[ \\Sigma = \\begin{pmatrix} \\sigma_1^2 & \\sigma_{12} & \\dots & \\dots & \\sigma_{1m} \\\\ \\sigma_{21} & \\sigma_2^2 & \\sigma_{23} & \\dots & \\sigma_{2m}\\\\ \\vdots & & \\ddots & & \\vdots \\\\ \\vdots & & & \\ddots & \\vdots \\\\ \\sigma_{m1} & \\dots & \\dots & \\sigma_{m,m-1} & \\sigma_m^2 \\end{pmatrix} \\] parametrized vector variance parameters \\(\\theta = (\\theta_1, \\dotsc, \\theta_k)^\\top\\). many different choices model covariance matrix correspondingly \\(\\theta\\) different interpretations. Since covariance matrix unique Cholesky factorization \\(\\Sigma = LL^\\top\\) \\(L\\) lower triangular Cholesky factor, going use .","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"unstructured-covariance-matrix","dir":"Articles","previous_headings":"Model definition > Covariance matrix model","what":"Unstructured covariance matrix","title":"Details of the Model Fitting in `mmrm`","text":"general model uses saturated parametrization, .e. covariance matrix represented form. use \\[ L = D\\tilde{L} \\] \\(D\\) diagonal matrix standard deviations, \\(\\tilde{L}\\) unit diagonal lower triangular matrix. Hence start \\(\\theta\\) natural logarithm standard deviations, followed row-wise filled entries \\(\\tilde{L} = \\{l_{ij}\\}_{1 \\leq j < \\leq m}\\): \\[ \\theta = (   \\log(\\sigma_1), \\dotsc, \\log(\\sigma_m),   l_{21}, l_{31}, l_{32}, \\dotsc, l_{m,m-1} )^\\top \\] \\(\\theta\\) \\(k = m(m+1)/2\\) entries. example \\(m = 4\\) time points need \\(k = 10\\) variance parameters model unstructured covariance matrix. covariance matrix choices explained covariance structures vignette.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"grouped-covariance-matrix","dir":"Articles","previous_headings":"Model definition > Covariance matrix model","what":"Grouped covariance matrix","title":"Details of the Model Fitting in `mmrm`","text":"cases, like estimate unique covariance matrices across groups, keeping covariance structure (unstructured, ante-dependence, Toeplitz, etc.) consistent across groups. Following notations previous section, subject \\(\\) group \\(g()\\), \\[ \\Sigma_{} = S_i^\\top \\Sigma_{g()} S_i \\] \\(g()\\) group subject \\(\\) \\(\\Sigma_{g()}\\) covariance matrix group \\(g()\\). parametrization \\(\\theta\\) similar non-grouped \\(\\theta\\). Assume total number \\(G\\) groups, length \\(\\theta\\) multiplied \\(G\\), part, \\(\\theta\\) parametrized fashion. example, unstructured covariance matrix, \\(\\theta\\) \\(k = G * m(m+1)/2\\) entries.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"spatial-covariance-matrix","dir":"Articles","previous_headings":"Model definition > Covariance matrix model","what":"Spatial covariance matrix","title":"Details of the Model Fitting in `mmrm`","text":"spatial covariance structure can model individual-specific visit times. individual’s covariance matrix function population-level covariance parameters (specific chosen structure) individual’s visit times. Following notations previous section, subject \\(\\) total number \\(m_i\\) visits, \\[ \\sigma_{ijk} = \\sigma * f(dist(\\boldsymbol{c}_{ij}, \\boldsymbol{c}_{ik})) \\] \\((m_{ij}, m_{ik})\\) element \\(\\Sigma_{}\\) function distance \\(m_{ij}\\) \\(m_{ik}\\) visit occurring \\(t_{m_{ij}}\\) \\(t_{m_{ik}}\\). \\(t_{m_{ij}}\\) coordinate(time) \\(m_{ij}\\) visit subject \\(\\). \\(\\sigma\\) constant variance. Usually use Euclidean distance. Currently spatial exponential covariance structure implemented. coordinates multiple dimensions, Euclidean distance used without transformations.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"maximum-likelihood-estimation","dir":"Articles","previous_headings":"","what":"Maximum Likelihood Estimation","title":"Details of the Model Fitting in `mmrm`","text":"Given general linear model , conditional \\(\\theta\\), know likelihood \\(\\beta\\) \\[ L(\\beta; Y) = (2\\pi)^{-N/2} \\det(\\Omega)^{-1/2} \\exp\\left\\{ - \\frac{1}{2}(Y - X\\beta)^\\top \\Omega^{-1} (Y - X\\beta) \\right\\} \\] also know maximum likelihood (ML) estimate \\(\\beta\\) weighted least squares estimator \\(\\hat{\\beta}\\) solving estimating equation \\[ (X^\\top \\Omega^{-1} X) \\hat{\\beta} = X^\\top \\Omega^{-1} Y. \\] Plugging \\(\\hat{\\beta}\\) likelihood gives value function want maximize regards variance parameters \\(\\theta\\). Practically done negative log scale: \\[ f(\\theta; \\hat{\\beta}) = - \\log L(\\hat{\\beta}; Y) = \\frac{N}{2} \\log(2\\pi) +   \\frac{1}{2}\\log\\det(\\Omega) +   \\frac{1}{2} (Y - X\\hat{\\beta})^\\top \\Omega^{-1} (Y - X\\hat{\\beta}) \\] objective function \\(f(\\theta; \\hat{\\beta})\\) minimized numerical optimizers utilizing quasi-Newton-Raphson algorithms based gradient (additionally Hessian, see optimizer). use Template Model Builder package TMB helpful TMB allows perform calculations C++, maximizes speed. TMB performs automatic differentiation objective function regards variance parameters \\(\\theta\\), gradient Hessian approximated numerically coded explicitly.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"weighted-least-squares-estimator","dir":"Articles","previous_headings":"Maximum Likelihood Estimation","what":"Weighted least squares estimator","title":"Details of the Model Fitting in `mmrm`","text":"Let’s look details calculating log likelihood , including particular weighted least squares (WLS) estimator \\(\\hat{\\beta}\\). Starting point linear equation observation left right hand sides can decomposed subject-specific terms given block-diagonal structure \\(\\Omega\\) therefore inverse, \\(W = \\Omega^{-1}\\): \\[ X^\\top \\Omega^{-1} X = X^\\top W X =  \\sum_{=1}^{n} X_i^\\top W_i X_i \\] similarly \\[ X^\\top \\Omega^{-1} Y = X^\\top W Y =  \\sum_{=1}^{n} X_i^\\top W_i Y_i \\] \\(W_i = \\Sigma_i^{-1}\\) weight matrix subject \\(\\), inverse covariance matrix. Instead calculating inverse explicitly, always better numerically work Cholesky factorization solve linear equations instead. calculate factorization \\(\\Sigma_i = L_i L_i^\\top\\). Note case \\(m_i = m\\), .e. subject time points observed, \\(\\Sigma_i = \\Sigma\\) don’t need calculate already \\(\\Sigma = L L^\\top\\), .e. \\(L_i = L\\). Unfortunately, \\(m_i < m\\), need calculate explicitly, way update Cholesky factorization subset operation \\(\\Sigma_i = S_i^\\top \\Sigma S_i\\) . Given \\(L_i\\), solve \\[ L_i \\tilde{X}_i = X_i \\] \\(\\tilde{X}_i\\) efficient forward-solve, similarly solve \\[ L_i \\tilde{Y}_i = Y_i \\] \\(\\tilde{Y}_i\\). Therefore \\[ X_i^\\top W_i X_i = \\tilde{X}_i^\\top \\tilde{X}_i \\] \\[ X_i^\\top W_i Y_i = \\tilde{X}_i^\\top \\tilde{Y}_i \\] can thereby calculate left right hand sides WLS estimating equation. solve equation robust Cholesky decomposition pivoting. advantage can reuse decomposition calculating covariance matrix \\(\\hat{\\beta}\\), .e. \\(K = (X^\\top W X)^{-1}\\), supplying identity matrix alternative right hand side.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"determinant-and-quadratic-form","dir":"Articles","previous_headings":"Maximum Likelihood Estimation","what":"Determinant and quadratic form","title":"Details of the Model Fitting in `mmrm`","text":"objective function also need log determinant \\(\\Omega\\): \\[\\begin{align} \\frac{1}{2}\\log\\det(\\Omega)   &= \\frac{1}{2}\\log\\det\\{\\text{blockdiag} \\Sigma_1, \\dotsc, \\Sigma_n\\} \\\\   &= \\frac{1}{2}\\log\\prod_{=1}^{n}\\det{\\Sigma_i} \\\\   &= \\frac{1}{2}\\sum_{=1}^{n}\\log\\det{L_i L_i^\\top} \\\\   &= \\sum_{=1}^{n}\\log\\det{L_i} \\\\   &= \\sum_{=1}^{n}\\sum_{j=1}^{m_i}\\log(l_{, jj}) \\end{align}\\] \\(l_{,jj}\\) diagonal entries factor \\(L_i\\) used determinant block diagonal matrix product determinants blocks, determinant product matrices product determinants, determinant transposed matrix original one, determinant triangular matrix product diagonal. finally, quadratic form can reuse weighted response vector design matrix: \\[ (Y - X\\hat{\\beta})^\\top \\Omega^{-1} (Y - X\\hat{\\beta}) = \\sum_{=1}^{n} (Y_i - X_i\\hat{\\beta})^\\top W_i (Y_i - X_i\\hat{\\beta}) = \\sum_{=1}^{n} (\\tilde{Y}_i - \\tilde{X}_i\\hat{\\beta})^\\top (\\tilde{Y}_i - \\tilde{X}_i\\hat{\\beta}) \\]","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"restricted-maximum-likelihood-estimation","dir":"Articles","previous_headings":"","what":"Restricted Maximum Likelihood Estimation","title":"Details of the Model Fitting in `mmrm`","text":"restricted ML estimation (REML) paradigm first obtain marginal likelihood variance parameters \\(\\theta\\) integrating remaining parameters \\(\\beta\\) likelihood. : \\[ L(\\theta; Y) = \\int_{\\mathbb{R}^p} L(\\beta; Y) d\\beta = (2\\pi)^{-N/2} \\det(\\Omega)^{-1/2} \\int_{\\mathbb{R}^p} \\exp\\left\\{ - \\frac{1}{2}(Y - X\\beta)^\\top \\Omega^{-1} (Y - X\\beta) \\right\\} d\\beta \\] note \\(\\det(\\Omega)\\) depends \\(\\theta\\) \\(\\beta\\) can therefore pulled integral.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"completing-the-square","dir":"Articles","previous_headings":"Restricted Maximum Likelihood Estimation","what":"Completing the square","title":"Details of the Model Fitting in `mmrm`","text":"Let’s focus now quadratic form exponential function complete square regards \\(\\beta\\) obtain kernel multivariate normal distribution: \\[\\begin{align} (Y - X\\beta)^\\top \\Omega^{-1} (Y - X\\beta) &= Y^\\top \\Omega^{-1} Y + \\beta^\\top X^\\top \\Omega^{-1} X \\beta - 2 \\beta^\\top X^\\top \\Omega^{-1} Y \\\\ &= Y^\\top \\Omega^{-1} Y + \\beta^\\top K^{-1} \\beta - 2 \\beta^\\top K^{-1}K X^\\top \\Omega^{-1} Y \\\\ &= Y^\\top \\Omega^{-1} Y + \\beta^\\top K^{-1} \\beta - 2 \\beta^\\top K^{-1} \\hat{\\beta} \\\\ &= Y^\\top \\Omega^{-1} Y + \\beta^\\top K^{-1} \\beta - 2 \\beta^\\top K^{-1} \\hat{\\beta} + \\hat{\\beta}^{-1} K^{-1} \\hat{\\beta} - \\hat{\\beta}^{-1} K^{-1} \\hat{\\beta} \\\\ &= Y^\\top \\Omega^{-1} Y - \\hat{\\beta}^{-1} K^{-1} \\hat{\\beta} + (\\beta - \\hat{\\beta})^\\top K^{-1} (\\beta - \\hat{\\beta}) \\end{align}\\] used \\(K = (X^\\top W X)^{-1}\\) early identify \\(K\\) covariance matrix kernel multivariate normal \\(\\beta\\) later \\(\\hat{\\beta}\\) mean vector. , know integral multivariate normal kernel inverse normalizing constants, thus \\[ \\int_{\\mathbb{R}^p} \\exp\\left\\{ - \\frac{1}{2}(Y - X\\beta)^\\top \\Omega^{-1} (Y - X\\beta) \\right\\} d\\beta = \\exp\\left\\{ -\\frac{1}{2} Y^\\top \\Omega^{-1} Y + \\frac{1}{2} \\hat{\\beta}^{-1} K^{-1} \\hat{\\beta} \\right\\} (2\\pi)^{p/2} \\det{K}^{1/2} \\] integrated likelihood \\[ L(\\theta; Y) = (2\\pi)^{-(N-p)/2} \\det(\\Omega)^{-1/2} \\det{K}^{1/2} \\exp\\left\\{ -\\frac{1}{2} Y^\\top \\Omega^{-1} Y + \\frac{1}{2} \\hat{\\beta}^\\top K^{-1} \\hat{\\beta} \\right\\}. \\]","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/algorithm.html","id":"objective-function","dir":"Articles","previous_headings":"Restricted Maximum Likelihood Estimation","what":"Objective function","title":"Details of the Model Fitting in `mmrm`","text":"objective function want minimize regards variance parameters \\(\\theta\\) take negative natural logarithm \\[ f(\\theta) = -\\log L(\\theta;Y) = \\frac{N-p}{2} \\log(2\\pi) + \\frac{1}{2}\\log\\det(\\Omega) - \\frac{1}{2}\\log\\det(K) + \\frac{1}{2} \\tilde{Y}^\\top \\tilde{Y} - \\frac{1}{2} \\hat{\\beta}^\\top \\tilde{X}^\\top \\tilde{X} \\hat{\\beta} \\] interesting see computation REML objective function requiring additional calculations compared ML objective function. particular, since already matrix decomposition \\(K^{-1}\\), easy obtain determinant . Also use numeric optimization \\(f(\\theta)\\) TMB library supports efficiently automatic differentiation.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/covariance.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Covariance Structures in `mmrm`","text":"use concepts throughout different covariance structures introduce .","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/covariance.html","id":"covariance-and-correlation-matrices","dir":"Articles","previous_headings":"Introduction","what":"Covariance and Correlation Matrices","title":"Covariance Structures in `mmrm`","text":"symmetric positive definite covariance matrix \\[ \\Sigma = \\begin{pmatrix} \\sigma_1^2 & \\sigma_{12} & \\dots & \\dots & \\sigma_{1m} \\\\ \\sigma_{21} & \\sigma_2^2 & \\sigma_{23} & \\dots & \\sigma_{2m}\\\\ \\vdots & & \\ddots & & \\vdots \\\\ \\vdots & & & \\ddots & \\vdots \\\\ \\sigma_{m1} & \\dots & \\dots & \\sigma_{m,m-1} & \\sigma_m^2 \\end{pmatrix} \\] parametrized vector variance parameters \\(\\theta = (\\theta_1, \\dotsc, \\theta_k)^\\top\\). meaning number (\\(k\\)) variance parameters different covariance structure. many covariance structures use decomposition \\[ \\Sigma = DPD \\] diagonal standard deviation matrix \\[ D = \\begin{pmatrix} \\sigma_1 & 0 & \\cdots & & 0 \\\\ 0 & \\sigma_2 & 0 & \\cdots & 0 \\\\ \\vdots & & \\ddots & \\ddots & \\vdots \\\\ &  & & \\sigma_{m-1} & 0 \\\\ 0 & \\cdots & & 0 & \\sigma_m \\end{pmatrix} \\] entries \\(\\sigma_i > 0\\), symmetric correlation matrix \\(P\\) \\[ P = \\begin{pmatrix}   1 & \\rho_{12}   & \\rho_{13} & \\cdots & \\cdots & \\rho_{1,m-1} \\\\   \\rho_{12} & 1      & \\rho_{23} & \\ddots &        & \\vdots \\\\   \\rho_{13} & \\rho_{23}      & \\ddots & \\ddots & \\ddots & \\vdots \\\\ \\vdots & \\ddots & \\ddots & \\ddots & \\rho_{m-2,m-1} & \\rho_{m-2,m} \\\\ \\vdots &        & \\ddots & \\rho_{m-2,m-1}    & 1    & \\rho_{m-1,m} \\\\ \\rho_{1, m-1} & \\cdots & \\cdots & \\rho_{m-2,m} & \\rho_{m-1,m}    & 1 \\end{pmatrix} \\] entries \\(\\rho_{ij} \\(-1, 1)\\). Since covariance structures assume different variances time point called “heterogeneous” covariance structures. Assuming constant \\(\\sigma = \\sigma_1 = \\dotsb = \\sigma_m\\) gives “homogeneous” covariance structure instead.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/covariance.html","id":"transformation-to-variance-parameters","dir":"Articles","previous_headings":"Introduction","what":"Transformation to Variance Parameters","title":"Covariance Structures in `mmrm`","text":"standard deviation parameters \\(\\sigma\\) use natural logarithm \\(\\log(\\sigma)\\) map \\(\\mathbb{R}\\). correlation parameters \\(\\rho\\) consistently use transformation \\[ \\theta = f(\\rho) = \\mathop{\\mathrm{sign}}(\\rho) \\sqrt{\\frac{\\rho^2}{1 - \\rho^2}} \\] maps correlation parameter \\(\\theta \\\\mathbb{R}\\). inverse \\[ \\rho = f^{-1}(\\theta) = \\frac{\\theta}{\\sqrt{1 + \\theta^2}}. \\] important resulting variance parameters \\(\\theta\\) can optimized without constraints whole \\(\\mathbb{R}\\).","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/articles/covariance.html","id":"unstructured-us","dir":"Articles","previous_headings":"Covariance Structures","what":"Unstructured (us)","title":"Covariance Structures in `mmrm`","text":"covariance matrix can represented saturated correlation structure. \\(k = m (m+1) / 2\\). See algorithm vignette details.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/covariance.html","id":"homogeneous-ad-and-heterogeneous-ante-dependence-adh","dir":"Articles","previous_headings":"Covariance Structures","what":"Homogeneous (ad) and Heterogeneous Ante-dependence (adh)","title":"Covariance Structures in `mmrm`","text":"ante-dependence correlation structure (Gabriel 1962) useful balanced designs observations necessarily equally spaced time. use order one ante-dependence model, correlation matrix \\(P\\) elements \\[ \\rho_{ij} = \\prod_{k=}^{j-1} \\rho_k. \\] correlation parameters \\(\\rho_k\\), \\(k = 1, \\dotsc, m-1\\). use heterogeneous covariance structure allow different within subject variances. can identify \\[ \\theta = (\\log(\\sigma_1), \\dotsc, \\log(\\sigma_m), f(\\rho_1), \\dotsc, f(\\rho_{m-1})) \\] total \\(2m - 1\\) variance parameters. Assuming constant variance yields homogeneous ante-dependence covariance structure total \\(m\\) variance parameters. Note naming convention homogeneous heterogeneous covariance structures suffix h used denote heterogeneous version, e.g, ad homogeneous adh heterogeneous ante-dependence. different name used SAS ante-dependence covariance structure, ANTE(1) refers heterogeneous ante-dependence covariance structure homogeneous version provided SAS.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/covariance.html","id":"homogeneous-toep-and-heterogeneous-toeplitz-toeph","dir":"Articles","previous_headings":"Covariance Structures","what":"Homogeneous (toep) and Heterogeneous Toeplitz (toeph)","title":"Covariance Structures in `mmrm`","text":"Toeplitz matrices (Toeplitz 1911) diagonal-constant matrices. can model correlation matrix Toeplitz matrix: \\[ P = \\begin{pmatrix}   1 & \\rho_1   & \\rho_2 & \\cdots & \\cdots & \\rho_{m-1} \\\\   \\rho_1 & 1      & \\rho_1 & \\ddots &        & \\vdots \\\\   \\rho_2 & \\rho_1      & \\ddots & \\ddots & \\ddots & \\vdots \\\\ \\vdots & \\ddots & \\ddots & \\ddots & \\rho_1 & \\rho_2 \\\\ \\vdots &        & \\ddots & \\rho_1    & 1    & \\rho_1 \\\\ \\rho_{m-1} & \\cdots & \\cdots & \\rho_2    & \\rho_1    & 1 \\end{pmatrix} \\] means correlation two time points depends distance , .e. \\[ \\rho_{ij} = \\rho_{\\left\\vert - j\\right\\vert} \\] correlation parameters \\(\\rho_k\\), \\(k = 1, \\dotsc, m-1\\). use heterogeneous covariance structure allow different within subject variances. can identify \\[ \\theta = (\\log(\\sigma_1), \\dotsc, \\log(\\sigma_m), f(\\rho_1), \\dotsc, f(\\rho_{m-1})) \\] total \\(2m - 1\\) variance parameters. similar heterogeneous ante-dependence structure, correlation parameters used differently construction \\(P\\). Assuming constant variance yields homogeneous Toeplitz covariance structure total \\(m\\) variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/covariance.html","id":"homogeneous-ar1-and-heterogeneous-ar1h-autoregressive","dir":"Articles","previous_headings":"Covariance Structures","what":"Homogeneous (ar1) and Heterogeneous (ar1h) Autoregressive","title":"Covariance Structures in `mmrm`","text":"autoregressive covariance structure can motivated corresponding state-space equation \\[ y_{} = \\varphi y_{,t-1} + \\varepsilon_t \\] white noise \\(\\varepsilon_t\\) normal distribution mean zero constant variance. can shown gives correlations \\[ \\rho_{ij} = \\rho^{\\left\\vert - j\\right\\vert}. \\] \\(\\rho\\) related \\(\\varphi\\) variance single correlation parameter . Assuming constant variance state-space equation yields homogeneous autoregressive covariance structure total \\(k=2\\) variance parameters, otherwise obtain heterogeneous autoregressive covariance structure \\(k = m + 1\\) variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/covariance.html","id":"homogeneous-cs-and-heterogeneous-csh-compound-symmetry","dir":"Articles","previous_headings":"Covariance Structures","what":"Homogeneous (cs) and Heterogeneous (csh) Compound Symmetry","title":"Covariance Structures in `mmrm`","text":"compound symmetry covariance structures assume constant correlation different time points: \\[ \\rho_{ij} = \\rho \\] \\(\\rho\\) single correlation parameter . Assuming constant variance state-space equation yields homogeneous compound symmetry covariance structure total \\(k=2\\) variance parameters, otherwise obtain heterogeneous compound symmetry covariance structure \\(k = m + 1\\) variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/covariance.html","id":"spatial-covariance-structure","dir":"Articles","previous_headings":"","what":"Spatial Covariance Structure","title":"Covariance Structures in `mmrm`","text":"Spatial covariance structures, unlike covariance structures, require timepoints consistent subjects. Instead, long distance visits can quantified terms time /coordinates, spatial covariance structure can applied. Euclidean distance common case. subject, covariance structure can different. homogeneous structures allowed (.e. common variance used). Please note printing summary mmrm fit, covariance displayed 2 * 2 square matrix. distance used derive corresponding element matrix, unit distance used . distance matrix \\[     \\begin{pmatrix}     0 & 1\\\\     1 & 0\\\\     \\end{pmatrix} \\]","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/covariance.html","id":"spatial-exponential","dir":"Articles","previous_headings":"Spatial Covariance Structure","what":"Spatial exponential","title":"Covariance Structures in `mmrm`","text":"spatial exponential, covariance structure defined follows: \\[   \\rho_{ij} = \\rho^{-d_{ij}} \\] \\(d_{ij}\\) distance time point \\(\\) time point \\(j\\), total number parameters \\(k = 2\\) needed: parameterization \\(\\theta\\) little different previous examples. previous examples, \\(\\rho\\) can take values -1 1, need restrict \\(\\rho\\) (0, 1). Hence following parametrization form. \\[   \\theta = (\\log(\\sigma), \\mathop{\\mathrm{logit}}(\\rho)) \\]","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"common-usage","dir":"Articles","previous_headings":"","what":"Common usage","title":"Introduction to `mmrm`","text":"minimal call mmrm(), consisting formula data arguments produce object class mmrm, mmrm_fit, mmrm_tmb. fit mmrm model us (unstructured) covariance structure specified, well defaults reml = TRUE control = mmrm_control(). Printing object show output familiar anyone used popular modeling functions stats::lm(), stats::glm(), glmmTMB::glmmTMB(), lme4::nlmer(). print see function call, data used, covariance structure number variance parameters, well likelihood method, model deviance achieved. Additionally user provided printout estimated coefficients model convergence information.","code":"fit <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) print(fit) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      REML #> Deviance:    3387.373 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   30.96769899                    1.50464863  #>                     RACEWhite                      ARMCDTRT  #>                    5.61309565                    3.77555734  #>                    AVISITVIS2                    AVISITVIS3  #>                    4.82858803                   10.33317002  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                   15.05255715                   -0.01737409  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                   -0.66753189                    0.63094392  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"common-customizations","dir":"Articles","previous_headings":"","what":"Common customizations","title":"Introduction to `mmrm`","text":"high-level mmrm() interface, common changes default function call can specified.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"control-function","dir":"Articles","previous_headings":"Common customizations","what":"Control Function","title":"Introduction to `mmrm`","text":"fine control, mmrm_control() provided. function allows user choose adjustment method degrees freedom coefficients covariance matrix, specify optimization routines, number cores used Unix systems trying several optimizers parallel, provide vector starting parameter values, decide action taken defined design matrix singular, drop unobserved visit levels. example: Note control list can either passed via control argument mmrm, selected controls can directly specified mmrm call. see .","code":"mmrm_control(   method = \"Kenward-Roger\",   optimizer = c(\"L-BFGS-B\", \"BFGS\"),   n_cores = 2,   start = c(0, 1, 1, 0, 1, 0),   accept_singular = FALSE,   drop_visit_levels = FALSE )"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"reml-or-ml","dir":"Articles","previous_headings":"Common customizations","what":"REML or ML","title":"Introduction to `mmrm`","text":"Users can specify REML used (default) ML used optimization.","code":"fit_ml <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   reml = FALSE ) fit_ml #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      ML #> Deviance:    3397.934 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                    30.9663423                     1.5086851  #>                     RACEWhite                      ARMCDTRT  #>                     5.6133151                     3.7761037  #>                    AVISITVIS2                    AVISITVIS3  #>                     4.8270155                    10.3353319  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                    15.0487715                    -0.0156154  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                    -0.6663598                     0.6317222  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"optimizer","dir":"Articles","previous_headings":"Common customizations","what":"Optimizer","title":"Introduction to `mmrm`","text":"Users can specify optimizer used, changing default four optimizers, starts L-BFGS-B proceeds choices optimization fails converge. choices BFGS, CG, nlminb. L-BFGS-B, BFGS CG implemented stats::optim() Hessian used, nlminb using stats::nlminb() turn uses gradient Hessian (default can switch ) optimization.","code":"fit_opt <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   optimizer = \"BFGS\" ) fit_opt #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      REML #> Deviance:    3387.373 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   30.96769004                    1.50467449  #>                     RACEWhite                      ARMCDTRT  #>                    5.61310489                    3.77554263  #>                    AVISITVIS2                    AVISITVIS3  #>                    4.82858562                   10.33317692  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                   15.05257072                   -0.01735093  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                   -0.66751927                    0.63095827  #>  #> Model Inference Optimization: #> Converged with code 0 and message:"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"covariance-structure","dir":"Articles","previous_headings":"Common customizations","what":"Covariance Structure","title":"Introduction to `mmrm`","text":"Covariance structures supported mmrm continuously developed. complete list description please visit covariance vignette. see function call homogeneous compound symmetry (cs). time points unique subject. , time points multiple observations subject. rationale observations need correlated, possible within currently implemented covariance structure framework correctly.","code":"fit_cs <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + cs(AVISIT | USUBJID),   data = fev_data,   reml = FALSE ) fit_cs #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + cs(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  compound symmetry (2 variance parameters) #> Method:      ML #> Deviance:    3536.989 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                    31.4207077                     0.5357237  #>                     RACEWhite                      ARMCDTRT  #>                     5.4546329                     3.4305212  #>                    AVISITVIS2                    AVISITVIS3  #>                     4.8326353                    10.2395076  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                    15.0672680                     0.2801641  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                    -0.5894964                     0.7939750  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"weighting","dir":"Articles","previous_headings":"Common customizations","what":"Weighting","title":"Introduction to `mmrm`","text":"Users can perform weighted MMRM specifying numeric vector weights positive values.","code":"fit_wt <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   weights = fev_data$WEIGHT ) fit_wt #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Weights:     fev_data$WEIGHT #> Covariance:  unstructured (10 variance parameters) #> Method:      REML #> Deviance:    3476.526 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   31.20065229                    1.18452837  #>                     RACEWhite                      ARMCDTRT  #>                    5.36525917                    3.39695951  #>                    AVISITVIS2                    AVISITVIS3  #>                    4.85890820                   10.03942420  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                   14.79354054                    0.03418184  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                    0.01308088                    0.86701567  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"grouped-covariance-structure","dir":"Articles","previous_headings":"Common customizations","what":"Grouped Covariance Structure","title":"Introduction to `mmrm`","text":"Grouped covariance structures supported themmrm package. Covariance matrices group identically structured (unstructured, compound symmetry, etc) estimates allowed vary across groups. use form cs(time | group / subject) specify group variable. example use ARMCD group variable. can see estimated covariance matrices different different ARMCD groups.","code":"fit_cs <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + cs(AVISIT | ARMCD / USUBJID),   data = fev_data,   reml = FALSE ) VarCorr(fit_cs) #> $PBO #>           VIS1      VIS2      VIS3      VIS4 #> VIS1 37.823638  3.601296  3.601296  3.601296 #> VIS2  3.601296 37.823638  3.601296  3.601296 #> VIS3  3.601296  3.601296 37.823638  3.601296 #> VIS4  3.601296  3.601296  3.601296 37.823638 #>  #> $TRT #>          VIS1     VIS2     VIS3     VIS4 #> VIS1 49.58110 10.98112 10.98112 10.98112 #> VIS2 10.98112 49.58110 10.98112 10.98112 #> VIS3 10.98112 10.98112 49.58110 10.98112 #> VIS4 10.98112 10.98112 10.98112 49.58110"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"adjustment-method","dir":"Articles","previous_headings":"Common customizations","what":"Adjustment Method","title":"Introduction to `mmrm`","text":"Satterthwaite Kenward-Roger adjustment methods available. default Satterthwaite adjustment degrees freedom. use Kenward-Roger adjustment degrees freedom well coefficients covariance matrix, use method argument: Note requires reml = TRUE, .e. Kenward-Roger adjustment possible using maximum likelihood inference. adjustment choice visible print() result fitted model (initial model fit affected choice adjustment method), looking summary see method correspondingly adjusted standard errors degrees freedom: one-dimensional contrasts coefficients table , degrees freedom Kenward-Roger Satterthwaite. However, Kenward-Roger uses adjusted standard errors, hence p-values different. Note like match SAS results unstructured covariance model, can use linear Kenward-Roger approximation: due different parametrization unstructured covariance matrix, see Kenward-Roger vignette details.","code":"fit_kr <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   method = \"Kenward-Roger\" ) summary(fit_kr) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      Kenward-Roger #> Inference:   REML #>  #> Model selection criteria: #>      AIC      BIC   logLik deviance  #>   3407.4   3440.2  -1693.7   3387.4  #>  #> Coefficients:  #>                                Estimate Std. Error        df t value Pr(>|t|) #> (Intercept)                    30.96770    0.83335 187.91000  37.160  < 2e-16 #> RACEBlack or African American   1.50465    0.62901 169.95000   2.392  0.01784 #> RACEWhite                       5.61310    0.67139 158.87000   8.360 2.98e-14 #> ARMCDTRT                        3.77556    1.07910 146.27000   3.499  0.00062 #> AVISITVIS2                      4.82859    0.80408 143.66000   6.005 1.49e-08 #> AVISITVIS3                     10.33317    0.82303 155.66000  12.555  < 2e-16 #> AVISITVIS4                     15.05256    1.30180 138.39000  11.563  < 2e-16 #> ARMCDTRT:AVISITVIS2            -0.01737    1.13154 138.39000   0.015  0.98777 #> ARMCDTRT:AVISITVIS3            -0.66753    1.18714 158.21000   0.562  0.57470 #> ARMCDTRT:AVISITVIS4             0.63094    1.83319 129.64000   0.344  0.73127 #>                                   #> (Intercept)                   *** #> RACEBlack or African American *   #> RACEWhite                     *** #> ARMCDTRT                      *** #> AVISITVIS2                    *** #> AVISITVIS3                    *** #> AVISITVIS4                    *** #> ARMCDTRT:AVISITVIS2               #> ARMCDTRT:AVISITVIS3               #> ARMCDTRT:AVISITVIS4               #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Covariance estimate: #>         VIS1    VIS2    VIS3    VIS4 #> VIS1 40.7335 14.2740  5.1411 13.5288 #> VIS2 14.2740 26.2243  2.6391  7.3219 #> VIS3  5.1411  2.6391 14.9497  1.0341 #> VIS4 13.5288  7.3219  1.0341 95.6006 fit_kr_lin <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   method = \"Kenward-Roger-Linear\" )"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"keeping-unobserved-visits","dir":"Articles","previous_headings":"Common customizations","what":"Keeping Unobserved Visits","title":"Introduction to `mmrm`","text":"Sometimes possible time points observed given data set. using structured covariance matrix, e.g. auto-regressive structure, can relevant keep correct distance observed time points. Consider following example deliberately removed VIS3 observations initial example data set fev_data obtain sparse_data. first fit model drop visit level explicitly, using drop_visit_levels = FALSE choice. Second fit model default without option. see get message dropped visit level default. Now can compare estimated correlation matrices: see using default, second result, just drop VIS3 covariance matrix. consequence, model correlation VIS2 VIS4 correlation VIS1 VIS2. Hence get smaller correlation estimate compared first result, includes VIS3 explicitly.","code":"sparse_data <- fev_data[fev_data$AVISIT != \"VIS3\", ] sparse_result <- mmrm(   FEV1 ~ RACE + ar1(AVISIT | USUBJID),   data = sparse_data,   drop_visit_levels = FALSE )  dropped_result <- mmrm(   FEV1 ~ RACE + ar1(AVISIT | USUBJID),   data = sparse_data ) #> In AVISIT there are dropped visits: VIS3 cov2cor(VarCorr(sparse_result)) #>            VIS1      VIS2      VIS3       VIS4 #> VIS1 1.00000000 0.4051834 0.1641736 0.06652042 #> VIS2 0.40518341 1.0000000 0.4051834 0.16417360 #> VIS3 0.16417360 0.4051834 1.0000000 0.40518341 #> VIS4 0.06652042 0.1641736 0.4051834 1.00000000 cov2cor(VarCorr(dropped_result)) #>            VIS1      VIS2       VIS4 #> VIS1 1.00000000 0.1468464 0.02156386 #> VIS2 0.14684640 1.0000000 0.14684640 #> VIS4 0.02156386 0.1468464 1.00000000"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"extraction-of-model-features","dir":"Articles","previous_headings":"","what":"Extraction of model features","title":"Introduction to `mmrm`","text":"Similar model objects created packages, components mmrm mmrm_tmb objects can accessed standard methods. Additionally, component() provided allow deeper precise access interested digging model output. Complete documentation standard model output methods supported mmrm_tmb objects can found package website.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"summary","dir":"Articles","previous_headings":"Extraction of model features","what":"Summary","title":"Introduction to `mmrm`","text":"summary method mmrm objects provides easy access frequently needed model components. summary object, can easily retrieve coefficients table. model parameters metadata available summary object follows:","code":"fit <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) fit_summary <- summary(fit) fit_summary$coefficients #>                                  Estimate Std. Error       df     t value #> (Intercept)                   30.96769899  0.8293349 187.9132 37.34040185 #> RACEBlack or African American  1.50464863  0.6206596 169.9454  2.42427360 #> RACEWhite                      5.61309565  0.6630909 158.8700  8.46504747 #> ARMCDTRT                       3.77555734  1.0762774 146.2690  3.50797778 #> AVISITVIS2                     4.82858803  0.8017144 143.6593  6.02282805 #> AVISITVIS3                    10.33317002  0.8224414 155.6572 12.56401918 #> AVISITVIS4                    15.05255715  1.3128602 138.3916 11.46546844 #> ARMCDTRT:AVISITVIS2           -0.01737409  1.1291645 138.3926 -0.01538668 #> ARMCDTRT:AVISITVIS3           -0.66753189  1.1865359 158.2106 -0.56258887 #> ARMCDTRT:AVISITVIS4            0.63094392  1.8507884 129.6377  0.34090549 #>                                   Pr(>|t|) #> (Intercept)                   7.122405e-89 #> RACEBlack or African American 1.638725e-02 #> RACEWhite                     1.605553e-14 #> ARMCDTRT                      6.001485e-04 #> AVISITVIS2                    1.366921e-08 #> AVISITVIS3                    1.927523e-25 #> AVISITVIS4                    8.242710e-22 #> ARMCDTRT:AVISITVIS2           9.877459e-01 #> ARMCDTRT:AVISITVIS3           5.745112e-01 #> ARMCDTRT:AVISITVIS4           7.337266e-01 str(fit_summary) #> List of 14 #>  $ cov_type        : chr \"us\" #>  $ reml            : logi TRUE #>  $ n_groups        : int 1 #>  $ n_theta         : int 10 #>  $ n_subjects      : int 197 #>  $ n_timepoints    : int 4 #>  $ n_obs           : int 537 #>  $ beta_vcov       : num [1:10, 1:10] 0.688 -0.207 -0.163 -0.569 -0.422 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:10] \"(Intercept)\" \"RACEBlack or African American\" \"RACEWhite\" \"ARMCDTRT\" ... #>   .. ..$ : chr [1:10] \"(Intercept)\" \"RACEBlack or African American\" \"RACEWhite\" \"ARMCDTRT\" ... #>  $ varcor          : num [1:4, 1:4] 40.73 14.27 5.14 13.53 14.27 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:4] \"VIS1\" \"VIS2\" \"VIS3\" \"VIS4\" #>   .. ..$ : chr [1:4] \"VIS1\" \"VIS2\" \"VIS3\" \"VIS4\" #>  $ method          : chr \"Satterthwaite\" #>  $ coefficients    : num [1:10, 1:5] 30.97 1.5 5.61 3.78 4.83 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:10] \"(Intercept)\" \"RACEBlack or African American\" \"RACEWhite\" \"ARMCDTRT\" ... #>   .. ..$ : chr [1:5] \"Estimate\" \"Std. Error\" \"df\" \"t value\" ... #>  $ n_singular_coefs: int 0 #>  $ aic_list        :List of 4 #>   ..$ AIC     : num 3407 #>   ..$ BIC     : num 3440 #>   ..$ logLik  : num -1694 #>   ..$ deviance: num 3387 #>  $ call            : language fit_mmrm(formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),      data = \"fev_data\", weights = weights| __truncated__ #>  - attr(*, \"class\")= chr \"summary.mmrm\""},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"other-components","dir":"Articles","previous_headings":"Extraction of model features","what":"Other components","title":"Introduction to `mmrm`","text":"Specific model quantities supported methods can retrieved component() function. default output supported components. example, user may want information convergence: original low-level call: user also ask provided components specifying name argument.","code":"component(fit, name = c(\"convergence\", \"evaluations\", \"conv_message\")) #> $convergence #> [1] 0 #>  #> $evaluations #> function gradient  #>       17       17  #>  #> $conv_message #> [1] \"CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH\" component(fit, name = \"call\") #> fit_mmrm(formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT |  #>     USUBJID), data = \"fev_data\", weights = weights, reml = reml,  #>     control = control) component(fit)"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"low-level-mmrm","dir":"Articles","previous_headings":"Lower level functions","what":"Low-level mmrm","title":"Introduction to `mmrm`","text":"lower level function called mmrm() fit_mmrm(). function exported can used directly. similar mmrm() lacks post-processing support Satterthwaite Kenward-Roger calculations. may useful packages want fit model without adjustment calculations.","code":"fit_mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   weights = rep(1, nrow(fev_data)),   reml = TRUE,   control = mmrm_control() ) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      REML #> Deviance:    3387.373 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   30.96769899                    1.50464863  #>                     RACEWhite                      ARMCDTRT  #>                    5.61309565                    3.77555734  #>                    AVISITVIS2                    AVISITVIS3  #>                    4.82858803                   10.33317002  #>                    AVISITVIS4           ARMCDTRT:AVISITVIS2  #>                   15.05255715                   -0.01737409  #>           ARMCDTRT:AVISITVIS3           ARMCDTRT:AVISITVIS4  #>                   -0.66753189                    0.63094392  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"hypothesis-testing","dir":"Articles","previous_headings":"","what":"Hypothesis testing","title":"Introduction to `mmrm`","text":"package supports estimation one- multi-dimensional contrasts (t-test F-test calculation) df_1d() df_md() functions. functions utilize chosen adjustment method initial mmrm call calculation degrees freedom (Kenward-Roger methods) variance estimates test-statistics.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"one-dimensional-contrasts","dir":"Articles","previous_headings":"Hypothesis testing","what":"One-dimensional contrasts","title":"Introduction to `mmrm`","text":"Compute test one-dimensional (vector) contrast mmrm object Satterthwaite degrees freedom. works similarly choosing Kenward-Roger adjustment: see one-dimensional contrast, degrees freedoms identical Satterthwaite Kenward-Roger. However, standard errors different therefore p-values different.","code":"fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data )  contrast <- numeric(length(component(fit, \"beta_est\"))) contrast[3] <- 1  df_1d(fit, contrast) #> $est #> [1] 5.643565 #>  #> $se #> [1] 0.6656093 #>  #> $df #> [1] 157.1382 #>  #> $t_stat #> [1] 8.478795 #>  #> $p_val #> [1] 1.564869e-14 fit_kr <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   method = \"Kenward-Roger\" )  df_1d(fit_kr, contrast) #> $est #> [1] 5.643565 #>  #> $se #> [1] 0.6740941 #>  #> $df #> [1] 157.1382 #>  #> $t_stat #> [1] 8.372073 #>  #> $p_val #> [1] 2.931654e-14"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"multi-dimensional-contrasts","dir":"Articles","previous_headings":"Hypothesis testing","what":"Multi-dimensional contrasts","title":"Introduction to `mmrm`","text":"Compute test multi-dimensional (matrix) contrast defined mmrm object Satterthwaite degrees freedom: Kenward-Roger adjustment: see multi-dimensional contrast get slightly different denominator degrees freedom two adjustment methods.","code":"contrast <- matrix(data = 0, nrow = 2, ncol = length(component(fit, \"beta_est\"))) contrast[1, 2] <- contrast[2, 3] <- 1  df_md(fit, contrast) #> $num_df #> [1] 2 #>  #> $denom_df #> [1] 165.5553 #>  #> $f_stat #> [1] 36.91143 #>  #> $p_val #> [1] 5.544575e-14 df_md(fit_kr, contrast) #> $num_df #> [1] 2 #>  #> $denom_df #> [1] 165.5728 #>  #> $f_stat #> [1] 35.99422 #>  #> $p_val #> [1] 1.04762e-13"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"support-for-emmeans","dir":"Articles","previous_headings":"Hypothesis testing","what":"Support for emmeans","title":"Introduction to `mmrm`","text":"package includes methods allow mmrm objects used emmeans package. emmeans computes estimated marginal means (also called least-square means) coefficients MMRM.","code":"fit <- mmrm(   formula = FEV1 ~ RACE + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data )  if (require(emmeans)) {   emmeans(fit, ~ ARMCD | AVISIT) } #> Loading required package: emmeans #> AVISIT = VIS1: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     33.3 0.757 149     31.8     34.8 #>  TRT     37.1 0.764 144     35.6     38.6 #>  #> AVISIT = VIS2: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     38.2 0.608 150     37.0     39.4 #>  TRT     41.9 0.598 146     40.7     43.1 #>  #> AVISIT = VIS3: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     43.7 0.462 131     42.8     44.6 #>  TRT     46.8 0.507 130     45.8     47.8 #>  #> AVISIT = VIS4: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     48.4 1.189 134     46.0     50.7 #>  TRT     52.8 1.188 133     50.4     55.1 #>  #> Results are averaged over the levels of: RACE  #> Confidence level used: 0.95"},{"path":"https://openpharma.github.io/mmrm/main/articles/introduction.html","id":"acknowledgments","dir":"Articles","previous_headings":"","what":"Acknowledgments","title":"Introduction to `mmrm`","text":"mmrm package based previous work internal Roche, namely tern tern.mmrm packages based lme4. work done rbmi package important since used glmmTMB fitting MMRMs. like thank Ben Bolker glmmTMB team multiple discussions tried get Satterthwaite degrees freedom implemented glmmTMB (see https://github.com/glmmTMB/glmmTMB/blob/satterthwaite_df/glmmTMB/vignettes/satterthwaite_unstructured_example2.Rmd). Also Ben helped us significantly example showing use TMB random effect vector (https://github.com/bbolker/tmb-case-studies/tree/master/vectorMixed).","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"model-definition","dir":"Articles","previous_headings":"","what":"Model definition","title":"Details of the Kenward-Roger calculations","text":"model definition Details model fitting mmrm. using notations.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"linear-model","dir":"Articles","previous_headings":"Model definition","what":"Linear model","title":"Details of the Kenward-Roger calculations","text":"subject \\(\\) observe vector \\[ Y_i = (y_{i1}, \\dotsc, y_{im_i})^\\top \\\\mathbb{R}^{m_i} \\] given design matrix \\[ X_i \\\\mathbb{R}^{m_i \\times p} \\] corresponding coefficient vector \\(\\beta \\\\mathbb{R}^{p}\\) assume observations multivariate normal distributed: \\[ Y_i \\sim N(X_i\\beta, \\Sigma_i) \\] covariance matrix \\(\\Sigma_i \\\\mathbb{R}^{m_i \\times m_i}\\) derived subsetting overall covariance matrix \\(\\Sigma \\\\mathbb{R}^{m \\times m}\\) appropriately \\[ \\Sigma_i = G_i^{-1/2} S_i^\\top \\Sigma S_i G_i^{-1/2} \\] subsetting matrix \\(S_i \\\\{0, 1\\}^{m \\times m_i}\\) contains \\(m_i\\) columns contains single 1 indicating overall time point matching \\(t_{ih}\\). \\(G_i \\\\mathbb{R}_{\\gt 0}^{m_i \\times m_i}\\) diagonal weight matrix. Conditional design matrices \\(X_i\\), coefficient vector \\(\\beta\\) covariance matrix \\(\\Sigma\\) assume observations independent subjects. can write linear model subjects together \\[ Y = X\\beta + \\epsilon \\] \\(Y \\\\mathbb{R}^N\\) combines subject specific observations vectors \\(Y_i\\) total \\(N = \\sum_{= 1}^{n}{m_i}\\) observations, \\(X \\\\mathbb{R}^{N \\times p}\\) combines subject specific design matrices \\(\\epsilon \\\\mathbb{R}^N\\) multivariate normal distribution \\[ \\epsilon \\sim N(0, \\Omega) \\] \\(\\Omega \\\\mathbb{R}^{N \\times N}\\) block-diagonal containing subject specific \\(\\Sigma_i\\) covariance matrices diagonal 0 remaining entries.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"mathematical-details-of-kenward-roger-method","dir":"Articles","previous_headings":"","what":"Mathematical Details of Kenward-Roger method","title":"Details of the Kenward-Roger calculations","text":"mathematical derivation Kenward-Roger method based Taylor expansion obtained covariance matrix \\(\\hat\\beta\\) get accurate estimate . derivations based restricted maximum likelihood. Following notation, covariance matrix, \\(\\Omega\\) can represented function covariance matrix parameters \\(\\theta = (\\theta_1, \\dotsc, \\theta_k)^\\top\\), .e. \\(\\Omega(\\theta)\\). model fitting mmrm, obtain estimate \\(\\hat\\beta = \\Phi(\\hat\\theta)X^\\top\\Omega(\\hat\\theta)^{-1}Y\\), \\(\\Phi(\\theta) = \\left\\{X^\\top \\Omega(\\theta)^{-1} X\\right\\} ^{-1}\\) asymptotic covariance matrix \\(\\hat\\beta\\). However, Kackar Harville (1984) suggests although \\(\\hat\\beta\\) unbiased \\(\\beta\\), covariance matrix, \\(\\hat\\Phi = \\left\\{X^\\top \\hat\\Omega X\\right\\}^{-1}\\) can biased. showed variability \\(\\hat\\beta\\) can partitioned two components, \\[   \\Phi_A = \\Phi + \\Lambda \\] \\(\\Phi\\) variance-covariance matrix asymptotic distribution \\(\\hat\\beta\\) \\(n\\rightarrow \\infty\\) defined , \\(\\Lambda\\) represents amount asymptotic variance-covariance matrix underestimates \\(\\Phi_A\\). Based Taylor series expansion around \\(\\theta\\), \\(\\Lambda\\) can approximated \\[   \\Lambda \\simeq \\Phi \\left\\{\\sum_{h=1}^k{\\sum_{j=1}^k{W_{hj}(Q_{hj} - P_h \\Phi P_j)} }\\right\\} \\Phi \\] \\[   P_h = X^\\top \\frac{\\partial{\\Omega^{-1}}}{\\partial \\theta_h} X \\] \\[   Q_{hj} = X^\\top \\frac{\\partial{\\Omega^{-1}}}{\\partial \\theta_h} \\Omega \\frac{\\partial{\\Omega^{-1}}}{\\partial \\theta_j} X \\] \\(W\\) inverse Hessian matrix log-likelihood function \\(\\theta\\) evaluated estimate \\(\\hat\\theta\\), .e. observed Fisher Information matrix consistent estimator variance-covariance matrix \\(\\hat\\theta\\). , based Taylor series expansion \\(\\theta\\), Kenward Roger (1997) show \\[   \\hat\\Phi \\simeq \\Phi + \\sum_{h=1}^k{(\\hat\\theta_h - \\theta_h)\\frac{\\partial{\\Phi}}{\\partial{\\theta_h}}} + \\frac{1}{2} \\sum_{h=1}^k{\\sum_{j=1}^k{(\\hat\\theta_h - \\theta_h)(\\hat\\theta_j - \\theta_j)\\frac{\\partial^2{\\Phi}}{\\partial{\\theta_h}\\partial{\\theta_j}}}} \\] Ignoring possible bias \\(\\hat\\theta\\), \\[   E(\\hat\\Phi) \\simeq \\Phi + \\frac{1}{2} \\sum_{h=1}^k{\\sum_{j=1}^k{W_{hj}\\frac{\\partial^2{\\Phi}}{\\partial{\\theta_h}\\partial{\\theta_j}}}} \\] Using previously defined notations, can written \\[   \\frac{\\partial^2{\\Phi}}{\\partial{\\theta_h}\\partial{\\theta_j}} = \\Phi (P_h \\Phi P_j + P_j \\Phi P_h - Q_{hj} - Q_{jh} + R_{hj}) \\Phi \\] \\[   R_{hj} = X^\\top\\Omega^{-1}\\frac{\\partial^2\\Omega}{\\partial{\\theta_h}\\partial{\\theta_j}} \\Omega^{-1} X \\] substituting \\(\\Phi\\) \\(\\Lambda\\) back \\(\\hat\\Phi_A\\), \\[   \\hat\\Phi_A = \\hat\\Phi + 2\\hat\\Phi \\left\\{\\sum_{h=1}^k{\\sum_{j=1}^k{W_{hj}(Q_{hj} - P_h \\hat\\Phi P_j - \\frac{1}{4}R_{hj})} }\\right\\} \\hat\\Phi \\] \\(\\Omega(\\hat\\theta)\\) replaces \\(\\Omega(\\theta)\\) right-hand side. Please note , ignore \\(R_{hj}\\), second-order derivatives, get different estimate adjusted covariance matrix, call linear Kenward-Roger approximation.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"special-considerations-for-mmrm-models","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Special Considerations for mmrm models","title":"Details of the Kenward-Roger calculations","text":"mmrm models, \\(\\Omega\\) block-diagonal matrix, hence can calculate \\(P\\), \\(Q\\) \\(R\\) subject add . \\[   P_h = \\sum_{=1}^{N}{P_{ih}} = \\sum_{=1}^{N}{X_i^\\top \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_h} X_i} \\] \\[   Q_{hj} = \\sum_{=1}^{N}{Q_{ihj}} = \\sum_{=1}^{N}{X_i^\\top \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_h} \\Sigma_i \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_j} X_i} \\] \\[   R_{hj} = \\sum_{=1}^{N}{R_{ihj}} = \\sum_{=1}^{N}{X_i^\\top\\Sigma_i^{-1}\\frac{\\partial^2\\Sigma_i}{\\partial{\\theta_h}\\partial{\\theta_j}} \\Sigma_i^{-1} X_i} \\]","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"derivative-of-the-overall-covariance-matrix-sigma","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Derivative of the overall covariance matrix \\(\\Sigma\\)","title":"Details of the Kenward-Roger calculations","text":"derivative overall covariance matrix \\(\\Sigma\\) respect variance parameters can calculated derivatives Cholesky factor, hence obtained automatic differentiation, following matrix identities calculations. \\[   \\frac{\\partial{\\Sigma}}{\\partial{\\theta_h}} = \\frac{\\partial{LL^\\top}}{\\partial{\\theta_h}} = \\frac{\\partial{L}}{\\partial{\\theta_h}}L^\\top + L\\frac{\\partial{L^\\top}}{\\partial{\\theta_h}} \\] \\[   \\frac{\\partial^2{\\Sigma}}{\\partial{\\theta_h}\\partial{\\theta_j}} = \\frac{\\partial^2{L}}{\\partial{\\theta_h}\\partial{\\theta_j}}L^\\top + L\\frac{\\partial^2{L^\\top}}{\\partial{\\theta_h}\\partial{\\theta_j}} + \\frac{\\partial{L}}{\\partial{\\theta_h}}\\frac{\\partial{L^T}}{\\partial{\\theta_j}} + \\frac{\\partial{L}}{\\partial{\\theta_j}}\\frac{\\partial{L^\\top}}{\\partial{\\theta_h}} \\]","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"derivative-of-the-sigma-1","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Derivative of the \\(\\Sigma^{-1}\\)","title":"Details of the Kenward-Roger calculations","text":"derivatives \\(\\Sigma^{-1}\\) can calculated \\[   \\frac{\\partial{\\Sigma\\Sigma^{-1}}}{\\partial{\\theta_h}}\\\\   = \\frac{\\partial{\\Sigma}}{\\partial{\\theta_h}}\\Sigma^{-1} + \\Sigma\\frac{\\partial{\\Sigma^{-1}}}{\\partial{\\theta_h}} \\\\   = 0 \\] \\[   \\frac{\\partial{\\Sigma^{-1}}}{\\partial{\\theta_h}} = - \\Sigma^{-1} \\frac{\\partial{\\Sigma}}{\\partial{\\theta_h}}\\Sigma^{-1} \\]","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"subjects-with-missed-visits","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Subjects with missed visits","title":"Details of the Kenward-Roger calculations","text":"subject visits, corresponding covariance matrix can represented \\[   \\Sigma_i = S_i^\\top \\Sigma S_i \\] derivatives can obtained \\[   \\frac{\\partial{\\Sigma_i}}{\\partial{\\theta_h}} = S_i^\\top \\frac{\\partial{\\Sigma}}{\\partial{\\theta_h}} S_i \\] \\[   \\frac{\\partial^2{\\Sigma_i}}{\\partial{\\theta_h}\\partial{\\theta_j}} = S_i^\\top \\frac{\\partial^2{\\Sigma}}{\\partial{\\theta_h}\\partial{\\theta_j}} S_i \\] derivative \\(\\Sigma_i^{-1}\\), \\(\\frac{\\partial\\Sigma_i^{-1}}{\\partial{\\theta_h}}\\) can calculated \\(\\Sigma_i^{-1}\\) \\(\\frac{\\partial{\\Sigma_i}}{\\partial{\\theta_h}}\\) using .","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"scenario-under-group-specific-covariance-estimates","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Scenario under group specific covariance estimates","title":"Details of the Kenward-Roger calculations","text":"fitting grouped mmrm models, covariance matrix subject group \\(g()\\), can written \\[   \\Sigma_i = S_i^\\top \\Sigma_{g()} S_i$. \\] Assume \\(B\\) groups, number parameters increased \\(B\\) times. fact group, corresponding \\(\\theta\\) affect parts, block-diagonal \\(P\\), \\(Q\\) \\(R\\) matrices, blocks given : \\[ P_h = \\begin{pmatrix} P_{h, 1} & \\dots & P_{h, B} \\\\ \\end{pmatrix} \\] \\[ Q_{hj} = \\begin{pmatrix} Q_{hj, 1} & 0 & \\dots & \\dots & 0 \\\\ 0 & Q_{hj, 2} & 0 & \\dots & 0\\\\ \\vdots & & \\ddots & & \\vdots \\\\ \\vdots & & & \\ddots & \\vdots \\\\ 0 & \\dots & \\dots & 0 & Q_{hj, B} \\end{pmatrix} \\] \\[ R_{hj} = \\begin{pmatrix} R_{hj, 1} & 0 & \\dots & \\dots & 0 \\\\ 0 & R_{hj, 2} & 0 & \\dots & 0\\\\ \\vdots & & \\ddots & & \\vdots \\\\ \\vdots & & & \\ddots & \\vdots \\\\ 0 & \\dots & \\dots & 0 & R_{hj, B} \\end{pmatrix} \\] Use \\(P_{j, b}\\) denote block diagonal part group \\(b\\), \\[   P_{h,b} = \\sum_{g() = b}{P_{ih}} = \\sum_{g() = b}{X_i^\\top \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_h} X_i} \\] \\[   Q_{hj,b} = \\sum_{g() = b}{Q_{ihj}} = \\sum_{g() = b}{X_i^\\top \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_h} \\Sigma_i \\frac{\\partial{\\Sigma_i^{-1}}}{\\partial \\theta_j} X_i} \\] \\[   R_{hj,b} = \\sum_{g() = b}{R_{ihj}} = \\sum_{g() = b}{X_i^\\top\\Sigma_i^{-1}\\frac{\\partial^2\\Sigma_i}{\\partial{\\theta_h}\\partial{\\theta_j}} \\Sigma_i^{-1} X_i} \\] Similarly \\(R\\).","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"scenario-under-weighted-mmrm","dir":"Articles","previous_headings":"Mathematical Details of Kenward-Roger method","what":"Scenario under weighted mmrm","title":"Details of the Kenward-Roger calculations","text":"weights mmrm model, covariance matrix subject \\(\\), can represented \\[   \\Sigma_i = G_i^{-1/2} S_i^\\top \\Sigma S_i G_i^{-1/2} \\] \\(G_i\\) diagonal matrix weights. , deriving \\(P\\), \\(Q\\) \\(R\\), mathematical differences constant, \\(G_i\\) addition \\(S_i\\) change algorithms can simply multiply formulas \\(G_i^{-1/2}\\), similarly subsetting matrix.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"inference","dir":"Articles","previous_headings":"","what":"Inference","title":"Details of the Kenward-Roger calculations","text":"Suppose testing linear combination \\(\\beta\\), \\(C\\beta\\) \\(C \\\\mathbb{R}^{c\\times p}\\), can use following F-statistic \\[   F = \\frac{1}{c} (\\hat\\beta - \\beta)^\\top  C (C^\\top \\hat\\Phi_A C)^{-1} C^\\top (\\hat\\beta - \\beta) \\] \\[   F^* = \\lambda F \\] follows exact \\(F_{c,m}\\) distribution. one coefficient test, \\(C\\) column vector containing single \\(1\\) inside. can still follow calculations multi-dimensional case. recovers degrees freedom results Satterthwaite method. \\(\\lambda\\) \\(m\\) can calculated \\[   M = C (C^\\top \\Phi C)^{-1} C^\\top \\] \\[   A_1 = \\sum_{h=1}^k{\\sum_{j=1}^k{W_{hj} tr(M \\Phi P_h \\Phi) tr(M \\Phi P_j \\Phi)}} \\] \\[   A_2 = \\sum_{h=1}^k{\\sum_{j=1}^k{W_{hj} tr(M \\Phi P_h \\Phi M \\Phi P_j \\Phi)}} \\] \\[   B = \\frac{1}{2c}(A_1 + 6A_2) \\] \\[   g = \\frac{(c+1)A_1 - (c+4)A_2}{(c+2)A_2} \\] \\[   c_1 = \\frac{g}{3c+2(1-g)} \\] \\[   c_2 = \\frac{c-g}{3c+2(1-g)} \\] \\[   c_3 = \\frac{c+2-g}{3c+2(1-g)} \\] \\[E^*={\\left\\{1-\\frac{A_2}{c}\\right\\}}^{-1}\\] \\[V^*=\\frac{2}{c}{\\left\\{\\frac{1+c_1 B}{(1-c_2 B)^2(1-c_3 B)}\\right\\}}\\] \\[\\rho = \\frac{V^{*}}{2(E^*)^2}\\] \\[m = 4 + \\frac{c+2}{c\\rho - 1}\\] \\[\\lambda = \\frac{m}{E^*(m-2)}\\]","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/kenward.html","id":"parameterization-methods-and-kenward-roger","dir":"Articles","previous_headings":"","what":"Parameterization methods and Kenward-Roger","title":"Details of the Kenward-Roger calculations","text":"Kenward-Roger adjusted covariance matrix adopting Taylor series approximate true value, choices parameterization can change result. simple example unstructured covariance structure, current approach, parameters elements Cholesky factor \\(\\Sigma\\) (see parameterization), second-order derivatives \\(\\Sigma\\) parameters, non-zero matrices. However, use elements \\(\\Sigma\\) parameters, second-order derivatives zero matrices. However, differences can small affect inference. like match SAS results unstructured covariance model, can use linear Kenward-Roger approximation.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Package Structure","text":"mmrm package built TMB complex structure, might hard new developers onboard. make easier new developers join, documentation created.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"package-structures","dir":"Articles","previous_headings":"","what":"Package Structures","title":"Package Structure","text":"mmrm R package, following sections describe files/folders contained package.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"data","dir":"Articles","previous_headings":"Package Structures","what":"data","title":"Package Structure","text":"data/ folder mmrm internal data stored. See fev_data documentation introduction vignette details.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"design","dir":"Articles","previous_headings":"Package Structures","what":"design","title":"Package Structure","text":"design/ folder prototypes SAS implementations stored. new idea specific implementations, can add prototypes Rmarkdown file folder. can push prototypes github collect feedback proposed ideas. Currently SAS TMB folders.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"sas","dir":"Articles","previous_headings":"Package Structures > design","what":"SAS","title":"Package Structure","text":"design/SAS/ folder contains programs run MMRM models corresponding SAS outputs. results used integration tests. See integration tests.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"tmb","dir":"Articles","previous_headings":"Package Structures > design","what":"TMB","title":"Package Structure","text":"design/TMB/ folder prototypes mmrm implementations stored. can add ideas/prototypes .","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"inst","dir":"Articles","previous_headings":"Package Structures","what":"inst","title":"Package Structure","text":"Files inst/ folder kept installation. REFERENCES.bib keeps list referenced literature. WORDLIST kept --date non-English words, allowing package pass spell-checker.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"man","dir":"Articles","previous_headings":"Package Structures","what":"man","title":"Package Structure","text":"man/ folder contains function documentation generated Roxygen. Please edit file folder otherwise may run issues.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"r","dir":"Articles","previous_headings":"Package Structures","what":"R","title":"Package Structure","text":"folder contains source code written R, just like every R packages. Please refer documentation page details.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"src","dir":"Articles","previous_headings":"Package Structures","what":"src","title":"Package Structure","text":"src folders includes source code written C++. Files starting test- tests.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"covariance-h","dir":"Articles","previous_headings":"Package Structures > src","what":"covariance.h","title":"Package Structure","text":"file includes implementations covariance structures suitable parameterization, calculation lower triangular part Cholesky factorization covariance matrix. implementations Cholesky factorization needed, visit mmrm details vignette. covariance structures, visit covariance structures vignette.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"init-h","dir":"Articles","previous_headings":"Package Structures > src","what":"init.h","title":"Package Structure","text":"file includes initialization R C++ communication.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"mmrm-cpp","dir":"Articles","previous_headings":"Package Structures > src","what":"mmrm.cpp","title":"Package Structure","text":"file core part likelihood calculated. objective function reads input R calculations inside.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"utils-h","dir":"Articles","previous_headings":"Package Structures > src","what":"utils.h","title":"Package Structure","text":"files includes utilities used internally.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"tmb-cpp-and-tmb_includes-h","dir":"Articles","previous_headings":"Package Structures > src","what":"tmb.cpp and tmb_includes.h","title":"Package Structure","text":"two files includes TMB module.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"test--files","dir":"Articles","previous_headings":"Package Structures > src","what":"test- files","title":"Package Structure","text":"files starting test- unit tests C++ codes.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"tests","dir":"Articles","previous_headings":"Package Structures","what":"tests","title":"Package Structure","text":"tests/ folder includes unit tests R functions, using testthat package.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"vignettes","dir":"Articles","previous_headings":"Package Structures","what":"vignettes","title":"Package Structure","text":"vignettes/ folder includes Rmarkdown-based documentation helps user understand usage, detail, etc. vignettes rendered .html files deployed package website.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"other-files","dir":"Articles","previous_headings":"Package Structures","what":"other files","title":"Package Structure","text":"files can helpful package development.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"gitignore","dir":"Articles","previous_headings":"Package Structures > other files","what":".gitignore","title":"Package Structure","text":"file specify untracked files/file patterns git ignore.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"lintr","dir":"Articles","previous_headings":"Package Structures > other files","what":".lintr","title":"Package Structure","text":"file serves configuration lintr static code analysis. Please install lintr package developing system enable analysis. provide information errors, style issues, etc. , visit lintr documentation.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"pre-commit-config-yaml","dir":"Articles","previous_headings":"Package Structures > other files","what":".pre-commit-config.yaml","title":"Package Structure","text":"file includes configurations use pre-commit. pre-commit tool help us identify simple issues submit code. , visit pre-commit documentation.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"pkgdown-yml","dir":"Articles","previous_headings":"Package Structures > other files","what":"_pkgdown.yml","title":"Package Structure","text":"file configuration file pkgdown-based website. pkgdown used covert package documentation (man/, vignettes/) package website. , visit pkgdown documentation.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/package_structure.html","id":"staged_dependencies-yaml","dir":"Articles","previous_headings":"Package Structures > other files","what":"staged_dependencies.yaml","title":"Package Structure","text":"file configuration file staged.dependencies. staged.dependencies used ensure dependencies consistent across multiple repositories developing time. , visit staged.dependencies documentation.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/satterthwaite.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Details of the Satterthwaite calculations","text":"Christensen (2018) Satterthwaite degrees freedom approximation based normal models well detailed computational approach models fitted lme4 package explained. follow algorithm explain implementation mmrm package. model definition Details model fitting mmrm. also using notation Details Kenward-Roger calculations. particular, assume contrast matrix \\(C \\\\mathbb{R}^{c\\times p}\\) want test linear hypothesis \\(C\\beta = 0\\). , \\(W(\\hat\\theta)\\) inverse Hessian matrix log-likelihood function \\(\\theta\\) evaluated estimate \\(\\hat\\theta\\), .e. observed Fisher Information matrix consistent estimator variance-covariance matrix \\(\\hat\\theta\\). \\(\\Phi(\\theta) = \\left\\{X^\\top \\Omega(\\theta)^{-1} X\\right\\} ^{-1}\\) asymptotic covariance matrix \\(\\hat\\beta\\).","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/satterthwaite.html","id":"one-dimensional-contrast","dir":"Articles","previous_headings":"","what":"One-dimensional contrast","title":"Details of the Satterthwaite calculations","text":"start case one-dimensional contrast, .e. \\(c = 1\\). Satterthwaite adjusted degrees freedom corresponding t-test defined : \\[ \\hat\\nu(\\hat\\theta) = \\frac{2f(\\hat\\theta)^2}{f{'}(\\hat\\theta)^\\top W(\\hat\\theta) f{'}(\\hat\\theta)} \\] \\(f(\\hat\\theta) = C \\Phi(\\hat\\theta) C^\\top\\) scalar numerator can identify variance estimate estimated scalar contrast \\(C\\hat\\beta\\). computational challenge essentially evaluate denominator expression \\(\\hat\\nu(\\hat\\theta)\\), amounts computing \\(k\\)-dimensional gradient \\(f{'}(\\hat\\theta)\\) \\(f(\\theta)\\) (given contrast matrix \\(C\\)) estimate \\(\\hat\\theta\\). already variance-covariance matrix \\(W(\\hat\\theta)\\) variance parameter vector \\(\\theta\\) model fitting.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/satterthwaite.html","id":"jacobian-approach","dir":"Articles","previous_headings":"One-dimensional contrast","what":"Jacobian approach","title":"Details of the Satterthwaite calculations","text":"However, proceeded naive way , need recompute denominator every chosen \\(C\\). slow, e.g. changing \\(C\\) every time want test single coefficient within \\(\\beta\\). better instead evaluate gradient matrix valued function \\(\\Phi(\\theta)\\), therefore Jacobian, regards \\(\\theta\\), \\(\\mathcal{J}(\\theta) = \\nabla_\\theta \\Phi(\\theta)\\). Imagine \\(\\mathcal{J}(\\theta)\\) 3-dimensional array \\(k\\) faces size \\(p\\times p\\). Left right multiplying face \\(C\\) \\(C^\\top\\) respectively leads \\(k\\)-dimensional gradient \\(f'(\\theta) = C \\mathcal{J}(\\theta) C^\\top\\). Therefore new contrast \\(C\\) just need perform simple matrix multiplications, fast (see h_gradient() implemented). Thus, computed estimated Jacobian \\(\\mathcal{J}(\\hat\\theta)\\), matter putting different quantities together compute estimate denominator degrees freedom, \\(\\hat\\nu(\\hat\\theta)\\).","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/satterthwaite.html","id":"jacobian-calculation","dir":"Articles","previous_headings":"One-dimensional contrast","what":"Jacobian calculation","title":"Details of the Satterthwaite calculations","text":"Currently, evaluate gradient \\(\\Phi(\\theta)\\) (created R function using h_covbeta_fun()) regards \\(\\theta\\) evaluated \\(\\hat\\theta\\), .e. Jacobian \\(\\mathcal{J}(\\hat\\theta)\\), numerically using jacobian function numDeriv package organize list (length \\(k\\) \\(k\\) dimension variance parameter vector \\(\\theta\\)) \\(c\\times p\\) matrices \\(p\\) dimension \\(\\beta\\). implemented function h_jac_list().","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/satterthwaite.html","id":"multi-dimensional-contrast","dir":"Articles","previous_headings":"","what":"Multi-dimensional contrast","title":"Details of the Satterthwaite calculations","text":"\\(c > 1\\) testing multiple contrasts . F-statistic \\[ F = \\frac{1}{c} (C\\hat\\beta)^\\top  (C \\Phi(\\hat\\theta) C^\\top)^{-1} C^\\top (C\\hat\\beta) \\] calculated, interested estimating appropriate denominator degrees freedom \\(F\\), assuming \\(c\\) numerator degrees freedom. Note special cases, orthogonal balanced designs, F distribution exact null hypothesis. general, approximation. calculations described detail Christensen (2018), don’t repeat detail. implementation h_df_md_sat() starts eigen-decomposition asymptotic variance-covariance matrix contrast estimate, .e. \\(C \\Phi(\\hat\\theta) C^\\top\\). F-statistic can rewritten sum \\(t^2\\) statistics based eigen-values. corresponding random variables independent (design derived orthogonal eigen-vectors) essentially one degree freedom . Hence, \\(t\\) statistics treated one-dimensional contrast case, .e. denominator degree freedom calculated . Finally, using properties F distribution’s expectation, denominator degree freedom whole F statistic derived.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/articles/tests_and_coverage.html","id":"coverage","dir":"Articles","previous_headings":"","what":"Coverage","title":"Tests and Coverage","text":"Coverage summary created using covr package.","code":""},{"path":"https://openpharma.github.io/mmrm/main/articles/tests_and_coverage.html","id":"unit-tests","dir":"Articles","previous_headings":"","what":"Unit Tests","title":"Tests and Coverage","text":"Unit Test summary created using testthat package.","code":""},{"path":"https://openpharma.github.io/mmrm/main/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Sabanes Bove. Author, maintainer. Julia Dedic. Author. Doug Kelkhoff. Author. Kevin Kunzmann. Author. Brian Matthew Lang. Author. Liming Li. Author. Ya Wang. Author. Craig Gower-Page. Contributor. Boehringer Ingelheim Ltd.. Copyright holder, funder. Gilead Sciences, Inc.. Copyright holder, funder. F. Hoffmann-La Roche AG. Copyright holder, funder. Merck Sharp & Dohme, Inc.. Copyright holder, funder.","code":""},{"path":"https://openpharma.github.io/mmrm/main/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sabanes Bove D, Dedic J, Kelkhoff D, Kunzmann K, Lang B, Li L, Wang Y (2022). mmrm: Mixed Models Repeated Measures. R package version 0.2.2.9000, https://openpharma.github.io/mmrm/.","code":"@Manual{,   title = {mmrm: Mixed Models for Repeated Measures},   author = {Daniel {Sabanes Bove} and Julia Dedic and Doug Kelkhoff and Kevin Kunzmann and Brian Matthew Lang and Liming Li and Ya Wang},   year = {2022},   note = {R package version 0.2.2.9000},   url = {https://openpharma.github.io/mmrm/}, }"},{"path":"https://openpharma.github.io/mmrm/main/index.html","id":"mmrm-","dir":"","previous_headings":"","what":"Mixed Models for Repeated Measures","title":"Mixed Models for Repeated Measures","text":"Mixed models repeated measures (MMRM) popular choice analyzing longitudinal continuous outcomes randomized clinical trials beyond; see Cnaan, Laird Slasor (1997) tutorial Mallinckrodt, Lane Schnell (2008) review. package implements MMRM based marginal linear model without random effects using Template Model Builder (TMB) enables fast robust model fitting. Users can specify variety covariance matrices, weight observations, fit models restricted standard maximum likelihood inference, perform hypothesis testing Satterthwaite Kenward-Roger adjustment, extract least square means estimates using emmeans. Scope: Continuous responses normal (potentially heteroscedastic) residuals. Marginal linear models (individual-level random effects). Main Features: Structures: unstructured, Toeplitz, AR1, compound symmetry, ante-dependence, spatial exponential. Groups: shared covariance structure subjects group-specific covariance estimates. Variances: homogeneous heterogeneous across time points. Least square means: can obtained emmeans package One- multi-dimensional linear contrasts model parameters can tested. Satterthwaite adjusted degrees freedom. Kenward-Roger adjusted degrees freedom coefficients covariance matrix. Supports REML ML. Supports weights. Fast implementation using C++ automatic differentiation obtain precise gradient information model fitting. See details model fitting algorithm used mmrm.","code":""},{"path":"https://openpharma.github.io/mmrm/main/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mixed Models for Repeated Measures","text":"CRAN can install current stable version CRAN : GitHub can install current development version GitHub :","code":"install.packages(\"mmrm\") if (!require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"openpharma/mmrm\")"},{"path":"https://openpharma.github.io/mmrm/main/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Mixed Models for Repeated Measures","text":"See also introductory vignette get started trying example: code specifies MMRM given covariates unstructured covariance matrix timepoints (also called visits clinical trial context, given AVISIT) within subjects (USUBJID). default uses restricted maximum likelihood (REML), also possible use ML, see ?mmrm. can look results high-level: summary() method provides coefficients table Satterthwaite degrees freedom well covariance matrix estimate:","code":"library(mmrm) fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) fit #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      REML #> Deviance:    3386.45 #>  #> Coefficients:  #>                   (Intercept) RACEBlack or African American  #>                   30.77747548                    1.53049977  #>                     RACEWhite                     SEXFemale  #>                    5.64356535                    0.32606192  #>                      ARMCDTRT                    AVISITVIS2  #>                    3.77423004                    4.83958845  #>                    AVISITVIS3                    AVISITVIS4  #>                   10.34211288                   15.05389826  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                   -0.04192625                   -0.69368537  #>           ARMCDTRT:AVISITVIS4  #>                    0.62422703  #>  #> Model Inference Optimization: #> Converged with code 0 and message: convergence: rel_reduction_of_f <= factr*epsmch summary(fit) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      Satterthwaite #> Inference:   REML #>  #> Model selection criteria: #>      AIC      BIC   logLik deviance  #>   3406.4   3439.3  -1693.2   3386.4  #>  #> Coefficients:  #>                                Estimate Std. Error        df t value Pr(>|t|) #> (Intercept)                    30.77748    0.88656 218.80000  34.715  < 2e-16 #> RACEBlack or African American   1.53050    0.62448 168.67000   2.451 0.015272 #> RACEWhite                       5.64357    0.66561 157.14000   8.479 1.56e-14 #> SEXFemale                       0.32606    0.53195 166.13000   0.613 0.540744 #> ARMCDTRT                        3.77423    1.07415 145.55000   3.514 0.000589 #> AVISITVIS2                      4.83959    0.80172 143.88000   6.037 1.27e-08 #> AVISITVIS3                     10.34211    0.82269 155.56000  12.571  < 2e-16 #> AVISITVIS4                     15.05390    1.31281 138.47000  11.467  < 2e-16 #> ARMCDTRT:AVISITVIS2            -0.04193    1.12932 138.56000  -0.037 0.970439 #> ARMCDTRT:AVISITVIS3            -0.69369    1.18765 158.17000  -0.584 0.559996 #> ARMCDTRT:AVISITVIS4             0.62423    1.85085 129.72000   0.337 0.736463 #>                                   #> (Intercept)                   *** #> RACEBlack or African American *   #> RACEWhite                     *** #> SEXFemale                         #> ARMCDTRT                      *** #> AVISITVIS2                    *** #> AVISITVIS3                    *** #> AVISITVIS4                    *** #> ARMCDTRT:AVISITVIS2               #> ARMCDTRT:AVISITVIS3               #> ARMCDTRT:AVISITVIS4               #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Covariance estimate: #>         VIS1    VIS2    VIS3    VIS4 #> VIS1 40.5537 14.3960  4.9747 13.3867 #> VIS2 14.3960 26.5715  2.7855  7.4745 #> VIS3  4.9747  2.7855 14.8979  0.9082 #> VIS4 13.3867  7.4745  0.9082 95.5568"},{"path":"https://openpharma.github.io/mmrm/main/index.html","id":"citing-mmrm","dir":"","previous_headings":"","what":"Citing mmrm","title":"Mixed Models for Repeated Measures","text":"cite mmrm please see .","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/reference/component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Component Access for mmrm_tmb Objects — component","text":"","code":"component(   object,   name = c(\"cov_type\", \"n_theta\", \"n_subjects\", \"n_timepoints\", \"n_obs\", \"beta_vcov\",     \"beta_vcov_complete\", \"varcor\", \"formula\", \"dataset\", \"n_groups\", \"reml\",     \"convergence\", \"evaluations\", \"method\", \"conv_message\", \"call\", \"theta_est\",     \"beta_est\", \"beta_est_complete\", \"beta_aliased\", \"x_matrix\", \"y_vector\",     \"neg_log_lik\", \"jac_list\", \"theta_vcov\") )"},{"path":"https://openpharma.github.io/mmrm/main/reference/component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Component Access for mmrm_tmb Objects — component","text":"object (mmrm_tmb) fitted MMRM. name (character) component(s) retrieved.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/component.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Component Access for mmrm_tmb Objects — component","text":"corresponding component object, see details.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/component.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Component Access for mmrm_tmb Objects — component","text":"Available component() names follows: call: low-level function call generated model. formula: model formula. dataset: data set name. cov_type: covariance structure type. n_theta: number parameters. n_subjects: number subjects. n_timepoints: number modeled time points. n_obs: total number observations. reml: REML used (ML used FALSE). neg_log_lik: negative log likelihood. convergence: convergence code optimizer. conv_message: message accompanying convergence code. evaluations: number function evaluations optimization. method: Adjustment method used (mmrm objects), otherwise NULL (mmrm_tmb objects). beta_vcov: estimated variance-covariance matrix coefficients (excluding aliased coefficients). Kenward-Roger methods, adjusted covariance matrix returned (still obtain unadjusted covariance matrix use object$beta_vcov). beta_vcov_complete: estimated variance-covariance matrix including aliased coefficients entries set NA. varcor: estimated covariance matrix residuals. multiple groups, named list estimated covariance matrices residuals returned. names group levels. theta_est: estimated variance parameters. beta_est: estimated coefficients (excluding aliased coefficients). beta_est_complete: estimated coefficients including aliased coefficients set NA. beta_aliased: whether coefficient aliased (.e. estimated) . theta_vcov:  estimated variance-covariance matrix variance parameters. x_matrix: design matrix used (excluding aliased columns). y_vector: response vector used. jac_list: Jacobian, see  h_jac_list() details.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/reference/component.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Component Access for mmrm_tmb Objects — component","text":"","code":"fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) # Get all available components. component(fit) #> $cov_type #> [1] \"us\" #>  #> $n_theta #> [1] 10 #>  #> $n_subjects #> [1] 197 #>  #> $n_timepoints #> [1] 4 #>  #> $n_obs #> [1] 537 #>  #> $beta_vcov #>                               (Intercept) RACEBlack or African American #> (Intercept)                     0.7859971                  -0.226212328 #> RACEBlack or African American  -0.2262123                   0.389969478 #> RACEWhite                      -0.1771113                   0.181466304 #> SEXFemale                      -0.1684152                   0.031537926 #> ARMCDTRT                       -0.5674809                   0.028374129 #> AVISITVIS2                     -0.4227565                   0.002972514 #> AVISITVIS3                     -0.5231223                   0.010825469 #> AVISITVIS4                     -0.4406442                   0.002205681 #> ARMCDTRT:AVISITVIS2             0.4225282                   0.005382569 #> ARMCDTRT:AVISITVIS3             0.5218971                   0.011420575 #> ARMCDTRT:AVISITVIS4             0.4489247                  -0.012589283 #>                                  RACEWhite    SEXFemale     ARMCDTRT #> (Intercept)                   -0.177111308 -0.168415217 -0.567480906 #> RACEBlack or African American  0.181466304  0.031537926  0.028374129 #> RACEWhite                      0.443035801  0.023364777 -0.042968995 #> SEXFemale                      0.023364777  0.282971189  0.001814594 #> ARMCDTRT                      -0.042968995  0.001814594  1.153791725 #> AVISITVIS2                    -0.003149280  0.006471853  0.419528600 #> AVISITVIS3                    -0.002952986  0.006771404  0.517277529 #> AVISITVIS4                    -0.008230720  0.004088901  0.440653554 #> ARMCDTRT:AVISITVIS2            0.013485683 -0.016801299 -0.845758354 #> ARMCDTRT:AVISITVIS3            0.006720617 -0.024696304 -1.044355829 #> ARMCDTRT:AVISITVIS4            0.002967665 -0.009038640 -0.877606881 #>                                 AVISITVIS2   AVISITVIS3   AVISITVIS4 #> (Intercept)                   -0.422756455 -0.523122299 -0.440644229 #> RACEBlack or African American  0.002972514  0.010825469  0.002205681 #> RACEWhite                     -0.003149280 -0.002952986 -0.008230720 #> SEXFemale                      0.006471853  0.006771404  0.004088901 #> ARMCDTRT                       0.419528600  0.517277529  0.440653554 #> AVISITVIS2                     0.642749706  0.399048940  0.368340113 #> AVISITVIS3                     0.399048940  0.676823960  0.401800094 #> AVISITVIS4                     0.368340113  0.401800094  1.723478787 #> ARMCDTRT:AVISITVIS2           -0.643020114 -0.399203255 -0.368624024 #> ARMCDTRT:AVISITVIS3           -0.399238901 -0.676484876 -0.401792995 #> ARMCDTRT:AVISITVIS4           -0.368506585 -0.402167824 -1.723586879 #>                               ARMCDTRT:AVISITVIS2 ARMCDTRT:AVISITVIS3 #> (Intercept)                           0.422528163         0.521897062 #> RACEBlack or African American         0.005382569         0.011420575 #> RACEWhite                             0.013485683         0.006720617 #> SEXFemale                            -0.016801299        -0.024696304 #> ARMCDTRT                             -0.845758354        -1.044355829 #> AVISITVIS2                           -0.643020114        -0.399238901 #> AVISITVIS3                           -0.399203255        -0.676484876 #> AVISITVIS4                           -0.368624024        -0.401792995 #> ARMCDTRT:AVISITVIS2                   1.275359305         0.805849821 #> ARMCDTRT:AVISITVIS3                   0.805849821         1.410501907 #> ARMCDTRT:AVISITVIS4                   0.728711516         0.796418986 #>                               ARMCDTRT:AVISITVIS4 #> (Intercept)                           0.448924745 #> RACEBlack or African American        -0.012589283 #> RACEWhite                             0.002967665 #> SEXFemale                            -0.009038640 #> ARMCDTRT                             -0.877606881 #> AVISITVIS2                           -0.368506585 #> AVISITVIS3                           -0.402167824 #> AVISITVIS4                           -1.723586879 #> ARMCDTRT:AVISITVIS2                   0.728711516 #> ARMCDTRT:AVISITVIS3                   0.796418986 #> ARMCDTRT:AVISITVIS4                   3.425654435 #>  #> $beta_vcov_complete #>                               (Intercept) RACEBlack or African American #> (Intercept)                     0.7859971                  -0.226212328 #> RACEBlack or African American  -0.2262123                   0.389969478 #> RACEWhite                      -0.1771113                   0.181466304 #> SEXFemale                      -0.1684152                   0.031537926 #> ARMCDTRT                       -0.5674809                   0.028374129 #> AVISITVIS2                     -0.4227565                   0.002972514 #> AVISITVIS3                     -0.5231223                   0.010825469 #> AVISITVIS4                     -0.4406442                   0.002205681 #> ARMCDTRT:AVISITVIS2             0.4225282                   0.005382569 #> ARMCDTRT:AVISITVIS3             0.5218971                   0.011420575 #> ARMCDTRT:AVISITVIS4             0.4489247                  -0.012589283 #>                                  RACEWhite    SEXFemale     ARMCDTRT #> (Intercept)                   -0.177111308 -0.168415217 -0.567480906 #> RACEBlack or African American  0.181466304  0.031537926  0.028374129 #> RACEWhite                      0.443035801  0.023364777 -0.042968995 #> SEXFemale                      0.023364777  0.282971189  0.001814594 #> ARMCDTRT                      -0.042968995  0.001814594  1.153791725 #> AVISITVIS2                    -0.003149280  0.006471853  0.419528600 #> AVISITVIS3                    -0.002952986  0.006771404  0.517277529 #> AVISITVIS4                    -0.008230720  0.004088901  0.440653554 #> ARMCDTRT:AVISITVIS2            0.013485683 -0.016801299 -0.845758354 #> ARMCDTRT:AVISITVIS3            0.006720617 -0.024696304 -1.044355829 #> ARMCDTRT:AVISITVIS4            0.002967665 -0.009038640 -0.877606881 #>                                 AVISITVIS2   AVISITVIS3   AVISITVIS4 #> (Intercept)                   -0.422756455 -0.523122299 -0.440644229 #> RACEBlack or African American  0.002972514  0.010825469  0.002205681 #> RACEWhite                     -0.003149280 -0.002952986 -0.008230720 #> SEXFemale                      0.006471853  0.006771404  0.004088901 #> ARMCDTRT                       0.419528600  0.517277529  0.440653554 #> AVISITVIS2                     0.642749706  0.399048940  0.368340113 #> AVISITVIS3                     0.399048940  0.676823960  0.401800094 #> AVISITVIS4                     0.368340113  0.401800094  1.723478787 #> ARMCDTRT:AVISITVIS2           -0.643020114 -0.399203255 -0.368624024 #> ARMCDTRT:AVISITVIS3           -0.399238901 -0.676484876 -0.401792995 #> ARMCDTRT:AVISITVIS4           -0.368506585 -0.402167824 -1.723586879 #>                               ARMCDTRT:AVISITVIS2 ARMCDTRT:AVISITVIS3 #> (Intercept)                           0.422528163         0.521897062 #> RACEBlack or African American         0.005382569         0.011420575 #> RACEWhite                             0.013485683         0.006720617 #> SEXFemale                            -0.016801299        -0.024696304 #> ARMCDTRT                             -0.845758354        -1.044355829 #> AVISITVIS2                           -0.643020114        -0.399238901 #> AVISITVIS3                           -0.399203255        -0.676484876 #> AVISITVIS4                           -0.368624024        -0.401792995 #> ARMCDTRT:AVISITVIS2                   1.275359305         0.805849821 #> ARMCDTRT:AVISITVIS3                   0.805849821         1.410501907 #> ARMCDTRT:AVISITVIS4                   0.728711516         0.796418986 #>                               ARMCDTRT:AVISITVIS4 #> (Intercept)                           0.448924745 #> RACEBlack or African American        -0.012589283 #> RACEWhite                             0.002967665 #> SEXFemale                            -0.009038640 #> ARMCDTRT                             -0.877606881 #> AVISITVIS2                           -0.368506585 #> AVISITVIS3                           -0.402167824 #> AVISITVIS4                           -1.723586879 #> ARMCDTRT:AVISITVIS2                   0.728711516 #> ARMCDTRT:AVISITVIS3                   0.796418986 #> ARMCDTRT:AVISITVIS4                   3.425654435 #>  #> $varcor #>           VIS1      VIS2       VIS3       VIS4 #> VIS1 40.553664 14.396045  4.9747288 13.3866534 #> VIS2 14.396045 26.571483  2.7854661  7.4744790 #> VIS3  4.974729  2.785466 14.8978517  0.9082111 #> VIS4 13.386653  7.474479  0.9082111 95.5568420 #>  #> $formula #> [1] \"FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID)\" #>  #> $dataset #> [1] \"fev_data\" #>  #> $n_groups #> [1] 1 #>  #> $reml #> [1] TRUE #>  #> $convergence #> [1] 0 #>  #> $evaluations #> function gradient  #>       15       15  #>  #> $method #> [1] \"Satterthwaite\" #>  #> $conv_message #> [1] \"CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH\" #>  #> $call #> fit_mmrm(formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT |  #>     USUBJID), data = \"fev_data\", weights = weights, reml = reml,  #>     control = control) #>  #> $theta_est #>  [1]  1.85131306  1.53312022  1.32799829  2.25400062  0.48798054  0.20701987 #>  [7]  0.05832020  0.22067693  0.06169127 -0.02401589 #>  #> $beta_est #>                   (Intercept) RACEBlack or African American  #>                   30.77747548                    1.53049977  #>                     RACEWhite                     SEXFemale  #>                    5.64356535                    0.32606192  #>                      ARMCDTRT                    AVISITVIS2  #>                    3.77423004                    4.83958845  #>                    AVISITVIS3                    AVISITVIS4  #>                   10.34211288                   15.05389826  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                   -0.04192625                   -0.69368537  #>           ARMCDTRT:AVISITVIS4  #>                    0.62422703  #>  #> $beta_est_complete #>                   (Intercept) RACEBlack or African American  #>                   30.77747548                    1.53049977  #>                     RACEWhite                     SEXFemale  #>                    5.64356535                    0.32606192  #>                      ARMCDTRT                    AVISITVIS2  #>                    3.77423004                    4.83958845  #>                    AVISITVIS3                    AVISITVIS4  #>                   10.34211288                   15.05389826  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                   -0.04192625                   -0.69368537  #>           ARMCDTRT:AVISITVIS4  #>                    0.62422703  #>  #> $beta_aliased #>                   (Intercept) RACEBlack or African American  #>                         FALSE                         FALSE  #>                     RACEWhite                     SEXFemale  #>                         FALSE                         FALSE  #>                      ARMCDTRT                    AVISITVIS2  #>                         FALSE                         FALSE  #>                    AVISITVIS3                    AVISITVIS4  #>                         FALSE                         FALSE  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                         FALSE                         FALSE  #>           ARMCDTRT:AVISITVIS4  #>                         FALSE  #>  #> $x_matrix #>     (Intercept) RACEBlack or African American RACEWhite SEXFemale ARMCDTRT #> 2             1                             1         0         1        1 #> 4             1                             1         0         1        1 #> 6             1                             0         0         0        0 #> 7             1                             0         0         0        0 #> 8             1                             0         0         0        0 #> 10            1                             1         0         1        0 #> 12            1                             1         0         1        0 #> 13            1                             0         0         1        1 #> 14            1                             0         0         1        1 #> 16            1                             0         0         1        1 #> 17            1                             1         0         0        0 #> 19            1                             1         0         0        0 #> 20            1                             1         0         0        0 #> 23            1                             1         0         0        0 #> 25            1                             0         0         1        0 #> 26            1                             0         0         1        0 #> 28            1                             0         0         1        0 #> 29            1                             1         0         0        0 #> 30            1                             1         0         0        0 #> 31            1                             1         0         0        0 #> 32            1                             1         0         0        0 #> 33            1                             0         1         0        1 #> 34            1                             0         1         0        1 #> 36            1                             0         1         0        1 #> 39            1                             1         0         1        0 #> 41            1                             0         0         1        1 #> 42            1                             0         0         1        1 #> 43            1                             0         0         1        1 #> 44            1                             0         0         1        1 #> 45            1                             0         0         0        0 #> 46            1                             0         0         0        0 #> 47            1                             0         0         0        0 #> 51            1                             0         1         0        1 #> 52            1                             0         1         0        1 #> 55            1                             1         0         0        0 #> 59            1                             0         0         0        0 #> 60            1                             0         0         0        0 #> 62            1                             0         0         1        0 #> 64            1                             0         0         1        0 #> 65            1                             0         1         1        0 #> 68            1                             0         1         1        0 #> 69            1                             0         0         0        1 #> 70            1                             0         0         0        1 #> 72            1                             0         0         0        1 #> 73            1                             0         0         0        1 #> 74            1                             0         0         0        1 #> 75            1                             0         0         0        1 #> 76            1                             0         0         0        1 #> 78            1                             0         1         1        1 #> 79            1                             0         1         1        1 #> 82            1                             0         1         0        1 #> 83            1                             0         1         0        1 #> 84            1                             0         1         0        1 #> 85            1                             0         1         0        1 #> 86            1                             0         1         0        1 #> 87            1                             0         1         0        1 #> 88            1                             0         1         0        1 #> 89            1                             1         0         1        0 #> 90            1                             1         0         1        0 #> 91            1                             1         0         1        0 #> 93            1                             0         1         1        1 #> 94            1                             0         1         1        1 #> 95            1                             0         1         1        1 #> 96            1                             0         1         1        1 #> 97            1                             0         1         1        1 #> 98            1                             0         1         1        1 #> 99            1                             0         1         1        1 #> 100           1                             0         1         1        1 #> 101           1                             0         1         1        1 #> 102           1                             0         1         1        1 #> 103           1                             0         1         1        1 #> 104           1                             0         1         1        1 #> 105           1                             1         0         1        1 #> 107           1                             1         0         1        1 #> 108           1                             1         0         1        1 #> 109           1                             1         0         0        1 #> 110           1                             1         0         0        1 #> 111           1                             1         0         0        1 #> 112           1                             1         0         0        1 #> 113           1                             1         0         0        1 #> 114           1                             1         0         0        1 #> 116           1                             1         0         0        1 #> 117           1                             0         0         1        1 #> 118           1                             0         0         1        1 #> 119           1                             0         0         1        1 #> 120           1                             0         0         1        1 #> 121           1                             0         0         1        0 #> 123           1                             0         0         1        0 #> 125           1                             1         0         0        1 #> 128           1                             1         0         0        1 #> 129           1                             1         0         0        1 #> 130           1                             1         0         0        1 #> 132           1                             1         0         0        1 #> 133           1                             0         0         1        0 #> 134           1                             0         0         1        0 #> 135           1                             0         0         1        0 #> 136           1                             0         0         1        0 #> 137           1                             1         0         1        1 #> 138           1                             1         0         1        1 #> 140           1                             1         0         1        1 #> 142           1                             0         0         1        1 #> 144           1                             0         0         1        1 #> 145           1                             0         1         1        0 #> 146           1                             0         1         1        0 #> 147           1                             0         1         1        0 #> 148           1                             0         1         1        0 #> 149           1                             0         0         1        0 #> 151           1                             0         0         1        0 #> 153           1                             0         0         1        0 #> 155           1                             0         0         1        0 #> 156           1                             0         0         1        0 #> 157           1                             1         0         0        0 #> 158           1                             1         0         0        0 #> 159           1                             1         0         0        0 #> 162           1                             1         0         0        0 #> 163           1                             1         0         0        0 #> 164           1                             1         0         0        0 #> 165           1                             1         0         0        0 #> 168           1                             1         0         0        0 #> 169           1                             1         0         1        1 #> 170           1                             1         0         1        1 #> 171           1                             1         0         1        1 #> 172           1                             1         0         1        1 #> 173           1                             1         0         0        1 #> 177           1                             0         0         1        0 #> 178           1                             0         0         1        0 #> 179           1                             0         0         1        0 #> 180           1                             0         0         1        0 #> 181           1                             0         0         0        0 #> 182           1                             0         0         0        0 #> 183           1                             0         0         0        0 #> 185           1                             0         0         0        1 #> 186           1                             0         0         0        1 #> 187           1                             0         0         0        1 #> 190           1                             1         0         0        0 #> 191           1                             1         0         0        0 #> 193           1                             0         1         1        0 #> 194           1                             0         1         1        0 #> 195           1                             0         1         1        0 #> 197           1                             0         0         1        1 #> 198           1                             0         0         1        1 #> 199           1                             0         0         1        1 #> 201           1                             1         0         1        1 #> 202           1                             1         0         1        1 #> 204           1                             1         0         1        1 #> 206           1                             1         0         1        1 #> 208           1                             1         0         1        1 #> 209           1                             0         1         0        0 #> 210           1                             0         1         0        0 #> 217           1                             0         0         0        1 #> 218           1                             0         0         0        1 #> 219           1                             0         0         0        1 #> 221           1                             1         0         0        0 #> 224           1                             1         0         0        0 #> 226           1                             1         0         0        1 #> 227           1                             1         0         0        1 #> 228           1                             1         0         0        1 #> 230           1                             0         1         1        1 #> 231           1                             0         1         1        1 #> 233           1                             0         1         1        1 #> 235           1                             0         1         1        1 #> 236           1                             0         1         1        1 #> 237           1                             1         0         1        1 #> 238           1                             1         0         1        1 #> 239           1                             1         0         1        1 #> 240           1                             1         0         1        1 #> 241           1                             0         0         0        1 #> 242           1                             0         0         0        1 #> 244           1                             0         0         0        1 #> 246           1                             0         0         1        0 #> 250           1                             0         1         1        0 #> 251           1                             0         1         1        0 #> 252           1                             0         1         1        0 #> 253           1                             1         0         1        0 #> 254           1                             1         0         1        0 #> 256           1                             1         0         1        0 #> 257           1                             0         0         1        1 #> 258           1                             0         0         1        1 #> 259           1                             0         0         1        1 #> 260           1                             0         0         1        1 #> 261           1                             0         0         0        1 #> 262           1                             0         0         0        1 #> 263           1                             0         0         0        1 #> 264           1                             0         0         0        1 #> 265           1                             0         1         1        1 #> 266           1                             0         1         1        1 #> 267           1                             0         1         1        1 #> 268           1                             0         1         1        1 #> 269           1                             0         1         1        1 #> 270           1                             0         1         1        1 #> 273           1                             1         0         0        0 #> 274           1                             1         0         0        0 #> 275           1                             1         0         0        0 #> 276           1                             1         0         0        0 #> 277           1                             1         0         0        0 #> 278           1                             1         0         0        0 #> 280           1                             1         0         0        0 #> 281           1                             0         0         0        1 #> 282           1                             0         0         0        1 #> 283           1                             0         0         0        1 #> 284           1                             0         0         0        1 #> 285           1                             0         0         1        1 #> 286           1                             0         0         1        1 #> 287           1                             0         0         1        1 #> 291           1                             0         1         0        0 #> 292           1                             0         1         0        0 #> 293           1                             0         1         1        0 #> 295           1                             0         1         1        0 #> 296           1                             0         1         1        0 #> 298           1                             0         1         0        0 #> 299           1                             0         1         0        0 #> 300           1                             0         1         0        0 #> 301           1                             0         1         0        1 #> 304           1                             0         1         0        1 #> 305           1                             0         0         0        1 #> 306           1                             0         0         0        1 #> 307           1                             0         0         0        1 #> 308           1                             0         0         0        1 #> 310           1                             0         1         1        1 #> 311           1                             0         1         1        1 #> 312           1                             0         1         1        1 #> 316           1                             0         0         1        0 #> 317           1                             0         0         0        1 #> 318           1                             0         0         0        1 #> 319           1                             0         0         0        1 #> 322           1                             0         1         0        0 #> 323           1                             0         1         0        0 #> 324           1                             0         1         0        0 #> 325           1                             1         0         1        0 #> 327           1                             1         0         1        0 #> 328           1                             1         0         1        0 #> 329           1                             0         1         0        1 #> 330           1                             0         1         0        1 #> 331           1                             0         1         0        1 #> 332           1                             0         1         0        1 #> 336           1                             0         0         1        0 #> 339           1                             0         0         1        0 #> 340           1                             0         0         1        0 #> 341           1                             1         0         1        1 #> 342           1                             1         0         1        1 #> 343           1                             1         0         1        1 #> 344           1                             1         0         1        1 #> 345           1                             0         1         0        0 #> 347           1                             0         1         0        0 #> 349           1                             1         0         1        0 #> 351           1                             1         0         1        0 #> 352           1                             1         0         1        0 #> 353           1                             1         0         0        0 #> 354           1                             1         0         0        0 #> 355           1                             1         0         0        0 #> 356           1                             1         0         0        0 #> 357           1                             0         0         0        0 #> 363           1                             0         1         1        1 #> 364           1                             0         1         1        1 #> 365           1                             0         1         1        1 #> 367           1                             0         1         1        1 #> 368           1                             0         1         1        1 #> 370           1                             1         0         0        0 #> 371           1                             1         0         0        0 #> 372           1                             1         0         0        0 #> 373           1                             0         0         1        0 #> 375           1                             0         0         1        0 #> 376           1                             0         0         1        0 #> 378           1                             0         0         1        0 #> 379           1                             0         0         1        0 #> 381           1                             1         0         1        0 #> 382           1                             1         0         1        0 #> 384           1                             1         0         1        0 #> 385           1                             0         1         0        1 #> 386           1                             0         1         0        1 #> 388           1                             0         1         0        1 #> 389           1                             0         0         0        0 #> 390           1                             0         0         0        0 #> 391           1                             0         0         0        0 #> 392           1                             0         0         0        0 #> 394           1                             1         0         0        0 #> 397           1                             1         0         1        0 #> 398           1                             1         0         1        0 #> 399           1                             1         0         1        0 #> 402           1                             0         1         0        1 #> 403           1                             0         1         0        1 #> 405           1                             0         0         1        0 #> 406           1                             0         0         1        0 #> 407           1                             0         0         1        0 #> 408           1                             0         0         1        0 #> 409           1                             0         0         1        0 #> 410           1                             0         0         1        0 #> 411           1                             0         0         1        0 #> 413           1                             1         0         1        0 #> 415           1                             1         0         1        0 #> 416           1                             1         0         1        0 #> 418           1                             1         0         1        1 #> 419           1                             1         0         1        1 #> 421           1                             0         0         1        1 #> 422           1                             0         0         1        1 #> 423           1                             0         0         1        1 #> 424           1                             0         0         1        1 #> 427           1                             0         1         1        0 #> 428           1                             0         1         1        0 #> 429           1                             0         1         0        1 #> 430           1                             0         1         0        1 #> 431           1                             0         1         0        1 #> 432           1                             0         1         0        1 #> 434           1                             1         0         1        0 #> 435           1                             1         0         1        0 #> 436           1                             1         0         1        0 #> 438           1                             0         0         0        1 #> 439           1                             0         0         0        1 #> 444           1                             0         1         1        0 #> 445           1                             1         0         1        0 #> 447           1                             1         0         1        0 #> 449           1                             0         0         0        0 #> 450           1                             0         0         0        0 #> 451           1                             0         0         0        0 #> 453           1                             1         0         0        0 #> 454           1                             1         0         0        0 #> 455           1                             1         0         0        0 #> 456           1                             1         0         0        0 #> 457           1                             0         0         1        0 #> 458           1                             0         0         1        0 #> 459           1                             0         0         1        0 #> 461           1                             1         0         0        1 #> 463           1                             1         0         0        1 #> 464           1                             1         0         0        1 #> 465           1                             1         0         0        0 #> 469           1                             0         0         1        0 #> 470           1                             0         0         1        0 #> 471           1                             0         0         1        0 #> 473           1                             0         1         0        1 #> 474           1                             0         1         0        1 #> 477           1                             0         0         1        0 #> 484           1                             1         0         0        1 #> 487           1                             0         0         1        0 #> 489           1                             0         1         1        0 #> 490           1                             0         1         1        0 #> 491           1                             0         1         1        0 #> 494           1                             0         0         1        1 #> 495           1                             0         0         1        1 #> 496           1                             0         0         1        1 #> 497           1                             0         1         0        0 #> 498           1                             0         1         0        0 #> 499           1                             0         1         0        0 #> 501           1                             0         0         0        1 #> 502           1                             0         0         0        1 #> 504           1                             0         0         0        1 #> 505           1                             1         0         1        1 #> 508           1                             1         0         1        1 #> 509           1                             0         0         1        1 #> 510           1                             0         0         1        1 #> 511           1                             0         0         1        1 #> 512           1                             0         0         1        1 #> 513           1                             0         1         0        1 #> 518           1                             0         1         0        0 #> 519           1                             0         1         0        0 #> 521           1                             0         0         1        0 #> 522           1                             0         0         1        0 #> 523           1                             0         0         1        0 #> 524           1                             0         0         1        0 #> 526           1                             0         0         0        0 #> 527           1                             0         0         0        0 #> 528           1                             0         0         0        0 #> 530           1                             0         1         0        0 #> 531           1                             0         1         0        0 #> 532           1                             0         1         0        0 #> 534           1                             1         0         0        0 #> 535           1                             1         0         0        0 #> 536           1                             1         0         0        0 #> 537           1                             1         0         0        0 #> 538           1                             1         0         0        0 #> 539           1                             1         0         0        0 #> 540           1                             1         0         0        0 #> 541           1                             0         1         1        1 #> 544           1                             0         1         1        1 #> 545           1                             0         0         1        1 #> 546           1                             0         0         1        1 #> 547           1                             0         0         1        1 #> 548           1                             0         0         1        1 #> 549           1                             0         0         0        1 #> 550           1                             0         0         0        1 #> 551           1                             0         0         0        1 #> 555           1                             0         0         1        1 #> 556           1                             0         0         1        1 #> 557           1                             1         0         1        0 #> 558           1                             1         0         1        0 #> 560           1                             1         0         1        0 #> 562           1                             0         1         0        1 #> 564           1                             0         1         0        1 #> 569           1                             1         0         1        1 #> 570           1                             1         0         1        1 #> 572           1                             1         0         1        1 #> 573           1                             0         0         1        0 #> 574           1                             0         0         1        0 #> 575           1                             0         0         1        0 #> 576           1                             0         0         1        0 #> 577           1                             1         0         0        0 #> 578           1                             1         0         0        0 #> 579           1                             1         0         0        0 #> 582           1                             0         0         1        1 #> 583           1                             0         0         1        1 #> 584           1                             0         0         1        1 #> 585           1                             0         0         1        0 #> 586           1                             0         0         1        0 #> 587           1                             0         0         1        0 #> 590           1                             1         0         0        1 #> 591           1                             1         0         0        1 #> 593           1                             0         0         1        0 #> 594           1                             0         0         1        0 #> 595           1                             0         0         1        0 #> 596           1                             0         0         1        0 #> 599           1                             0         1         0        0 #> 600           1                             0         1         0        0 #> 601           1                             0         0         1        0 #> 602           1                             0         0         1        0 #> 604           1                             0         0         1        0 #> 606           1                             0         0         1        1 #> 608           1                             0         0         1        1 #> 609           1                             1         0         0        0 #> 610           1                             1         0         0        0 #> 611           1                             1         0         0        0 #> 612           1                             1         0         0        0 #> 613           1                             1         0         1        0 #> 614           1                             1         0         1        0 #> 616           1                             1         0         1        0 #> 617           1                             0         0         0        1 #> 619           1                             0         0         0        1 #> 620           1                             0         0         0        1 #> 621           1                             0         1         0        0 #> 622           1                             0         1         0        0 #> 623           1                             0         1         0        0 #> 624           1                             0         1         0        0 #> 625           1                             1         0         0        1 #> 628           1                             1         0         0        1 #> 630           1                             1         0         0        1 #> 631           1                             1         0         0        1 #> 632           1                             1         0         0        1 #> 633           1                             0         0         1        1 #> 634           1                             0         0         1        1 #> 638           1                             0         0         0        1 #> 639           1                             0         0         0        1 #> 640           1                             0         0         0        1 #> 642           1                             1         0         1        0 #> 645           1                             0         0         0        0 #> 648           1                             0         0         0        0 #> 650           1                             0         1         0        0 #> 652           1                             0         1         0        0 #> 654           1                             1         0         1        0 #> 655           1                             1         0         1        0 #> 656           1                             1         0         1        0 #> 657           1                             0         1         1        1 #> 661           1                             0         0         0        1 #> 665           1                             1         0         0        0 #> 666           1                             1         0         0        0 #> 668           1                             1         0         0        0 #> 669           1                             1         0         1        0 #> 670           1                             1         0         1        0 #> 671           1                             1         0         1        0 #> 673           1                             0         1         1        0 #> 674           1                             0         1         1        0 #> 678           1                             0         1         1        1 #> 679           1                             0         1         1        1 #> 680           1                             0         1         1        1 #> 682           1                             0         0         1        0 #> 684           1                             0         0         1        0 #> 685           1                             0         0         1        1 #> 686           1                             0         0         1        1 #> 687           1                             0         0         1        1 #> 689           1                             0         1         1        1 #> 690           1                             0         1         1        1 #> 691           1                             0         1         1        1 #> 693           1                             1         0         1        1 #> 694           1                             1         0         1        1 #> 695           1                             1         0         1        1 #> 697           1                             1         0         1        0 #> 698           1                             1         0         1        0 #> 700           1                             1         0         1        0 #> 701           1                             1         0         0        1 #> 702           1                             1         0         0        1 #> 704           1                             1         0         0        1 #> 707           1                             1         0         0        0 #> 709           1                             1         0         0        0 #> 712           1                             1         0         0        0 #> 713           1                             0         1         0        1 #> 715           1                             0         1         0        1 #> 716           1                             0         1         0        1 #> 717           1                             0         0         0        0 #> 718           1                             0         0         0        0 #> 719           1                             0         0         0        0 #> 721           1                             0         0         1        0 #> 723           1                             0         0         1        0 #> 724           1                             0         0         1        0 #> 727           1                             1         0         1        1 #> 728           1                             1         0         1        1 #> 729           1                             1         0         1        1 #> 730           1                             1         0         1        1 #> 734           1                             0         1         1        1 #> 736           1                             0         1         1        1 #> 738           1                             1         0         1        0 #> 739           1                             1         0         1        0 #> 740           1                             1         0         1        0 #> 741           1                             0         1         0        0 #> 742           1                             0         1         0        0 #> 744           1                             0         1         0        0 #> 745           1                             1         0         1        0 #> 749           1                             1         0         1        0 #> 751           1                             1         0         1        0 #> 753           1                             0         0         1        1 #> 754           1                             0         0         1        1 #> 755           1                             0         0         1        1 #> 757           1                             1         0         1        1 #> 758           1                             1         0         1        1 #> 759           1                             1         0         1        1 #> 760           1                             1         0         1        1 #> 761           1                             0         1         0        1 #> 764           1                             0         1         0        1 #> 765           1                             0         1         1        1 #> 766           1                             0         1         1        1 #> 767           1                             0         1         1        1 #> 768           1                             0         1         1        1 #> 770           1                             0         0         0        0 #> 771           1                             0         0         0        0 #> 772           1                             0         0         0        0 #> 773           1                             1         0         0        0 #> 774           1                             1         0         0        0 #> 775           1                             1         0         0        0 #> 776           1                             1         0         0        0 #> 778           1                             0         1         1        1 #> 779           1                             0         1         1        1 #> 781           1                             0         0         0        0 #> 782           1                             0         0         0        0 #> 784           1                             0         0         0        0 #> 788           1                             1         0         0        0 #> 789           1                             1         0         0        1 #> 790           1                             1         0         0        1 #> 792           1                             1         0         0        1 #> 797           1                             1         0         0        0 #> 798           1                             1         0         0        0 #> 800           1                             1         0         0        0 #>     AVISITVIS2 AVISITVIS3 AVISITVIS4 ARMCDTRT:AVISITVIS2 ARMCDTRT:AVISITVIS3 #> 2            1          0          0                   1                   0 #> 4            0          0          1                   0                   0 #> 6            1          0          0                   0                   0 #> 7            0          1          0                   0                   0 #> 8            0          0          1                   0                   0 #> 10           1          0          0                   0                   0 #> 12           0          0          1                   0                   0 #> 13           0          0          0                   0                   0 #> 14           1          0          0                   1                   0 #> 16           0          0          1                   0                   0 #> 17           0          0          0                   0                   0 #> 19           0          1          0                   0                   0 #> 20           0          0          1                   0                   0 #> 23           0          1          0                   0                   0 #> 25           0          0          0                   0                   0 #> 26           1          0          0                   0                   0 #> 28           0          0          1                   0                   0 #> 29           0          0          0                   0                   0 #> 30           1          0          0                   0                   0 #> 31           0          1          0                   0                   0 #> 32           0          0          1                   0                   0 #> 33           0          0          0                   0                   0 #> 34           1          0          0                   1                   0 #> 36           0          0          1                   0                   0 #> 39           0          1          0                   0                   0 #> 41           0          0          0                   0                   0 #> 42           1          0          0                   1                   0 #> 43           0          1          0                   0                   1 #> 44           0          0          1                   0                   0 #> 45           0          0          0                   0                   0 #> 46           1          0          0                   0                   0 #> 47           0          1          0                   0                   0 #> 51           0          1          0                   0                   1 #> 52           0          0          1                   0                   0 #> 55           0          1          0                   0                   0 #> 59           0          1          0                   0                   0 #> 60           0          0          1                   0                   0 #> 62           1          0          0                   0                   0 #> 64           0          0          1                   0                   0 #> 65           0          0          0                   0                   0 #> 68           0          0          1                   0                   0 #> 69           0          0          0                   0                   0 #> 70           1          0          0                   1                   0 #> 72           0          0          1                   0                   0 #> 73           0          0          0                   0                   0 #> 74           1          0          0                   1                   0 #> 75           0          1          0                   0                   1 #> 76           0          0          1                   0                   0 #> 78           1          0          0                   1                   0 #> 79           0          1          0                   0                   1 #> 82           1          0          0                   1                   0 #> 83           0          1          0                   0                   1 #> 84           0          0          1                   0                   0 #> 85           0          0          0                   0                   0 #> 86           1          0          0                   1                   0 #> 87           0          1          0                   0                   1 #> 88           0          0          1                   0                   0 #> 89           0          0          0                   0                   0 #> 90           1          0          0                   0                   0 #> 91           0          1          0                   0                   0 #> 93           0          0          0                   0                   0 #> 94           1          0          0                   1                   0 #> 95           0          1          0                   0                   1 #> 96           0          0          1                   0                   0 #> 97           0          0          0                   0                   0 #> 98           1          0          0                   1                   0 #> 99           0          1          0                   0                   1 #> 100          0          0          1                   0                   0 #> 101          0          0          0                   0                   0 #> 102          1          0          0                   1                   0 #> 103          0          1          0                   0                   1 #> 104          0          0          1                   0                   0 #> 105          0          0          0                   0                   0 #> 107          0          1          0                   0                   1 #> 108          0          0          1                   0                   0 #> 109          0          0          0                   0                   0 #> 110          1          0          0                   1                   0 #> 111          0          1          0                   0                   1 #> 112          0          0          1                   0                   0 #> 113          0          0          0                   0                   0 #> 114          1          0          0                   1                   0 #> 116          0          0          1                   0                   0 #> 117          0          0          0                   0                   0 #> 118          1          0          0                   1                   0 #> 119          0          1          0                   0                   1 #> 120          0          0          1                   0                   0 #> 121          0          0          0                   0                   0 #> 123          0          1          0                   0                   0 #> 125          0          0          0                   0                   0 #> 128          0          0          1                   0                   0 #> 129          0          0          0                   0                   0 #> 130          1          0          0                   1                   0 #> 132          0          0          1                   0                   0 #> 133          0          0          0                   0                   0 #> 134          1          0          0                   0                   0 #> 135          0          1          0                   0                   0 #> 136          0          0          1                   0                   0 #> 137          0          0          0                   0                   0 #> 138          1          0          0                   1                   0 #> 140          0          0          1                   0                   0 #> 142          1          0          0                   1                   0 #> 144          0          0          1                   0                   0 #> 145          0          0          0                   0                   0 #> 146          1          0          0                   0                   0 #> 147          0          1          0                   0                   0 #> 148          0          0          1                   0                   0 #> 149          0          0          0                   0                   0 #> 151          0          1          0                   0                   0 #> 153          0          0          0                   0                   0 #> 155          0          1          0                   0                   0 #> 156          0          0          1                   0                   0 #> 157          0          0          0                   0                   0 #> 158          1          0          0                   0                   0 #> 159          0          1          0                   0                   0 #> 162          1          0          0                   0                   0 #> 163          0          1          0                   0                   0 #> 164          0          0          1                   0                   0 #> 165          0          0          0                   0                   0 #> 168          0          0          1                   0                   0 #> 169          0          0          0                   0                   0 #> 170          1          0          0                   1                   0 #> 171          0          1          0                   0                   1 #> 172          0          0          1                   0                   0 #> 173          0          0          0                   0                   0 #> 177          0          0          0                   0                   0 #> 178          1          0          0                   0                   0 #> 179          0          1          0                   0                   0 #> 180          0          0          1                   0                   0 #> 181          0          0          0                   0                   0 #> 182          1          0          0                   0                   0 #> 183          0          1          0                   0                   0 #> 185          0          0          0                   0                   0 #> 186          1          0          0                   1                   0 #> 187          0          1          0                   0                   1 #> 190          1          0          0                   0                   0 #> 191          0          1          0                   0                   0 #> 193          0          0          0                   0                   0 #> 194          1          0          0                   0                   0 #> 195          0          1          0                   0                   0 #> 197          0          0          0                   0                   0 #> 198          1          0          0                   1                   0 #> 199          0          1          0                   0                   1 #> 201          0          0          0                   0                   0 #> 202          1          0          0                   1                   0 #> 204          0          0          1                   0                   0 #> 206          1          0          0                   1                   0 #> 208          0          0          1                   0                   0 #> 209          0          0          0                   0                   0 #> 210          1          0          0                   0                   0 #> 217          0          0          0                   0                   0 #> 218          1          0          0                   1                   0 #> 219          0          1          0                   0                   1 #> 221          0          0          0                   0                   0 #> 224          0          0          1                   0                   0 #> 226          1          0          0                   1                   0 #> 227          0          1          0                   0                   1 #> 228          0          0          1                   0                   0 #> 230          1          0          0                   1                   0 #> 231          0          1          0                   0                   1 #> 233          0          0          0                   0                   0 #> 235          0          1          0                   0                   1 #> 236          0          0          1                   0                   0 #> 237          0          0          0                   0                   0 #> 238          1          0          0                   1                   0 #> 239          0          1          0                   0                   1 #> 240          0          0          1                   0                   0 #> 241          0          0          0                   0                   0 #> 242          1          0          0                   1                   0 #> 244          0          0          1                   0                   0 #> 246          1          0          0                   0                   0 #> 250          1          0          0                   0                   0 #> 251          0          1          0                   0                   0 #> 252          0          0          1                   0                   0 #> 253          0          0          0                   0                   0 #> 254          1          0          0                   0                   0 #> 256          0          0          1                   0                   0 #> 257          0          0          0                   0                   0 #> 258          1          0          0                   1                   0 #> 259          0          1          0                   0                   1 #> 260          0          0          1                   0                   0 #> 261          0          0          0                   0                   0 #> 262          1          0          0                   1                   0 #> 263          0          1          0                   0                   1 #> 264          0          0          1                   0                   0 #> 265          0          0          0                   0                   0 #> 266          1          0          0                   1                   0 #> 267          0          1          0                   0                   1 #> 268          0          0          1                   0                   0 #> 269          0          0          0                   0                   0 #> 270          1          0          0                   1                   0 #> 273          0          0          0                   0                   0 #> 274          1          0          0                   0                   0 #> 275          0          1          0                   0                   0 #> 276          0          0          1                   0                   0 #> 277          0          0          0                   0                   0 #> 278          1          0          0                   0                   0 #> 280          0          0          1                   0                   0 #> 281          0          0          0                   0                   0 #> 282          1          0          0                   1                   0 #> 283          0          1          0                   0                   1 #> 284          0          0          1                   0                   0 #> 285          0          0          0                   0                   0 #> 286          1          0          0                   1                   0 #> 287          0          1          0                   0                   1 #> 291          0          1          0                   0                   0 #> 292          0          0          1                   0                   0 #> 293          0          0          0                   0                   0 #> 295          0          1          0                   0                   0 #> 296          0          0          1                   0                   0 #> 298          1          0          0                   0                   0 #> 299          0          1          0                   0                   0 #> 300          0          0          1                   0                   0 #> 301          0          0          0                   0                   0 #> 304          0          0          1                   0                   0 #> 305          0          0          0                   0                   0 #> 306          1          0          0                   1                   0 #> 307          0          1          0                   0                   1 #> 308          0          0          1                   0                   0 #> 310          1          0          0                   1                   0 #> 311          0          1          0                   0                   1 #> 312          0          0          1                   0                   0 #> 316          0          0          1                   0                   0 #> 317          0          0          0                   0                   0 #> 318          1          0          0                   1                   0 #> 319          0          1          0                   0                   1 #> 322          1          0          0                   0                   0 #> 323          0          1          0                   0                   0 #> 324          0          0          1                   0                   0 #> 325          0          0          0                   0                   0 #> 327          0          1          0                   0                   0 #> 328          0          0          1                   0                   0 #> 329          0          0          0                   0                   0 #> 330          1          0          0                   1                   0 #> 331          0          1          0                   0                   1 #> 332          0          0          1                   0                   0 #> 336          0          0          1                   0                   0 #> 339          0          1          0                   0                   0 #> 340          0          0          1                   0                   0 #> 341          0          0          0                   0                   0 #> 342          1          0          0                   1                   0 #> 343          0          1          0                   0                   1 #> 344          0          0          1                   0                   0 #> 345          0          0          0                   0                   0 #> 347          0          1          0                   0                   0 #> 349          0          0          0                   0                   0 #> 351          0          1          0                   0                   0 #> 352          0          0          1                   0                   0 #> 353          0          0          0                   0                   0 #> 354          1          0          0                   0                   0 #> 355          0          1          0                   0                   0 #> 356          0          0          1                   0                   0 #> 357          0          0          0                   0                   0 #> 363          0          1          0                   0                   1 #> 364          0          0          1                   0                   0 #> 365          0          0          0                   0                   0 #> 367          0          1          0                   0                   1 #> 368          0          0          1                   0                   0 #> 370          1          0          0                   0                   0 #> 371          0          1          0                   0                   0 #> 372          0          0          1                   0                   0 #> 373          0          0          0                   0                   0 #> 375          0          1          0                   0                   0 #> 376          0          0          1                   0                   0 #> 378          1          0          0                   0                   0 #> 379          0          1          0                   0                   0 #> 381          0          0          0                   0                   0 #> 382          1          0          0                   0                   0 #> 384          0          0          1                   0                   0 #> 385          0          0          0                   0                   0 #> 386          1          0          0                   1                   0 #> 388          0          0          1                   0                   0 #> 389          0          0          0                   0                   0 #> 390          1          0          0                   0                   0 #> 391          0          1          0                   0                   0 #> 392          0          0          1                   0                   0 #> 394          1          0          0                   0                   0 #> 397          0          0          0                   0                   0 #> 398          1          0          0                   0                   0 #> 399          0          1          0                   0                   0 #> 402          1          0          0                   1                   0 #> 403          0          1          0                   0                   1 #> 405          0          0          0                   0                   0 #> 406          1          0          0                   0                   0 #> 407          0          1          0                   0                   0 #> 408          0          0          1                   0                   0 #> 409          0          0          0                   0                   0 #> 410          1          0          0                   0                   0 #> 411          0          1          0                   0                   0 #> 413          0          0          0                   0                   0 #> 415          0          1          0                   0                   0 #> 416          0          0          1                   0                   0 #> 418          1          0          0                   1                   0 #> 419          0          1          0                   0                   1 #> 421          0          0          0                   0                   0 #> 422          1          0          0                   1                   0 #> 423          0          1          0                   0                   1 #> 424          0          0          1                   0                   0 #> 427          0          1          0                   0                   0 #> 428          0          0          1                   0                   0 #> 429          0          0          0                   0                   0 #> 430          1          0          0                   1                   0 #> 431          0          1          0                   0                   1 #> 432          0          0          1                   0                   0 #> 434          1          0          0                   0                   0 #> 435          0          1          0                   0                   0 #> 436          0          0          1                   0                   0 #> 438          1          0          0                   1                   0 #> 439          0          1          0                   0                   1 #> 444          0          0          1                   0                   0 #> 445          0          0          0                   0                   0 #> 447          0          1          0                   0                   0 #> 449          0          0          0                   0                   0 #> 450          1          0          0                   0                   0 #> 451          0          1          0                   0                   0 #> 453          0          0          0                   0                   0 #> 454          1          0          0                   0                   0 #> 455          0          1          0                   0                   0 #> 456          0          0          1                   0                   0 #> 457          0          0          0                   0                   0 #> 458          1          0          0                   0                   0 #> 459          0          1          0                   0                   0 #> 461          0          0          0                   0                   0 #> 463          0          1          0                   0                   1 #> 464          0          0          1                   0                   0 #> 465          0          0          0                   0                   0 #> 469          0          0          0                   0                   0 #> 470          1          0          0                   0                   0 #> 471          0          1          0                   0                   0 #> 473          0          0          0                   0                   0 #> 474          1          0          0                   1                   0 #> 477          0          0          0                   0                   0 #> 484          0          0          1                   0                   0 #> 487          0          1          0                   0                   0 #> 489          0          0          0                   0                   0 #> 490          1          0          0                   0                   0 #> 491          0          1          0                   0                   0 #> 494          1          0          0                   1                   0 #> 495          0          1          0                   0                   1 #> 496          0          0          1                   0                   0 #> 497          0          0          0                   0                   0 #> 498          1          0          0                   0                   0 #> 499          0          1          0                   0                   0 #> 501          0          0          0                   0                   0 #> 502          1          0          0                   1                   0 #> 504          0          0          1                   0                   0 #> 505          0          0          0                   0                   0 #> 508          0          0          1                   0                   0 #> 509          0          0          0                   0                   0 #> 510          1          0          0                   1                   0 #> 511          0          1          0                   0                   1 #> 512          0          0          1                   0                   0 #> 513          0          0          0                   0                   0 #> 518          1          0          0                   0                   0 #> 519          0          1          0                   0                   0 #> 521          0          0          0                   0                   0 #> 522          1          0          0                   0                   0 #> 523          0          1          0                   0                   0 #> 524          0          0          1                   0                   0 #> 526          1          0          0                   0                   0 #> 527          0          1          0                   0                   0 #> 528          0          0          1                   0                   0 #> 530          1          0          0                   0                   0 #> 531          0          1          0                   0                   0 #> 532          0          0          1                   0                   0 #> 534          1          0          0                   0                   0 #> 535          0          1          0                   0                   0 #> 536          0          0          1                   0                   0 #> 537          0          0          0                   0                   0 #> 538          1          0          0                   0                   0 #> 539          0          1          0                   0                   0 #> 540          0          0          1                   0                   0 #> 541          0          0          0                   0                   0 #> 544          0          0          1                   0                   0 #> 545          0          0          0                   0                   0 #> 546          1          0          0                   1                   0 #> 547          0          1          0                   0                   1 #> 548          0          0          1                   0                   0 #> 549          0          0          0                   0                   0 #> 550          1          0          0                   1                   0 #> 551          0          1          0                   0                   1 #> 555          0          1          0                   0                   1 #> 556          0          0          1                   0                   0 #> 557          0          0          0                   0                   0 #> 558          1          0          0                   0                   0 #> 560          0          0          1                   0                   0 #> 562          1          0          0                   1                   0 #> 564          0          0          1                   0                   0 #> 569          0          0          0                   0                   0 #> 570          1          0          0                   1                   0 #> 572          0          0          1                   0                   0 #> 573          0          0          0                   0                   0 #> 574          1          0          0                   0                   0 #> 575          0          1          0                   0                   0 #> 576          0          0          1                   0                   0 #> 577          0          0          0                   0                   0 #> 578          1          0          0                   0                   0 #> 579          0          1          0                   0                   0 #> 582          1          0          0                   1                   0 #> 583          0          1          0                   0                   1 #> 584          0          0          1                   0                   0 #> 585          0          0          0                   0                   0 #> 586          1          0          0                   0                   0 #> 587          0          1          0                   0                   0 #> 590          1          0          0                   1                   0 #> 591          0          1          0                   0                   1 #> 593          0          0          0                   0                   0 #> 594          1          0          0                   0                   0 #> 595          0          1          0                   0                   0 #> 596          0          0          1                   0                   0 #> 599          0          1          0                   0                   0 #> 600          0          0          1                   0                   0 #> 601          0          0          0                   0                   0 #> 602          1          0          0                   0                   0 #> 604          0          0          1                   0                   0 #> 606          1          0          0                   1                   0 #> 608          0          0          1                   0                   0 #> 609          0          0          0                   0                   0 #> 610          1          0          0                   0                   0 #> 611          0          1          0                   0                   0 #> 612          0          0          1                   0                   0 #> 613          0          0          0                   0                   0 #> 614          1          0          0                   0                   0 #> 616          0          0          1                   0                   0 #> 617          0          0          0                   0                   0 #> 619          0          1          0                   0                   1 #> 620          0          0          1                   0                   0 #> 621          0          0          0                   0                   0 #> 622          1          0          0                   0                   0 #> 623          0          1          0                   0                   0 #> 624          0          0          1                   0                   0 #> 625          0          0          0                   0                   0 #> 628          0          0          1                   0                   0 #> 630          1          0          0                   1                   0 #> 631          0          1          0                   0                   1 #> 632          0          0          1                   0                   0 #> 633          0          0          0                   0                   0 #> 634          1          0          0                   1                   0 #> 638          1          0          0                   1                   0 #> 639          0          1          0                   0                   1 #> 640          0          0          1                   0                   0 #> 642          1          0          0                   0                   0 #> 645          0          0          0                   0                   0 #> 648          0          0          1                   0                   0 #> 650          1          0          0                   0                   0 #> 652          0          0          1                   0                   0 #> 654          1          0          0                   0                   0 #> 655          0          1          0                   0                   0 #> 656          0          0          1                   0                   0 #> 657          0          0          0                   0                   0 #> 661          0          0          0                   0                   0 #> 665          0          0          0                   0                   0 #> 666          1          0          0                   0                   0 #> 668          0          0          1                   0                   0 #> 669          0          0          0                   0                   0 #> 670          1          0          0                   0                   0 #> 671          0          1          0                   0                   0 #> 673          0          0          0                   0                   0 #> 674          1          0          0                   0                   0 #> 678          1          0          0                   1                   0 #> 679          0          1          0                   0                   1 #> 680          0          0          1                   0                   0 #> 682          1          0          0                   0                   0 #> 684          0          0          1                   0                   0 #> 685          0          0          0                   0                   0 #> 686          1          0          0                   1                   0 #> 687          0          1          0                   0                   1 #> 689          0          0          0                   0                   0 #> 690          1          0          0                   1                   0 #> 691          0          1          0                   0                   1 #> 693          0          0          0                   0                   0 #> 694          1          0          0                   1                   0 #> 695          0          1          0                   0                   1 #> 697          0          0          0                   0                   0 #> 698          1          0          0                   0                   0 #> 700          0          0          1                   0                   0 #> 701          0          0          0                   0                   0 #> 702          1          0          0                   1                   0 #> 704          0          0          1                   0                   0 #> 707          0          1          0                   0                   0 #> 709          0          0          0                   0                   0 #> 712          0          0          1                   0                   0 #> 713          0          0          0                   0                   0 #> 715          0          1          0                   0                   1 #> 716          0          0          1                   0                   0 #> 717          0          0          0                   0                   0 #> 718          1          0          0                   0                   0 #> 719          0          1          0                   0                   0 #> 721          0          0          0                   0                   0 #> 723          0          1          0                   0                   0 #> 724          0          0          1                   0                   0 #> 727          0          1          0                   0                   1 #> 728          0          0          1                   0                   0 #> 729          0          0          0                   0                   0 #> 730          1          0          0                   1                   0 #> 734          1          0          0                   1                   0 #> 736          0          0          1                   0                   0 #> 738          1          0          0                   0                   0 #> 739          0          1          0                   0                   0 #> 740          0          0          1                   0                   0 #> 741          0          0          0                   0                   0 #> 742          1          0          0                   0                   0 #> 744          0          0          1                   0                   0 #> 745          0          0          0                   0                   0 #> 749          0          0          0                   0                   0 #> 751          0          1          0                   0                   0 #> 753          0          0          0                   0                   0 #> 754          1          0          0                   1                   0 #> 755          0          1          0                   0                   1 #> 757          0          0          0                   0                   0 #> 758          1          0          0                   1                   0 #> 759          0          1          0                   0                   1 #> 760          0          0          1                   0                   0 #> 761          0          0          0                   0                   0 #> 764          0          0          1                   0                   0 #> 765          0          0          0                   0                   0 #> 766          1          0          0                   1                   0 #> 767          0          1          0                   0                   1 #> 768          0          0          1                   0                   0 #> 770          1          0          0                   0                   0 #> 771          0          1          0                   0                   0 #> 772          0          0          1                   0                   0 #> 773          0          0          0                   0                   0 #> 774          1          0          0                   0                   0 #> 775          0          1          0                   0                   0 #> 776          0          0          1                   0                   0 #> 778          1          0          0                   1                   0 #> 779          0          1          0                   0                   1 #> 781          0          0          0                   0                   0 #> 782          1          0          0                   0                   0 #> 784          0          0          1                   0                   0 #> 788          0          0          1                   0                   0 #> 789          0          0          0                   0                   0 #> 790          1          0          0                   1                   0 #> 792          0          0          1                   0                   0 #> 797          0          0          0                   0                   0 #> 798          1          0          0                   0                   0 #> 800          0          0          1                   0                   0 #>     ARMCDTRT:AVISITVIS4 #> 2                     0 #> 4                     1 #> 6                     0 #> 7                     0 #> 8                     0 #> 10                    0 #> 12                    0 #> 13                    0 #> 14                    0 #> 16                    1 #> 17                    0 #> 19                    0 #> 20                    0 #> 23                    0 #> 25                    0 #> 26                    0 #> 28                    0 #> 29                    0 #> 30                    0 #> 31                    0 #> 32                    0 #> 33                    0 #> 34                    0 #> 36                    1 #> 39                    0 #> 41                    0 #> 42                    0 #> 43                    0 #> 44                    1 #> 45                    0 #> 46                    0 #> 47                    0 #> 51                    0 #> 52                    1 #> 55                    0 #> 59                    0 #> 60                    0 #> 62                    0 #> 64                    0 #> 65                    0 #> 68                    0 #> 69                    0 #> 70                    0 #> 72                    1 #> 73                    0 #> 74                    0 #> 75                    0 #> 76                    1 #> 78                    0 #> 79                    0 #> 82                    0 #> 83                    0 #> 84                    1 #> 85                    0 #> 86                    0 #> 87                    0 #> 88                    1 #> 89                    0 #> 90                    0 #> 91                    0 #> 93                    0 #> 94                    0 #> 95                    0 #> 96                    1 #> 97                    0 #> 98                    0 #> 99                    0 #> 100                   1 #> 101                   0 #> 102                   0 #> 103                   0 #> 104                   1 #> 105                   0 #> 107                   0 #> 108                   1 #> 109                   0 #> 110                   0 #> 111                   0 #> 112                   1 #> 113                   0 #> 114                   0 #> 116                   1 #> 117                   0 #> 118                   0 #> 119                   0 #> 120                   1 #> 121                   0 #> 123                   0 #> 125                   0 #> 128                   1 #> 129                   0 #> 130                   0 #> 132                   1 #> 133                   0 #> 134                   0 #> 135                   0 #> 136                   0 #> 137                   0 #> 138                   0 #> 140                   1 #> 142                   0 #> 144                   1 #> 145                   0 #> 146                   0 #> 147                   0 #> 148                   0 #> 149                   0 #> 151                   0 #> 153                   0 #> 155                   0 #> 156                   0 #> 157                   0 #> 158                   0 #> 159                   0 #> 162                   0 #> 163                   0 #> 164                   0 #> 165                   0 #> 168                   0 #> 169                   0 #> 170                   0 #> 171                   0 #> 172                   1 #> 173                   0 #> 177                   0 #> 178                   0 #> 179                   0 #> 180                   0 #> 181                   0 #> 182                   0 #> 183                   0 #> 185                   0 #> 186                   0 #> 187                   0 #> 190                   0 #> 191                   0 #> 193                   0 #> 194                   0 #> 195                   0 #> 197                   0 #> 198                   0 #> 199                   0 #> 201                   0 #> 202                   0 #> 204                   1 #> 206                   0 #> 208                   1 #> 209                   0 #> 210                   0 #> 217                   0 #> 218                   0 #> 219                   0 #> 221                   0 #> 224                   0 #> 226                   0 #> 227                   0 #> 228                   1 #> 230                   0 #> 231                   0 #> 233                   0 #> 235                   0 #> 236                   1 #> 237                   0 #> 238                   0 #> 239                   0 #> 240                   1 #> 241                   0 #> 242                   0 #> 244                   1 #> 246                   0 #> 250                   0 #> 251                   0 #> 252                   0 #> 253                   0 #> 254                   0 #> 256                   0 #> 257                   0 #> 258                   0 #> 259                   0 #> 260                   1 #> 261                   0 #> 262                   0 #> 263                   0 #> 264                   1 #> 265                   0 #> 266                   0 #> 267                   0 #> 268                   1 #> 269                   0 #> 270                   0 #> 273                   0 #> 274                   0 #> 275                   0 #> 276                   0 #> 277                   0 #> 278                   0 #> 280                   0 #> 281                   0 #> 282                   0 #> 283                   0 #> 284                   1 #> 285                   0 #> 286                   0 #> 287                   0 #> 291                   0 #> 292                   0 #> 293                   0 #> 295                   0 #> 296                   0 #> 298                   0 #> 299                   0 #> 300                   0 #> 301                   0 #> 304                   1 #> 305                   0 #> 306                   0 #> 307                   0 #> 308                   1 #> 310                   0 #> 311                   0 #> 312                   1 #> 316                   0 #> 317                   0 #> 318                   0 #> 319                   0 #> 322                   0 #> 323                   0 #> 324                   0 #> 325                   0 #> 327                   0 #> 328                   0 #> 329                   0 #> 330                   0 #> 331                   0 #> 332                   1 #> 336                   0 #> 339                   0 #> 340                   0 #> 341                   0 #> 342                   0 #> 343                   0 #> 344                   1 #> 345                   0 #> 347                   0 #> 349                   0 #> 351                   0 #> 352                   0 #> 353                   0 #> 354                   0 #> 355                   0 #> 356                   0 #> 357                   0 #> 363                   0 #> 364                   1 #> 365                   0 #> 367                   0 #> 368                   1 #> 370                   0 #> 371                   0 #> 372                   0 #> 373                   0 #> 375                   0 #> 376                   0 #> 378                   0 #> 379                   0 #> 381                   0 #> 382                   0 #> 384                   0 #> 385                   0 #> 386                   0 #> 388                   1 #> 389                   0 #> 390                   0 #> 391                   0 #> 392                   0 #> 394                   0 #> 397                   0 #> 398                   0 #> 399                   0 #> 402                   0 #> 403                   0 #> 405                   0 #> 406                   0 #> 407                   0 #> 408                   0 #> 409                   0 #> 410                   0 #> 411                   0 #> 413                   0 #> 415                   0 #> 416                   0 #> 418                   0 #> 419                   0 #> 421                   0 #> 422                   0 #> 423                   0 #> 424                   1 #> 427                   0 #> 428                   0 #> 429                   0 #> 430                   0 #> 431                   0 #> 432                   1 #> 434                   0 #> 435                   0 #> 436                   0 #> 438                   0 #> 439                   0 #> 444                   0 #> 445                   0 #> 447                   0 #> 449                   0 #> 450                   0 #> 451                   0 #> 453                   0 #> 454                   0 #> 455                   0 #> 456                   0 #> 457                   0 #> 458                   0 #> 459                   0 #> 461                   0 #> 463                   0 #> 464                   1 #> 465                   0 #> 469                   0 #> 470                   0 #> 471                   0 #> 473                   0 #> 474                   0 #> 477                   0 #> 484                   1 #> 487                   0 #> 489                   0 #> 490                   0 #> 491                   0 #> 494                   0 #> 495                   0 #> 496                   1 #> 497                   0 #> 498                   0 #> 499                   0 #> 501                   0 #> 502                   0 #> 504                   1 #> 505                   0 #> 508                   1 #> 509                   0 #> 510                   0 #> 511                   0 #> 512                   1 #> 513                   0 #> 518                   0 #> 519                   0 #> 521                   0 #> 522                   0 #> 523                   0 #> 524                   0 #> 526                   0 #> 527                   0 #> 528                   0 #> 530                   0 #> 531                   0 #> 532                   0 #> 534                   0 #> 535                   0 #> 536                   0 #> 537                   0 #> 538                   0 #> 539                   0 #> 540                   0 #> 541                   0 #> 544                   1 #> 545                   0 #> 546                   0 #> 547                   0 #> 548                   1 #> 549                   0 #> 550                   0 #> 551                   0 #> 555                   0 #> 556                   1 #> 557                   0 #> 558                   0 #> 560                   0 #> 562                   0 #> 564                   1 #> 569                   0 #> 570                   0 #> 572                   1 #> 573                   0 #> 574                   0 #> 575                   0 #> 576                   0 #> 577                   0 #> 578                   0 #> 579                   0 #> 582                   0 #> 583                   0 #> 584                   1 #> 585                   0 #> 586                   0 #> 587                   0 #> 590                   0 #> 591                   0 #> 593                   0 #> 594                   0 #> 595                   0 #> 596                   0 #> 599                   0 #> 600                   0 #> 601                   0 #> 602                   0 #> 604                   0 #> 606                   0 #> 608                   1 #> 609                   0 #> 610                   0 #> 611                   0 #> 612                   0 #> 613                   0 #> 614                   0 #> 616                   0 #> 617                   0 #> 619                   0 #> 620                   1 #> 621                   0 #> 622                   0 #> 623                   0 #> 624                   0 #> 625                   0 #> 628                   1 #> 630                   0 #> 631                   0 #> 632                   1 #> 633                   0 #> 634                   0 #> 638                   0 #> 639                   0 #> 640                   1 #> 642                   0 #> 645                   0 #> 648                   0 #> 650                   0 #> 652                   0 #> 654                   0 #> 655                   0 #> 656                   0 #> 657                   0 #> 661                   0 #> 665                   0 #> 666                   0 #> 668                   0 #> 669                   0 #> 670                   0 #> 671                   0 #> 673                   0 #> 674                   0 #> 678                   0 #> 679                   0 #> 680                   1 #> 682                   0 #> 684                   0 #> 685                   0 #> 686                   0 #> 687                   0 #> 689                   0 #> 690                   0 #> 691                   0 #> 693                   0 #> 694                   0 #> 695                   0 #> 697                   0 #> 698                   0 #> 700                   0 #> 701                   0 #> 702                   0 #> 704                   1 #> 707                   0 #> 709                   0 #> 712                   0 #> 713                   0 #> 715                   0 #> 716                   1 #> 717                   0 #> 718                   0 #> 719                   0 #> 721                   0 #> 723                   0 #> 724                   0 #> 727                   0 #> 728                   1 #> 729                   0 #> 730                   0 #> 734                   0 #> 736                   1 #> 738                   0 #> 739                   0 #> 740                   0 #> 741                   0 #> 742                   0 #> 744                   0 #> 745                   0 #> 749                   0 #> 751                   0 #> 753                   0 #> 754                   0 #> 755                   0 #> 757                   0 #> 758                   0 #> 759                   0 #> 760                   1 #> 761                   0 #> 764                   1 #> 765                   0 #> 766                   0 #> 767                   0 #> 768                   1 #> 770                   0 #> 771                   0 #> 772                   0 #> 773                   0 #> 774                   0 #> 775                   0 #> 776                   0 #> 778                   0 #> 779                   0 #> 781                   0 #> 782                   0 #> 784                   0 #> 788                   0 #> 789                   0 #> 790                   0 #> 792                   1 #> 797                   0 #> 798                   0 #> 800                   0 #> attr(,\"assign\") #>  [1] 0 1 1 2 3 4 4 4 5 5 5 #> attr(,\"contrasts\") #> attr(,\"contrasts\")$RACE #> [1] \"contr.treatment\" #>  #> attr(,\"contrasts\")$SEX #> [1] \"contr.treatment\" #>  #> attr(,\"contrasts\")$ARMCD #> [1] \"contr.treatment\" #>  #> attr(,\"contrasts\")$AVISIT #> [1] \"contr.treatment\" #>  #>  #> $y_vector #>   [1] 39.97105 20.48379 31.45522 36.87889 48.80809 35.98699 37.16444 33.89229 #>   [9] 33.74637 54.45055 32.31386 46.79361 41.71154 39.02423 31.93050 32.90947 #>  [17] 48.28031 32.23021 35.91080 45.54898 53.02877 47.16898 46.64287 58.09713 #>  [25] 44.97613 44.32755 38.97813 43.72862 46.43393 40.34576 42.76568 40.11155 #>  [33] 53.31791 56.07641 41.90837 34.65663 39.07791 35.89612 47.67264 22.65440 #>  [41] 40.85376 32.60048 33.64329 40.92278 32.14831 46.43604 41.34973 66.30382 #>  [49] 47.95358 53.97364 56.64544 49.70872 60.40497 45.98525 51.90911 41.50787 #>  [57] 53.42727 23.86859 35.98563 43.60626 29.59773 35.50688 55.42944 52.10530 #>  [65] 31.69644 32.16159 51.04735 55.85987 49.11706 49.25544 51.72211 69.99128 #>  [73] 22.07169 46.08393 52.42288 37.69466 44.59400 52.08897 58.22961 37.22824 #>  [81] 34.39863 36.34012 45.44182 41.54847 43.92172 61.83243 27.25656 45.65133 #>  [89] 33.19334 41.66826 27.12753 31.74858 41.60000 39.45250 32.61823 34.62445 #>  [97] 45.90515 36.17780 39.79796 50.08272 44.64316 39.73529 34.06164 40.18592 #> [105] 41.17584 57.76669 38.18460 47.19893 37.32785 43.16048 41.40349 30.15733 #> [113] 35.84353 40.95250 41.37928 50.17316 45.35226 39.06491 42.11960 29.81042 #> [121] 42.57055 47.81652 68.06024 35.62071 33.89134 36.42808 37.57519 58.46873 #> [129] 19.54516 31.13541 40.89955 22.18809 41.05857 37.32452 43.12432 41.99349 #> [137] 44.03080 38.66417 53.45993 29.81948 30.43859 40.18095 26.78578 34.55115 #> [145] 40.06421 43.09329 45.71567 40.74992 44.74635 40.14674 48.75859 46.43462 #> [153] 29.33990 47.93165 41.11632 47.05889 52.24599 54.14236 50.44618 37.53657 #> [161] 49.45840 59.12866 40.31268 39.66049 50.89726 56.13116 32.82981 46.53837 #> [169] 51.81265 29.91939 51.05656 50.50059 64.11388 32.21843 29.64732 45.09919 #> [177] 39.75659 37.28894 44.80145 65.95920 33.43439 33.57042 39.91543 49.57098 #> [185] 38.91634 36.69011 45.66665 52.07431 42.21411 45.02901 30.98338 44.72932 #> [193] 40.68711 34.71530 27.30752 37.31585 44.83000 32.93042 44.91911 45.68636 #> [201] 65.98800 46.60130 40.89786 46.66708 43.83270 44.11604 38.29612 51.38570 #> [209] 56.20979 43.45819 38.38741 56.42818 39.05050 54.09200 31.40521 46.13330 #> [217] 45.29845 28.06936 42.50283 46.45368 64.97366 43.97847 35.33466 39.34378 #> [225] 41.27633 39.83058 43.49673 44.06114 41.43742 46.16954 54.24024 36.61831 #> [233] 42.09272 50.69556 51.72563 53.89947 39.94420 56.42482 41.86385 34.56420 #> [241] 38.68927 62.88743 28.85343 49.29495 28.74029 43.59994 57.38616 35.36824 #> [249] 43.06110 31.27551 54.13245 25.97050 51.17493 48.44043 43.33128 55.93546 #> [257] 54.15312 40.60252 44.44715 40.54161 33.95563 43.67802 42.76023 42.82678 #> [265] 39.59218 33.49216 35.39266 42.36266 48.54368 43.94366 47.91204 20.72928 #> [273] 28.00599 40.19255 37.79360 36.75177 34.59822 39.32034 40.65702 43.03255 #> [281] 54.65715 35.55742 43.70215 42.52157 54.89337 32.03460 29.45107 45.35138 #> [289] 38.73784 41.42283 47.32385 47.55310 49.06509 29.22591 40.08175 45.68142 #> [297] 41.47403 42.51970 69.36099 42.39760 43.72376 49.47601 51.94188 40.59100 #> [305] 39.97833 31.69049 37.20517 46.28740 41.58720 32.17365 40.69375 32.28771 #> [313] 41.76205 40.06768 29.14213 39.50989 43.32349 47.16756 40.93020 42.19406 #> [321] 41.21057 38.54330 43.96324 42.67652 22.79584 31.43559 38.85064 48.24288 #> [329] 44.71302 51.85370 30.56757 59.90473 49.76150 47.21985 40.34525 48.29793 #> [337] 44.39634 41.71421 47.37535 42.03797 37.56100 45.11793 34.62530 45.28206 #> [345] 63.57761 35.80878 52.67314 35.88734 38.73222 46.70361 53.65398 36.71543 #> [353] 41.54317 51.67909 27.40130 30.33517 37.73092 29.11668 32.08830 41.66067 #> [361] 53.90815 35.06937 47.17615 56.49347 38.88006 47.54070 43.53705 31.82054 #> [369] 39.62816 44.95543 21.11543 34.74671 56.69249 22.73126 32.50075 42.37206 #> [377] 42.89847 55.62582 45.38998 52.66743 34.18931 45.59740 28.89198 38.46147 #> [385] 49.90357 44.14167 55.24278 27.38001 33.63251 39.34410 26.98575 24.04175 #> [393] 42.16648 44.75380 31.55469 44.42696 44.10343 37.87445 48.31828 50.21520 #> [401] 41.94615 39.62690 46.69763 43.75255 47.38873 32.43412 43.07163 42.99551 #> [409] 53.82759 50.64802 63.44051 34.48949 40.08056 47.46553 37.11697 36.25120 #> [417] 29.20171 31.53773 42.35683 64.78352 32.72757 37.50022 57.03861 36.32475 #> [425] 41.46725 59.01411 30.14970 34.91740 52.13900 58.73839 35.83185 56.41409 #> [433] 43.55593 44.26320 59.25579 28.47314 47.47581 46.47483 51.22677 45.82777 #> [441] 39.06783 29.99542 54.17796 44.55743 62.59579 35.48396 44.07768 46.57837 #> [449] 47.67979 22.15439 34.27765 36.90059 40.54285 29.09494 37.21768 43.08491 #> [457] 27.12174 34.11916 40.80230 45.89269 43.69153 29.22869 55.68362 31.90698 #> [465] 37.31061 40.75546 42.19474 44.87228 47.55198 50.62894 45.47551 48.62168 #> [473] 29.66493 34.57406 38.11676 33.77204 34.26148 58.81037 39.88119 31.62708 #> [481] 48.22049 42.58829 49.33262 53.74331 29.71857 30.45651 38.29800 36.81040 #> [489] 42.35045 39.39860 49.73629 41.58082 43.58901 40.16762 41.08206 69.37409 #> [497] 41.27625 44.76138 39.69815 38.44296 48.20586 35.50735 32.08153 44.69256 #> [505] 42.18689 37.01741 38.26920 49.28806 40.45953 45.10337 45.58250 62.96989 #> [513] 30.78252 44.69667 32.72491 45.78702 48.74886 84.08449 30.19495 36.78573 #> [521] 61.03588 20.36749 35.22480 37.42847 30.20501 49.12862 47.31234 19.28388 #> [529] 30.00682 49.21768 40.13353 42.34534 52.32575 69.26254 35.70341 41.64454 #> [537] 54.25081 #>  #> $neg_log_lik #> [1] 1693.225 #>  #> $jac_list #> $jac_list[[1]] #>              [,1]         [,2]          [,3]         [,4]        [,5] #>  [1,]  1.16951547 -0.051411669 -4.500536e-02 -0.029651633 -1.11563537 #>  [2,] -0.05141167  0.087578417  3.457645e-02  0.007196977  0.00260112 #>  [3,] -0.04500536  0.034576445  8.503448e-02  0.007128258 -0.01178718 #>  [4,] -0.02965163  0.007196977  7.128258e-03  0.061521074 -0.01065994 #>  [5,] -1.11563537  0.002601120 -1.178718e-02 -0.010659937  2.28786967 #>  [6,] -0.98171081  0.004118345  8.951822e-03 -0.003655354  0.97932241 #>  [7,] -1.07753684  0.005790797  1.000235e-02 -0.006895078  1.07595394 #>  [8,] -0.99821296 -0.001933166  8.676189e-03 -0.005754318  0.99903467 #>  [9,]  0.97217159  0.008520375  1.325459e-02  0.002102199 -1.98758938 #> [10,]  1.06909044  0.008539116  5.337878e-03  0.004325848 -2.18658687 #> [11,]  0.99545698  0.001249297  7.858953e-05  0.008328731 -2.01758658 #>               [,6]         [,7]         [,8]         [,9]        [,10] #>  [1,] -0.981710811 -1.077536844 -0.998212960  0.972171586  1.069090436 #>  [2,]  0.004118345  0.005790797 -0.001933166  0.008520375  0.008539116 #>  [3,]  0.008951822  0.010002353  0.008676189  0.013254593  0.005337878 #>  [4,] -0.003655354 -0.006895078 -0.005754318  0.002102199  0.004325848 #>  [5,]  0.979322409  1.075953942  0.999034668 -1.987589379 -2.186586867 #>  [6,]  0.836813950  0.933379638  0.857077689 -0.836557168 -0.933038454 #>  [7,]  0.933379638  1.029968833  0.953510481 -0.932874939 -1.029216841 #>  [8,]  0.857077689  0.953510481  0.877307817 -0.857056128 -0.953603898 #>  [9,] -0.836557168 -0.932874939 -0.857056128  1.689099664  1.888995410 #> [10,] -0.933038454 -1.029216841 -0.953603898  1.888995410  2.089042080 #> [11,] -0.857161705 -0.953646838 -0.877357597  1.718938218  1.919022103 #>               [,11] #>  [1,]  9.954570e-01 #>  [2,]  1.249297e-03 #>  [3,]  7.858953e-05 #>  [4,]  8.328731e-03 #>  [5,] -2.017587e+00 #>  [6,] -8.571617e-01 #>  [7,] -9.536468e-01 #>  [8,] -8.773576e-01 #>  [9,]  1.718938e+00 #> [10,]  1.919022e+00 #> [11,]  1.749781e+00 #>  #> $jac_list[[2]] #>               [,1]         [,2]         [,3]         [,4]          [,5] #>  [1,]  0.127530632 -0.129971302 -0.091071769 -0.098349416 -0.0096292734 #>  [2,] -0.129971302  0.223312665  0.100844978  0.022808956  0.0192625869 #>  [3,] -0.091071769  0.100844978  0.241127463  0.008554981 -0.0182023654 #>  [4,] -0.098349416  0.022808956  0.008554981  0.158588894  0.0074601052 #>  [5,] -0.009629273  0.019262587 -0.018202365  0.007460105  0.0052924416 #>  [6,]  0.143539995 -0.001146971 -0.006231823  0.002417212 -0.1423316324 #>  [7,] -0.005405883  0.005303578 -0.005757050  0.007567400  0.0017862785 #>  [8,] -0.000946874 -0.001369925 -0.008947960  0.005898220  0.0012090250 #>  [9,] -0.135790414 -0.003851407 -0.005449632 -0.008289146  0.2986740317 #> [10,]  0.009027932  0.004055441 -0.000926189 -0.019591078  0.0003322175 #> [11,]  0.010549853 -0.009420670 -0.001929567 -0.011019805 -0.0012298551 #>               [,6]          [,7]          [,8]         [,9]         [,10] #>  [1,]  0.143539995 -0.0054058831 -0.0009468740 -0.135790414  0.0090279324 #>  [2,] -0.001146971  0.0053035778 -0.0013699251 -0.003851407  0.0040554408 #>  [3,] -0.006231823 -0.0057570499 -0.0089479596 -0.005449632 -0.0009261890 #>  [4,]  0.002417212  0.0075673998  0.0058982202 -0.008289146 -0.0195910780 #>  [5,] -0.142331632  0.0017862785  0.0012090250  0.298674032  0.0003322175 #>  [6,]  0.448003739 -0.1162181843 -0.0706352007 -0.448120908  0.1161018055 #>  [7,] -0.116218184  0.0006208093  0.0004239335  0.115940070 -0.0006363704 #>  [8,] -0.070635201  0.0004239335  0.0004185598  0.070507365 -0.0006302982 #>  [9,] -0.448120908  0.1159400699  0.0705073651  0.858765561 -0.2400454620 #> [10,]  0.116101806 -0.0006363704 -0.0006302982 -0.240045462  0.0023653115 #> [11,]  0.070632347 -0.0007028855 -0.0003653049 -0.146687106  0.0008087299 #>               [,11] #>  [1,]  0.0105498528 #>  [2,] -0.0094206703 #>  [3,] -0.0019295671 #>  [4,] -0.0110198055 #>  [5,] -0.0012298551 #>  [6,]  0.0706323474 #>  [7,] -0.0007028855 #>  [8,] -0.0003653049 #>  [9,] -0.1466871055 #> [10,]  0.0008087299 #> [11,]  0.0008254939 #>  #> $jac_list[[3]] #>               [,1]         [,2]         [,3]         [,4]         [,5] #>  [1,]  0.245560090 -0.241005288 -0.199099087 -0.186929231 -0.007083200 #>  [2,] -0.241005288  0.415633400  0.207029802  0.031893969  0.028836257 #>  [3,] -0.199099087  0.207029802  0.500748613  0.030611285 -0.048411146 #>  [4,] -0.186929231  0.031893969  0.030611285  0.306670056  0.005230923 #>  [5,] -0.007083200  0.028836257 -0.048411146  0.005230923  0.011939767 #>  [6,] -0.006054804  0.001585372 -0.007248864  0.012399309  0.001516357 #>  [7,]  0.038517951  0.007606844 -0.008011985  0.011376159 -0.044066774 #>  [8,] -0.002604365  0.001058044 -0.013637333  0.008572980  0.002399258 #>  [9,]  0.007160700  0.005781258  0.015632421 -0.023181005 -0.001960055 #> [10,] -0.036322394  0.009928403  0.006711191 -0.029277060  0.097958291 #> [11,]  0.012868838 -0.013894309  0.004513448 -0.013783909 -0.002935595 #>                [,6]         [,7]          [,8]         [,9]        [,10] #>  [1,] -0.0060548035  0.038517951 -0.0026043654  0.007160700 -0.036322394 #>  [2,]  0.0015853720  0.007606844  0.0010580438  0.005781258  0.009928403 #>  [3,] -0.0072488639 -0.008011985 -0.0136373325  0.015632421  0.006711191 #>  [4,]  0.0123993093  0.011376159  0.0085729799 -0.023181005 -0.029277060 #>  [5,]  0.0015163568 -0.044066774  0.0023992580 -0.001960055  0.097958291 #>  [6,]  0.0005531211 -0.019244874  0.0005443283 -0.001131917  0.018650673 #>  [7,] -0.0192448742  0.322767841 -0.0369215899  0.018771763 -0.322953100 #>  [8,]  0.0005443283 -0.036921590  0.0006655005 -0.001070581  0.036691456 #>  [9,] -0.0011319168  0.018771763 -0.0010705807  0.002312297 -0.037787975 #> [10,]  0.0186506733 -0.322953100  0.0366914555 -0.037787975  0.729050666 #> [11,] -0.0007378619  0.036578230 -0.0007538172  0.001139903 -0.078301890 #>               [,11] #>  [1,]  0.0128688380 #>  [2,] -0.0138943091 #>  [3,]  0.0045134482 #>  [4,] -0.0137839090 #>  [5,] -0.0029355951 #>  [6,] -0.0007378619 #>  [7,]  0.0365782299 #>  [8,] -0.0007538172 #>  [9,]  0.0011399032 #> [10,] -0.0783018900 #> [11,]  0.0012934307 #>  #> $jac_list[[4]] #>               [,1]          [,2]          [,3]          [,4]          [,5] #>  [1,]  0.029388061 -0.0300363972 -0.0190464016 -0.0219001534 -0.0026139702 #>  [2,] -0.030036397  0.0534144734  0.0204813833  0.0011759493  0.0060482951 #>  [3,] -0.019046402  0.0204813833  0.0591610472  0.0004350294 -0.0075372943 #>  [4,] -0.021900153  0.0011759493  0.0004350294  0.0391623541  0.0015980965 #>  [5,] -0.002613970  0.0060482951 -0.0075372943  0.0015980965  0.0024815728 #>  [6,] -0.001287289  0.0013882825 -0.0017696952  0.0017825394  0.0005500661 #>  [7,] -0.001819822  0.0029497205 -0.0021392898  0.0014943281  0.0008816109 #>  [8,]  0.120475742  0.0066564090 -0.0025523369 -0.0005390796 -0.1213358437 #>  [9,]  0.001514454  0.0003149105  0.0035339826 -0.0042346457 -0.0006413058 #> [10,]  0.001998149  0.0003181908  0.0023183532 -0.0048503188 -0.0004152991 #> [11,] -0.121026181 -0.0031128838  0.0032728586 -0.0016022972  0.2665382625 #>                [,6]          [,7]          [,8]          [,9]         [,10] #>  [1,] -0.0012872891 -0.0018198218  0.1204757421  0.0015144537  0.0019981492 #>  [2,]  0.0013882825  0.0029497205  0.0066564090  0.0003149105  0.0003181908 #>  [3,] -0.0017696952 -0.0021392898 -0.0025523369  0.0035339826  0.0023183532 #>  [4,]  0.0017825394  0.0014943281 -0.0005390796 -0.0042346457 -0.0048503188 #>  [5,]  0.0005500661  0.0008816109 -0.1213358437 -0.0006413058 -0.0004152991 #>  [6,]  0.0001286007  0.0001813006 -0.0503065912 -0.0002302344 -0.0001918272 #>  [7,]  0.0001813006  0.0002904375 -0.1134126363 -0.0002434025 -0.0001634396 #>  [8,] -0.0503065912 -0.1134126363  2.5685656978  0.0503712957  0.1139567512 #>  [9,] -0.0002302344 -0.0002434025  0.0503712957  0.0005410878  0.0005376701 #> [10,] -0.0001918272 -0.0001634396  0.1139567512  0.0005376701  0.0005457575 #> [11,]  0.0502540492  0.1134358458 -2.5686970396 -0.1159679830 -0.2486909707 #>              [,11] #>  [1,] -0.121026181 #>  [2,] -0.003112884 #>  [3,]  0.003272859 #>  [4,] -0.001602297 #>  [5,]  0.266538263 #>  [6,]  0.050254049 #>  [7,]  0.113435846 #>  [8,] -2.568697040 #>  [9,] -0.115967983 #> [10,] -0.248690971 #> [11,]  5.099408635 #>  #> $jac_list[[5]] #>               [,1]          [,2]          [,3]          [,4]         [,5] #>  [1,]  0.004551316 -0.0879251090 -0.0675549697 -0.0619695011  0.082243669 #>  [2,] -0.087925109  0.1485375633  0.0683640555  0.0155723082  0.009620691 #>  [3,] -0.067554970  0.0683640555  0.1594567207  0.0077525334 -0.017394272 #>  [4,] -0.061969501  0.0155723082  0.0077525334  0.1048824324 -0.005511091 #>  [5,]  0.082243669  0.0096206908 -0.0173942722 -0.0055110913 -0.156537882 #>  [6,]  0.385905592 -0.0011341106  0.0027606978 -0.0059892150 -0.383415856 #>  [7,]  0.077428636  0.0046614854  0.0022487032  0.0005457593 -0.079946648 #>  [8,]  0.084542958 -0.0004665567  0.0005575602 -0.0003711182 -0.084356478 #>  [9,] -0.386649427 -0.0035180888 -0.0074083952  0.0127403371  0.789358432 #> [10,] -0.082343916  0.0054837326  0.0048099471 -0.0025669755  0.163052708 #> [11,] -0.085004957 -0.0033454411  0.0014294624  0.0037285530  0.162124303 #>               [,6]          [,7]          [,8]         [,9]        [,10] #>  [1,]  0.385905592  0.0774286360  0.0845429585 -0.386649427 -0.082343916 #>  [2,] -0.001134111  0.0046614854 -0.0004665567 -0.003518089  0.005483733 #>  [3,]  0.002760698  0.0022487032  0.0005575602 -0.007408395  0.004809947 #>  [4,] -0.005989215  0.0005457593 -0.0003711182  0.012740337 -0.002566976 #>  [5,] -0.383415856 -0.0799466480 -0.0843564781  0.789358432  0.163052708 #>  [6,] -0.453414690 -0.3488427144 -0.2936422304  0.453945775  0.349184039 #>  [7,] -0.348842714 -0.0807840817 -0.0848246969  0.349077736  0.081076804 #>  [8,] -0.293642230 -0.0848246969 -0.0924408766  0.293908832  0.084761720 #>  [9,]  0.453945775  0.3490777360  0.2939088319 -0.944430402 -0.718327935 #> [10,]  0.349184039  0.0810768043  0.0847617199 -0.718327935 -0.165357544 #> [11,]  0.293825856  0.0847300392  0.0924354634 -0.593948987 -0.164508835 #>              [,11] #>  [1,] -0.085004957 #>  [2,] -0.003345441 #>  [3,]  0.001429462 #>  [4,]  0.003728553 #>  [5,]  0.162124303 #>  [6,]  0.293825856 #>  [7,]  0.084730039 #>  [8,]  0.092435463 #>  [9,] -0.593948987 #> [10,] -0.164508835 #> [11,] -0.172559427 #>  #> $jac_list[[6]] #>              [,1]         [,2]          [,3]         [,4]        [,5] #>  [1,]  0.08542157 -0.137826561 -0.1282702232 -0.078379265  0.05003098 #>  [2,] -0.13782656  0.220960935  0.1142518746  0.018491525  0.01153614 #>  [3,] -0.12827022  0.114251875  0.2618437788  0.019186952 -0.02405239 #>  [4,] -0.07837927  0.018491525  0.0191869519  0.160356324 -0.01893061 #>  [5,]  0.05003098  0.011536139 -0.0240523934 -0.018930606 -0.06335921 #>  [6,]  0.03659983  0.008950646  0.0157004609 -0.014175944 -0.03717414 #>  [7,]  0.26882833  0.006132240  0.0150583035 -0.015518471 -0.26769477 #>  [8,]  0.04288401  0.005444284  0.0157211567 -0.017201178 -0.04062223 #>  [9,] -0.04557653  0.006113619  0.0075835994  0.007848601  0.06486011 #> [10,] -0.27641022  0.002373389  0.0003094496  0.014331910  0.54658686 #> [11,] -0.04574165 -0.002160889 -0.0032101287  0.015234861  0.06878771 #>               [,6]        [,7]         [,8]         [,9]         [,10] #>  [1,]  0.036599828  0.26882833  0.042884012 -0.045576528 -0.2764102205 #>  [2,]  0.008950646  0.00613224  0.005444284  0.006113619  0.0023733885 #>  [3,]  0.015700461  0.01505830  0.015721157  0.007583599  0.0003094496 #>  [4,] -0.014175944 -0.01551847 -0.017201178  0.007848601  0.0143319097 #>  [5,] -0.037174143 -0.26769477 -0.040622232  0.064860106  0.5465868612 #>  [6,] -0.036537528 -0.18223535 -0.036883216  0.037420940  0.1835803939 #>  [7,] -0.182235353 -0.43033005 -0.191856063  0.183200042  0.4313521431 #>  [8,] -0.036883216 -0.19185606 -0.040133150  0.037660140  0.1929065668 #>  [9,]  0.037420940  0.18320004  0.037660140 -0.066023556 -0.3692939735 #> [10,]  0.183580394  0.43135214  0.192906567 -0.369293973 -0.8905279201 #> [11,]  0.036772748  0.19190963  0.039985139 -0.065412140 -0.3881129679 #>              [,11] #>  [1,] -0.045741653 #>  [2,] -0.002160889 #>  [3,] -0.003210129 #>  [4,]  0.015234861 #>  [5,]  0.068787712 #>  [6,]  0.036772748 #>  [7,]  0.191909629 #>  [8,]  0.039985139 #>  [9,] -0.065412140 #> [10,] -0.388112968 #> [11,] -0.069601485 #>  #> $jac_list[[7]] #>               [,1]         [,2]         [,3]         [,4]         [,5] #>  [1,]  0.114086163 -0.097427413 -0.083769143 -0.084335893 -0.015177889 #>  [2,] -0.097427413  0.171565410  0.091327221  0.014994572  0.012589376 #>  [3,] -0.083769143  0.091327221  0.214271278  0.021099078 -0.018328294 #>  [4,] -0.084335893  0.014994572  0.021099078  0.128252724  0.003057876 #>  [5,] -0.015177888  0.012589376 -0.018328294  0.003057876  0.026047595 #>  [6,] -0.004551883 -0.009562540 -0.014683447 -0.005348839  0.015231549 #>  [7,] -0.007876709 -0.005961614 -0.011655745  0.002717431  0.012237849 #>  [8,] -0.010527492 -0.005408482 -0.012494865  0.007646903  0.012257406 #>  [9,]  0.015278315 -0.001787167 -0.003423079  0.002034906 -0.026811770 #> [10,]  0.016026952 -0.001839693  0.001582606 -0.006787330 -0.021212851 #> [11,]  0.017090667 -0.004524006  0.001369913 -0.007745887 -0.022343966 #>               [,6]         [,7]         [,8]         [,9]        [,10] #>  [1,] -0.004551883 -0.007876709 -0.010527492  0.015278315  0.016026952 #>  [2,] -0.009562540 -0.005961614 -0.005408482 -0.001787167 -0.001839693 #>  [3,] -0.014683447 -0.011655745 -0.012494865 -0.003423079  0.001582606 #>  [4,] -0.005348839  0.002717431  0.007646903  0.002034906 -0.006787330 #>  [5,]  0.015231549  0.012237849  0.012257406 -0.026811770 -0.021212851 #>  [6,]  0.004657885  0.186432595  0.014340663 -0.004729213 -0.186448877 #>  [7,]  0.186432595  0.028282911  0.031912908 -0.186868010 -0.028980196 #>  [8,]  0.014340663  0.031912908  0.011976141 -0.014607475 -0.032546095 #>  [9,] -0.004729213 -0.186868010 -0.014607475  0.011985701  0.401133291 #> [10,] -0.186448877 -0.028980196 -0.032546095  0.401133291  0.054465595 #> [11,] -0.013914898 -0.031751346 -0.011780287  0.026473173  0.067484731 #>              [,11] #>  [1,]  0.017090667 #>  [2,] -0.004524006 #>  [3,]  0.001369913 #>  [4,] -0.007745887 #>  [5,] -0.022343966 #>  [6,] -0.013914898 #>  [7,] -0.031751346 #>  [8,] -0.011780287 #>  [9,]  0.026473173 #> [10,]  0.067484731 #> [11,]  0.021879286 #>  #> $jac_list[[8]] #>              [,1]          [,2]          [,3]          [,4]          [,5] #>  [1,] -0.00632345 -0.0330247357 -0.0306335895 -2.713874e-02  0.0429007253 #>  [2,] -0.03302474  0.0689271627  0.0264214268  3.098127e-03  0.0007687068 #>  [3,] -0.03063359  0.0264214268  0.0727011519  2.052435e-03 -0.0042893487 #>  [4,] -0.02713874  0.0030981271  0.0020524349  5.004350e-02 -0.0033130642 #>  [5,]  0.04290073  0.0007687068 -0.0042893487 -3.313064e-03 -0.0739170792 #>  [6,]  0.03777660 -0.0029030180  0.0031236250 -8.298226e-05 -0.0379760333 #>  [7,]  0.04017543 -0.0026049036  0.0036099233 -3.983313e-04 -0.0404707372 #>  [8,]  0.59603872  0.0125429022  0.0064458743 -7.951492e-03 -0.5979172843 #>  [9,] -0.03947397  0.0048333140 -0.0003088879  5.586368e-04  0.0703908762 #> [10,] -0.04173345  0.0069117346 -0.0021797914 -2.391208e-04  0.0750270552 #> [11,] -0.60670661  0.0066710186  0.0026709550  8.298984e-03  1.2937347687 #>                [,6]          [,7]         [,8]          [,9]         [,10] #>  [1,]  3.777660e-02  0.0401754343  0.596038719 -0.0394739661 -0.0417334546 #>  [2,] -2.903018e-03 -0.0026049036  0.012542902  0.0048333140  0.0069117346 #>  [3,]  3.123625e-03  0.0036099233  0.006445874 -0.0003088879 -0.0021797914 #>  [4,] -8.298226e-05 -0.0003983313 -0.007951492  0.0005586368 -0.0002391208 #>  [5,] -3.797603e-02 -0.0404707372 -0.597917284  0.0703908762  0.0750270552 #>  [6,] -3.799992e-02 -0.0371638557 -0.388140283  0.0380613394  0.0369626471 #>  [7,] -3.716386e-02 -0.0395400787 -0.528270623  0.0372504450  0.0393651521 #>  [8,] -3.881403e-01 -0.5282706229 -0.719929656  0.3887917044  0.5296190355 #>  [9,]  3.806134e-02  0.0372504450  0.388791704 -0.0710154532 -0.0696899327 #> [10,]  3.696265e-02  0.0393651521  0.529619035 -0.0696899327 -0.0737155799 #> [11,]  3.883582e-01  0.5289079321  0.719834718 -0.8523505466 -1.1452150099 #>              [,11] #>  [1,] -0.606706606 #>  [2,]  0.006671019 #>  [3,]  0.002670955 #>  [4,]  0.008298984 #>  [5,]  1.293734769 #>  [6,]  0.388358233 #>  [7,]  0.528907932 #>  [8,]  0.719834718 #>  [9,] -0.852350547 #> [10,] -1.145215010 #> [11,] -1.607721763 #>  #> $jac_list[[9]] #>               [,1]          [,2]          [,3]          [,4]         [,5] #>  [1,]  0.041473959 -0.0314606272 -0.0168549200 -0.0231524166 -0.015155129 #>  [2,] -0.031460627  0.0538809591  0.0221715386  0.0036557284  0.005427258 #>  [3,] -0.016854920  0.0221715386  0.0558983069 -0.0009962606 -0.007335693 #>  [4,] -0.023152417  0.0036557284 -0.0009962606  0.0381428652  0.004271950 #>  [5,] -0.015155129  0.0054272576 -0.0073356932  0.0042719496  0.024739071 #>  [6,] -0.014696964  0.0039311665 -0.0056690998 -0.0000112355  0.015484054 #>  [7,] -0.013186168  0.0024647479 -0.0036293148  0.0026085423  0.012322919 #>  [8,] -0.006261575  0.0137271545 -0.0049091072 -0.0033131287  0.005509253 #>  [9,]  0.018453254 -0.0070166493  0.0002455207 -0.0023505381 -0.027859076 #> [10,]  0.014008277  0.0005465711  0.0030723292 -0.0065715204 -0.023077380 #> [11,]  0.004507731 -0.0020504017  0.0049401847 -0.0032191373 -0.020306631 #>                [,6]         [,7]         [,8]          [,9]         [,10] #>  [1,] -0.0146969636 -0.013186168 -0.006261574  0.0184532542  0.0140082769 #>  [2,]  0.0039311665  0.002464748  0.013727155 -0.0070166493  0.0005465711 #>  [3,] -0.0056690998 -0.003629315 -0.004909107  0.0002455207  0.0030723292 #>  [4,] -0.0000112355  0.002608542 -0.003313129 -0.0023505381 -0.0065715204 #>  [5,]  0.0154840543  0.012322919  0.005509253 -0.0278590763 -0.0230773802 #>  [6,]  0.0039160699  0.014184770  0.435631004 -0.0039403699 -0.0138334893 #>  [7,]  0.0141847700  0.011665630  0.022251231 -0.0143350648 -0.0116250116 #>  [8,]  0.4356310036  0.022251231  0.108575190 -0.4352779840 -0.0209640018 #>  [9,] -0.0039403698 -0.014335065 -0.435277984  0.0083177291  0.0267726469 #> [10,] -0.0138334891 -0.011625011 -0.020964002  0.0267726468  0.0233268432 #> [11,] -0.4357095614 -0.022010417 -0.108751449  0.9189699561  0.0633575579 #>              [,11] #>  [1,]  0.004507731 #>  [2,] -0.002050402 #>  [3,]  0.004940185 #>  [4,] -0.003219137 #>  [5,] -0.020306631 #>  [6,] -0.435709561 #>  [7,] -0.022010417 #>  [8,] -0.108751448 #>  [9,]  0.918969956 #> [10,]  0.063357558 #> [11,]  0.246113616 #>  #> $jac_list[[10]] #>               [,1]          [,2]         [,3]         [,4]          [,5] #>  [1,]  0.047509505 -0.0400177876 -0.028260630 -0.034012888 -0.0080787362 #>  [2,] -0.040017788  0.0684544433  0.031820681  0.003857395  0.0065759063 #>  [3,] -0.028260630  0.0318206815  0.091939662  0.002503658 -0.0134695622 #>  [4,] -0.034012887  0.0038573948  0.002503658  0.053295287  0.0039965501 #>  [5,] -0.008078736  0.0065759063 -0.013469562  0.003996550  0.0125472203 #>  [6,] -0.007063905  0.0004634755 -0.004672032  0.005868905  0.0054358762 #>  [7,] -0.005445835  0.0014959340 -0.004698968  0.003207222  0.0049143606 #>  [8,] -0.000808625  0.0032326140  0.008125468 -0.006370954  0.0003638005 #>  [9,]  0.006892832  0.0013272345  0.007033864 -0.007504718 -0.0092578273 #> [10,]  0.006217393 -0.0029139736  0.005195181 -0.003467933 -0.0090043596 #> [11,] -0.011016188  0.0114643177  0.011169851  0.009527839 -0.0081867948 #>                [,6]         [,7]          [,8]         [,9]        [,10] #>  [1,] -0.0070639048 -0.005445835 -0.0008086251  0.006892832  0.006217394 #>  [2,]  0.0004634755  0.001495934  0.0032326141  0.001327235 -0.002913974 #>  [3,] -0.0046720325 -0.004698968  0.0081254684  0.007033864  0.005195181 #>  [4,]  0.0058689047  0.003207222 -0.0063709544 -0.007504718 -0.003467933 #>  [5,]  0.0054358762  0.004914360  0.0003638006 -0.009257828 -0.009004360 #>  [6,]  0.0055361362  0.003344713 -0.0009680344 -0.005842300 -0.003635250 #>  [7,]  0.0033447132  0.004126800  0.3172248299 -0.003525075 -0.004295166 #>  [8,] -0.0009680343  0.317224830 -0.0604796213  0.001431163 -0.316729597 #>  [9,] -0.0058423005 -0.003525075  0.0014311627  0.009950117  0.007200086 #> [10,] -0.0036352494 -0.004295166 -0.3167295969  0.007200085  0.009148940 #> [11,]  0.0008961252 -0.317074465  0.0602901477  0.008112531  0.703015371 #>               [,11] #>  [1,] -0.0110161883 #>  [2,]  0.0114643177 #>  [3,]  0.0111698507 #>  [4,]  0.0095278386 #>  [5,] -0.0081867950 #>  [6,]  0.0008961252 #>  [7,] -0.3170744650 #>  [8,]  0.0602901477 #>  [9,]  0.0081125308 #> [10,]  0.7030153705 #> [11,] -0.1100765169 #>  #>  #> $theta_vcov #>                [,1]          [,2]          [,3]          [,4]          [,5] #>  [1,]  3.702524e-03 -1.215947e-04 -4.731168e-05  1.450739e-05  1.497878e-03 #>  [2,] -1.215947e-04  4.166297e-03  5.181830e-06 -8.501705e-05 -2.892842e-03 #>  [3,] -4.731168e-05  5.181830e-06  4.125814e-03 -1.641174e-05 -9.040069e-05 #>  [4,]  1.450739e-05 -8.501705e-05 -1.641174e-05  3.954303e-03  1.872784e-04 #>  [5,]  1.497878e-03 -2.892842e-03 -9.040069e-05  1.872784e-04  1.162924e-02 #>  [6,]  9.528883e-04 -3.051437e-04 -1.464540e-03  1.037445e-04  1.171667e-03 #>  [7,] -2.602792e-04  7.154405e-04 -1.610053e-04 -1.022748e-04 -8.342308e-04 #>  [8,]  4.907597e-04  3.579757e-04  1.323707e-04 -1.731809e-03 -4.115907e-04 #>  [9,]  2.835132e-05  1.522769e-04 -5.031469e-05 -5.113057e-06 -9.715561e-05 #> [10,] -7.267721e-05 -1.851224e-05  8.198068e-05  1.959919e-04 -1.454858e-04 #>                [,6]          [,7]          [,8]          [,9]         [,10] #>  [1,]  0.0009528883 -0.0002602792  0.0004907597  2.835132e-05 -7.267721e-05 #>  [2,] -0.0003051437  0.0007154405  0.0003579757  1.522769e-04 -1.851224e-05 #>  [3,] -0.0014645400 -0.0001610053  0.0001323707 -5.031469e-05  8.198068e-05 #>  [4,]  0.0001037445 -0.0001022748 -0.0017318089 -5.113057e-06  1.959919e-04 #>  [5,]  0.0011716674 -0.0008342308 -0.0004115907 -9.715561e-05 -1.454858e-04 #>  [6,]  0.0113483186 -0.0011633727 -0.0004920010  1.126993e-04 -1.244717e-04 #>  [7,] -0.0011633727  0.0117530828  0.0003182121 -2.510208e-04  6.492154e-04 #>  [8,] -0.0004920010  0.0003182121  0.0152793330 -2.440027e-03  1.085145e-03 #>  [9,]  0.0001126993 -0.0002510208 -0.0024400268  9.713650e-03 -5.203255e-04 #> [10,] -0.0001244717  0.0006492154  0.0010851454 -5.203255e-04  1.123606e-02 #>  # Get convergence code and message. component(fit, c(\"convergence\", \"conv_message\")) #> $convergence #> [1] 0 #>  #> $conv_message #> [1] \"CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH\" #>  # Get modeled formula as a string. component(fit, c(\"formula\")) #> [1] \"FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID)\""},{"path":"https://openpharma.github.io/mmrm/main/reference/covariance_types.html","id":null,"dir":"Reference","previous_headings":"","what":"covariance type — covariance_types","title":"covariance type — covariance_types","text":"covariance type","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/covariance_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"covariance type — covariance_types","text":"","code":"cov_type  cov_type_spatial"},{"path":"https://openpharma.github.io/mmrm/main/reference/covariance_types.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"covariance type — covariance_types","text":"vector supported covariance structures. cov_type common time points covariance structures, cov_type_spatial spatial covariance structures.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/covariance_types.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"covariance type — covariance_types","text":"abbreviation covariance structures","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/covariance_types.html","id":"common-covariance-structures","dir":"Reference","previous_headings":"","what":"Common Covariance Structures","title":"covariance type — covariance_types","text":"\\(\\) \\(j\\) denote \\(\\)-th \\(j\\)-th time points, respectively, total \\(m\\) time points, \\(1 \\leq , j \\leq m\\). Note ante-dependence covariance structure package refers homogeneous ante-dependence, ante-dependence covariance structure SAS PROC MIXED refers heterogeneous ante-dependence homogeneous version available SAS.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/covariance_types.html","id":"spatial-covariance-structures","dir":"Reference","previous_headings":"","what":"Spatial Covariance structures","title":"covariance type — covariance_types","text":"\\(d_{ij}\\) denotes Euclidean distance time points \\(\\) \\(j\\).","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/covariance_types.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"covariance type — covariance_types","text":"cov_type: non-spatial covariance structure cov_type_spatial: spatial covariance structure","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/df_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","title":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","text":"Calculates degree freedom, F statistic p value multi-dimensional contrast, depending method used mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/df_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","text":"","code":"df_1d(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/main/reference/df_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","text":"object (mmrm) MMRM fit. contrast (numeric) contrast vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/df_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","text":"List est, se, df, t_stat p_val.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/df_1d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of Degrees of Freedom for One-Dimensional Contrast — df_1d","text":"","code":"object <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) contrast <- numeric(length(object$beta_est)) contrast[3] <- 1 df_1d(object, contrast) #> $est #> [1] 5.643565 #>  #> $se #> [1] 0.6656093 #>  #> $df #> [1] 157.1382 #>  #> $t_stat #> [1] 8.478795 #>  #> $p_val #> [1] 1.564869e-14 #>"},{"path":"https://openpharma.github.io/mmrm/main/reference/df_md.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","title":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","text":"Calculates estimate, standard error, degree freedom, t statistic p-value one-dimensional contrast, depending method used mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/df_md.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","text":"","code":"df_md(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/main/reference/df_md.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","text":"object (mmrm) MMRM fit. contrast (matrix) numeric contrast matrix, given numeric coerced row vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/df_md.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","text":"List num_df, denom_df, f_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/df_md.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of Degrees of Freedom for Multi-Dimensional Contrast — df_md","text":"","code":"object <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) contrast <- matrix(data = 0, nrow = 2, ncol = length(object$beta_est)) contrast[1, 2] <- contrast[2, 3] <- 1 df_md(object, contrast) #> $num_df #> [1] 2 #>  #> $denom_df #> [1] 165.5553 #>  #> $f_stat #> [1] 36.91143 #>  #> $p_val #> [1] 5.544575e-14 #>"},{"path":"https://openpharma.github.io/mmrm/main/reference/emmeans_support.html","id":null,"dir":"Reference","previous_headings":"","what":"Support for emmeans — emmeans_support","title":"Support for emmeans — emmeans_support","text":"package includes methods allow mmrm objects used emmeans package. emmeans computes estimated marginal means (also called least-square means) coefficients MMRM.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/emmeans_support.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Support for emmeans — emmeans_support","text":"","code":"fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data ) if (require(emmeans)) {   emmeans(fit, ~ ARMCD | AVISIT) } #> Loading required package: emmeans #> AVISIT = VIS1: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     33.3 0.755 148     31.8     34.8 #>  TRT     37.1 0.763 143     35.6     38.6 #>  #> AVISIT = VIS2: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     38.2 0.612 147     37.0     39.4 #>  TRT     41.9 0.602 143     40.7     43.1 #>  #> AVISIT = VIS3: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     43.7 0.462 130     42.8     44.6 #>  TRT     46.8 0.509 130     45.7     47.8 #>  #> AVISIT = VIS4: #>  ARMCD emmean    SE  df lower.CL upper.CL #>  PBO     48.4 1.189 134     46.0     50.7 #>  TRT     52.8 1.188 133     50.4     55.1 #>  #> Results are averaged over the levels of: RACE, SEX  #> Confidence level used: 0.95"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/reference/fev_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data on FEV1 — fev_data","text":"","code":"fev_data"},{"path":"https://openpharma.github.io/mmrm/main/reference/fev_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data on FEV1 — fev_data","text":"tibble 800 rows 7 variables: USUBJID: subject ID. AVISIT: visit number. ARMCD: treatment, TRT PBO. RACE: 3-category race. SEX: sex. FEV1_BL: FEV1 baseline (%). FEV1: FEV1 study visits. WEIGHT: weighting variable.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fev_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Data on FEV1 — fev_data","text":"artificial dataset.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fev_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Example Data on FEV1 — fev_data","text":"Measurements FEV1 (forced expired volume one second) measure quickly lungs can emptied. Low levels FEV1 may indicate chronic obstructive pulmonary disease (COPD).","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_mmrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-Level Fitting Function for MMRM — fit_mmrm","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"low-level function fit MMRM. Note try different optimizers adds Jacobian information etc. contrast mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_mmrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"","code":"fit_mmrm(formula, data, weights, reml = TRUE, control = mmrm_control())"},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_mmrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"formula (formula) model formula exactly one special term specifying visits within subjects, see details. data (data.frame) input data containing variables used formula. weights (vector) input vector containing weights. reml (flag) whether restricted maximum likelihood (REML) estimation used, otherwise maximum likelihood (ML) used. control (mmrm_control) list control options produced mmrm_control().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_mmrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"List class mmrm_tmb, see h_mmrm_tmb_fit() details.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_mmrm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"formula typically looks like: FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) specifies response covariates usual, exactly one special term defines covariance structure used visit subject variables. Always use first optimizer multiple optimizers provided.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_mmrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low-Level Fitting Function for MMRM — fit_mmrm","text":"","code":"formula <- FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) data <- fev_data system.time(result <- fit_mmrm(formula, data, rep(1, nrow(fev_data)))) #>    user  system elapsed  #>    0.04    0.00    0.04"},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_single_optimizer.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"function helps fit MMRM using TMB single optimizer, capturing messages warnings.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_single_optimizer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"","code":"fit_single_optimizer(   formula,   data,   weights,   reml = TRUE,   ...,   control = mmrm_control(...) )"},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_single_optimizer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"formula (formula) model formula, see details. data (data) data used model. weights (vector) optional vector weights used fitting process. NULL numeric vector. reml (flag) whether restricted maximum likelihood (REML) estimation used, otherwise maximum likelihood (ML) used. ... Additional arguments pass mmrm_control(). control (mmrm_control) object.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_single_optimizer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"mmrm_fit object, additional attributes containing warnings, messages, optimizer used convergence status addition mmrm_tmb contents.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_single_optimizer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"fit_single_optimizer fit mmrm model using control provided. multiple optimizers provided control, first optimizer used.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/fit_single_optimizer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting an MMRM with Single Optimizer — fit_single_optimizer","text":"","code":"mod_fit <- fit_single_optimizer(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   weights = rep(1, nrow(fev_data)),   optimizer = \"nlminb\" ) attr(mod_fit, \"converged\") #> [1] TRUE"},{"path":"https://openpharma.github.io/mmrm/main/reference/free_cores.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an approximate number of free cores. — free_cores","title":"Get an approximate number of free cores. — free_cores","text":"use parallelly::availableCores(omit = 1) instead","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/free_cores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an approximate number of free cores. — free_cores","text":"","code":"free_cores()"},{"path":"https://openpharma.github.io/mmrm/main/reference/free_cores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an approximate number of free cores. — free_cores","text":"approximate number free cores, integer 1 one less total cores.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/free_cores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get an approximate number of free cores. — free_cores","text":"uses maximum load average 1, 5 15 minutes Linux Mac machines approximate number busy cores. Windows, load percentage multiplied total number cores. subtract number detected cores. One additional core used extra safety.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/free_cores.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get an approximate number of free cores. — free_cores","text":"executed unit test CRAN always returns 1 avoid parallelization.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_coef_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficients Table for MMRM Fit — h_coef_table","title":"Coefficients Table for MMRM Fit — h_coef_table","text":"used summary.mmrm() obtain coefficients table.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_coef_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficients Table for MMRM Fit — h_coef_table","text":"","code":"h_coef_table(object)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_coef_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficients Table for MMRM Fit — h_coef_table","text":"object (mmrm) model fit.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_coef_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coefficients Table for MMRM Fit — h_coef_table","text":"Matrix one row per coefficient columns Estimate, Std. Error, df, t value Pr(>|t|).","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_covbeta_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance Matrix for Coefficients Given Variance Parameters — h_covbeta_fun","title":"Covariance Matrix for Coefficients Given Variance Parameters — h_covbeta_fun","text":"Obtain covariance matrix function accepts variance parameters input. Used h_jac_list() calculate Jacobian matrix using numerical differentiation.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_covbeta_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance Matrix for Coefficients Given Variance Parameters — h_covbeta_fun","text":"","code":"h_covbeta_fun(model)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_covbeta_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance Matrix for Coefficients Given Variance Parameters — h_covbeta_fun","text":"model (mmrm_tmb) initial model fit.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_covbeta_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance Matrix for Coefficients Given Variance Parameters — h_covbeta_fun","text":"Function argument theta calculates covariance matrix coefficient vector beta.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_kr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Kenward-Roger Degrees of Freedom for One-Dimensional Contrast — h_df_1d_kr","title":"Calculation of Kenward-Roger Degrees of Freedom for One-Dimensional Contrast — h_df_1d_kr","text":"Calculates estimate, adjusted standard error, Kenward-Roger degree freedom, t statistic p-value one-dimensional contrast. Used df_1d() method \"Kenward-Roger\" \"Kenward-Roger-Linear\".","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_kr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Kenward-Roger Degrees of Freedom for One-Dimensional Contrast — h_df_1d_kr","text":"","code":"h_df_1d_kr(object, contrast, linear = FALSE)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_kr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Kenward-Roger Degrees of Freedom for One-Dimensional Contrast — h_df_1d_kr","text":"object (mmrm) object created mmrm() Kenward-Roger(-Linear) method. contrast (numeric) contrast vector. linear (logical) whether use linear Kenward-Roger approximation.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_kr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Kenward-Roger Degrees of Freedom for One-Dimensional Contrast — h_df_1d_kr","text":"List est, se, df, t_stat p_val.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Results List for One-Dimensional Contrast — h_df_1d_list","title":"Creating Results List for One-Dimensional Contrast — h_df_1d_list","text":"Creates list results one-dimensional contrasts using estimated values quadratic form.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Results List for One-Dimensional Contrast — h_df_1d_list","text":"","code":"h_df_1d_list(est, var, v_num, v_denom)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Results List for One-Dimensional Contrast — h_df_1d_list","text":"est (number) estimate. var (number) variance estimate. v_num (number) numerator Satterthwaite d.f. v_denom (number) denominator Satterthwaite d.f.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating Results List for One-Dimensional Contrast — h_df_1d_list","text":"List est, se, df, t_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_sat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Satterthwaite Degrees of Freedom for One-Dimensional Contrast — h_df_1d_sat","title":"Calculation of Satterthwaite Degrees of Freedom for One-Dimensional Contrast — h_df_1d_sat","text":"Calculates estimate, standard error, degree freedom, t statistic p-value one-dimensional contrast. Used df_1d() method \"Satterthwaite\".","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_sat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Satterthwaite Degrees of Freedom for One-Dimensional Contrast — h_df_1d_sat","text":"","code":"h_df_1d_sat(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_sat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Satterthwaite Degrees of Freedom for One-Dimensional Contrast — h_df_1d_sat","text":"object (mmrm) MMRM fit. contrast (numeric) contrast vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_1d_sat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Satterthwaite Degrees of Freedom for One-Dimensional Contrast — h_df_1d_sat","text":"List est, se, df, t_stat p_val.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_from_1d.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating F-Statistic Results from One-Dimensional Contrast — h_df_md_from_1d","title":"Creating F-Statistic Results from One-Dimensional Contrast — h_df_md_from_1d","text":"Creates multi-dimensional result one-dimensional contrast df_1d().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_from_1d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating F-Statistic Results from One-Dimensional Contrast — h_df_md_from_1d","text":"","code":"h_df_md_from_1d(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_from_1d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating F-Statistic Results from One-Dimensional Contrast — h_df_md_from_1d","text":"object (mmrm) model fit. contrast (numeric) one-dimensional contrast.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_from_1d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating F-Statistic Results from One-Dimensional Contrast — h_df_md_from_1d","text":"one-dimensional results calculated returned per h_df_md_list().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_kr.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Kenward-Roger Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_kr","title":"Calculation of Kenward-Roger Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_kr","text":"Calculates Kenward-Roger degree freedom, F statistic p value multi-dimensional contrast. Used df_md() method \"Kenward-Roger\" \"Kenward-Roger-Linear\".","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_kr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Kenward-Roger Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_kr","text":"","code":"h_df_md_kr(object, contrast, linear = FALSE)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_kr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Kenward-Roger Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_kr","text":"object (mmrm) object. contrast (matrix) contrast matrix. linear (logical) whether use linear Kenward-Roger approximation.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_kr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Kenward-Roger Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_kr","text":"List num_df, denom_df, f_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Results List for Multi-Dimensional Contrast — h_df_md_list","title":"Creating Results List for Multi-Dimensional Contrast — h_df_md_list","text":"Calculate p-value using F statistic numerator/denominator degree freedom return list.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Results List for Multi-Dimensional Contrast — h_df_md_list","text":"","code":"h_df_md_list(f_stat, num_df, denom_df)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Results List for Multi-Dimensional Contrast — h_df_md_list","text":"f_stat (number) F-statistic. num_df (number) numerator degrees freedom. denom_df (number) denominator degrees freedom.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating Results List for Multi-Dimensional Contrast — h_df_md_list","text":"List num_df, denom_df, f_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_sat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of Satterthwaite Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_sat","title":"Calculation of Satterthwaite Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_sat","text":"Calculates degree freedom, F statistic p value multi-dimensional contrast. Used df_md() method \"Satterthwaite\".","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_sat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of Satterthwaite Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_sat","text":"","code":"h_df_md_sat(object, contrast)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_sat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of Satterthwaite Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_sat","text":"object (mmrm) MMRM fit. contrast (matrix) numeric contrast matrix, given numeric coerced row vector. Note include elements singular coefficient estimates, .e. refer actually estimated coefficients.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_df_md_sat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of Satterthwaite Degrees of Freedom for Multi-Dimensional Contrast — h_df_md_sat","text":"List num_df, denom_df, f_stat p_val (2-sided p-value).","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_get_kr_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","title":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","text":"Obtains components needed downstream computation Kenward-Roger degrees freedom. Used mmrm() fitting method \"Kenward-Roger\" \"Kenward-Roger-Linear\".","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_get_kr_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","text":"","code":"h_get_kr_comp(tmb_data, theta)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_get_kr_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","text":"tmb_data (mmrm_tmb_data) produced h_mmrm_tmb_data(). theta (numeric) theta estimate.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_get_kr_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","text":"Named list elements: P: matrix \\(P\\) component. Q: matrix \\(Q\\) component. R: matrix \\(R\\) component.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_get_kr_comp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain Kenward-Roger Adjustment Components — h_get_kr_comp","text":"function returns named list, \\(P\\), \\(Q\\) \\(R\\), corresponds paper 1997. matrices stacked columns \\(P\\), \\(Q\\) \\(R\\) column number(number beta parameters). number rows, dependent total number theta number groups, fit grouped mmrm. \\(P\\) matrix, stacked sequentially. \\(Q\\) \\(R\\) matrix, stacked \\(Q_{ij}\\) \\(R_{ij}\\) stacked \\(j\\) \\(\\), .e. \\(R_{i1}\\), \\(R_{i2}\\), etc. \\(Q\\) \\(R\\) contains intra-group results inter-group results zero matrices stacked result.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_get_optimizers.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","title":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","text":"function creates optimizer functions arguments.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_get_optimizers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","text":"","code":"h_get_optimizers(   optimizer = c(\"L-BFGS-B\", \"BFGS\", \"CG\", \"nlminb\"),   optimizer_fun = h_optimizer_fun(optimizer),   optimizer_args = list(),   optimizer_control = list() )"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_get_optimizers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","text":"optimizer (character) names built-optimizers try, subset \"L-BFGS-B\", \"BFGS\", \"CG\" \"nlminb\". optimizer_fun (function list function) alternatively optimizer, optimizer function list optimizer functions can passed directly . optimizer_args (list) additional arguments optimizer_fun. optimizer_control (list) passed argument control optimizer_fun.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_get_optimizers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","text":"Named list optimizers created h_partial_fun_args().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_get_optimizers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain Optimizer according to Optimizer String Value — h_get_optimizers","text":"want use built-optimizers: optimizer shortcut create list built-optimizer functions passed optimizer_fun. Allowed \"L-BFGS-B\", \"BFGS\", \"CG\" (using stats::optim() corresponding method) \"nlminb\" (using stats::nlminb()). arguments go optimizer_args. want use optimizer function: Make sure three arguments: parameter (start value), objective function gradient function sequentially function arguments. named arguments front , make sure correctly specified optimizer_args. hessian can used, please make sure argument name hessian please add attribute use_hessian = TRUE function, using attr(fun, \"use_hessian) <- TRUE.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_gradient.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of a Gradient Given Jacobian and Contrast Vector — h_gradient","title":"Computation of a Gradient Given Jacobian and Contrast Vector — h_gradient","text":"Computes gradient linear combination beta given Jacobian matrix variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_gradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of a Gradient Given Jacobian and Contrast Vector — h_gradient","text":"","code":"h_gradient(jac_list, contrast)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_gradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of a Gradient Given Jacobian and Contrast Vector — h_gradient","text":"jac_list (list) Jacobian list produced e.g. h_jac_list(). contrast (numeric) contrast vector, needs number elements rows columns element jac_list.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_gradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of a Gradient Given Jacobian and Contrast Vector — h_gradient","text":"Numeric vector contains quadratic forms element jac_list contrast vector.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_jac_col_as_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Formatting a Column from Jacobian Matrix as Matrix — h_jac_col_as_matrix","title":"Formatting a Column from Jacobian Matrix as Matrix — h_jac_col_as_matrix","text":"Convert column Jacobian matrix square matrix.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_jac_col_as_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Formatting a Column from Jacobian Matrix as Matrix — h_jac_col_as_matrix","text":"","code":"h_jac_col_as_matrix(jac_matrix, col)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_jac_col_as_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Formatting a Column from Jacobian Matrix as Matrix — h_jac_col_as_matrix","text":"jac_matrix (matrix) full Jacobian matrix. col (int) column index.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_jac_col_as_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Formatting a Column from Jacobian Matrix as Matrix — h_jac_col_as_matrix","text":"column col jac_matrix square matrix. values column used fill result column column.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_jac_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain List of Jacobian Matrix Entries for Covariance Matrix — h_jac_list","title":"Obtain List of Jacobian Matrix Entries for Covariance Matrix — h_jac_list","text":"Obtain Jacobian matrices given covariance function variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_jac_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain List of Jacobian Matrix Entries for Covariance Matrix — h_jac_list","text":"","code":"h_jac_list(covbeta_fun, theta_est)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_jac_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain List of Jacobian Matrix Entries for Covariance Matrix — h_jac_list","text":"covbeta_fun (function) function calculating covariance matrix coefficients given variance parameters (theta), see h_covbeta_fun() obtain mmrm_tmb object. theta_est (numeric) variance parameters point estimate.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_jac_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain List of Jacobian Matrix Entries for Covariance Matrix — h_jac_list","text":"List one element per variance parameter containing matrix dimensions covariance matrix. values derivatives regards variance parameter.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_kr_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the Adjusted Kenward-Roger Degree of Freedom — h_kr_df","title":"Obtain the Adjusted Kenward-Roger Degree of Freedom — h_kr_df","text":"Obtains adjusted Kenward-Roger degree freedom F statistic scale parameter. Used h_df_md_kr() h_df_1d_kr.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_kr_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the Adjusted Kenward-Roger Degree of Freedom — h_kr_df","text":"","code":"h_kr_df(v0, l, w, p)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_kr_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the Adjusted Kenward-Roger Degree of Freedom — h_kr_df","text":"v0 (matrix) unadjusted covariance matrix. l (matrix) linear combination matrix. w (matrix) hessian matrix. p (matrix) P matrix h_get_kr_comp().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_kr_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the Adjusted Kenward-Roger Degree of Freedom — h_kr_df","text":"Named list elements: m: numeric degree freedom. lambda: numeric F statistic scale parameter.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_md_denom_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","title":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","text":"Calculates degree freedom multi-dimensional contrast.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_md_denom_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","text":"","code":"h_md_denom_df(t_stat_df)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_md_denom_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","text":"t_stat_df (numeric)n t-statistic derived degrees freedom.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_md_denom_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","text":"Usually calculation returning 2 * E / (E - n) E sum t / (t - 2) t_stat_df values t.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_md_denom_df.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculating Denominator Degrees of Freedom for the Multi-Dimensional Case — h_md_denom_df","text":"input values two similar just average returned. inputs larger 2 2 returned.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_assert_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Asserting Sane Start Values for TMB Fit — h_mmrm_tmb_assert_start","title":"Asserting Sane Start Values for TMB Fit — h_mmrm_tmb_assert_start","text":"Asserting Sane Start Values TMB Fit","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_assert_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asserting Sane Start Values for TMB Fit — h_mmrm_tmb_assert_start","text":"","code":"h_mmrm_tmb_assert_start(tmb_object)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_assert_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asserting Sane Start Values for TMB Fit — h_mmrm_tmb_assert_start","text":"tmb_object (list) created TMB::MakeADFun().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_assert_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asserting Sane Start Values for TMB Fit — h_mmrm_tmb_assert_start","text":"Nothing, used assertions.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_check_conv.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking the TMB Optimization Result — h_mmrm_tmb_check_conv","title":"Checking the TMB Optimization Result — h_mmrm_tmb_check_conv","text":"Checking TMB Optimization Result","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_check_conv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking the TMB Optimization Result — h_mmrm_tmb_check_conv","text":"","code":"h_mmrm_tmb_check_conv(tmb_opt, mmrm_tmb)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_check_conv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking the TMB Optimization Result — h_mmrm_tmb_check_conv","text":"tmb_opt (list) optimization result. mmrm_tmb (mmrm_tmb) result h_mmrm_tmb_fit().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_check_conv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checking the TMB Optimization Result — h_mmrm_tmb_check_conv","text":"Nothing, used generate warnings case model converge.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for TMB Fit — h_mmrm_tmb_data","title":"Data for TMB Fit — h_mmrm_tmb_data","text":"Data TMB Fit","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for TMB Fit — h_mmrm_tmb_data","text":"","code":"h_mmrm_tmb_data(   formula_parts,   data,   weights,   reml,   accept_singular,   drop_visit_levels )"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data for TMB Fit — h_mmrm_tmb_data","text":"formula_parts (mmrm_tmb_formula_parts) list formula parts h_mmrm_tmb_formula_parts(). data (data.frame) contains variables used formula_parts. weights (vector) weights used fitting process. reml (flag) whether restricted maximum likelihood (REML) estimation used, otherwise maximum likelihood (ML) used. accept_singular (flag) whether full rank design matrices reduced full rank x_matrix remaining coefficients missing per x_cols_aliased. Otherwise function fails rank deficient design matrices. drop_visit_levels (flag) whether drop levels visit variable, visit variable factor.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data for TMB Fit — h_mmrm_tmb_data","text":"List class mmrm_tmb_data elements: full_frame: data.frame n rows containing variables needed model. x_matrix: matrix n rows p columns specifying overall design matrix. x_cols_aliased: logical potentially p elements indicating columns original design matrix left obtain full rank x_matrix. y_vector: length n numeric specifying overall response vector. weights_vector: length n numeric specifying weights vector. visits_zero_inds: length n integer containing zero-based visits indices. n_visits: int number visits, dimension covariance matrix. n_subjects: int number subjects. subject_zero_inds: length n_subjects integer containing zero-based start indices subject. subject_n_visits: length n_subjects integer containing number observed visits subjects. sum vector equals n. cov_type: string value specifying covariance type. is_spatial_int: int specifying whether covariance structure spatial(1) (0). reml: int specifying whether REML estimation used (1), otherwise ML (0). subject_groups: factor specifying grouping subject. n_groups: int number total groups","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data for TMB Fit — h_mmrm_tmb_data","text":"Note subject_var must factor can also character. character, converted factor internally. levels unique values, sorted alphabetically numerically common string prefix numbers character elements. full control order please use factor.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract covariance matrix from TMB report and input data — h_mmrm_tmb_extract_cov","title":"Extract covariance matrix from TMB report and input data — h_mmrm_tmb_extract_cov","text":"helper simple post-processing extract covariance matrix named list covariance matrices fitting using grouped covariance matrices.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract covariance matrix from TMB report and input data — h_mmrm_tmb_extract_cov","text":"","code":"h_mmrm_tmb_extract_cov(tmb_report, tmb_data, visit_var, is_spatial)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract covariance matrix from TMB report and input data — h_mmrm_tmb_extract_cov","text":"tmb_report (list) report created TMB::MakeADFun() report function. tmb_data (mmrm_tmb_data) produced h_mmrm_tmb_data(). visit_var character character vector visit variable is_spatial logical logical value indicating covariance structure spatial.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract covariance matrix from TMB report and input data — h_mmrm_tmb_extract_cov","text":"Return simple covariance matrix grouping, named list estimated grouped covariance matrices, name equal group levels.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract group/subject vars from covariance term — h_mmrm_tmb_extract_terms","title":"Extract group/subject vars from covariance term — h_mmrm_tmb_extract_terms","text":"Extract group/subject vars covariance term","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract group/subject vars from covariance term — h_mmrm_tmb_extract_terms","text":"","code":"h_mmrm_tmb_extract_terms(cov_content)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract group/subject vars from covariance term — h_mmrm_tmb_extract_terms","text":"cov_content (call) covariance term.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract group/subject vars from covariance term — h_mmrm_tmb_extract_terms","text":"Named list elements: visit_var: character visit variable name. subject_var: string subject variable name. group_var: string group variable name. group specified, element NULL.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract group/subject vars from covariance term — h_mmrm_tmb_extract_terms","text":"covariance term, takes following form: us(time | group / subject), sp_exp(time1, time2, ... | group / subject). spatial covariance structure can multiple time coordinates. function, take call time | group / subject, last element covariance term, extract corresponding grouping var, time var subject var.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Processing the covariance term — h_mmrm_tmb_extract_vars","title":"Processing the covariance term — h_mmrm_tmb_extract_vars","text":"Processing covariance term","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processing the covariance term — h_mmrm_tmb_extract_vars","text":"","code":"h_mmrm_tmb_extract_vars(cov_term)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processing the covariance term — h_mmrm_tmb_extract_vars","text":"cov_term (call) covariance term.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_extract_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processing the covariance term — h_mmrm_tmb_extract_vars","text":"Named list elements: visit_var: character visit variable name. subject_var: string subject variable name. group_var: string group variable name. group specified, element NULL. is_spatial: logical indicator whether covariance structure spatial","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Build TMB Fit Result List — h_mmrm_tmb_fit","title":"Build TMB Fit Result List — h_mmrm_tmb_fit","text":"helper simple post-processing TMB object optimization results, including setting names, inverting matrices etc.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build TMB Fit Result List — h_mmrm_tmb_fit","text":"","code":"h_mmrm_tmb_fit(tmb_object, tmb_opt, data, weights, formula_parts, tmb_data)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build TMB Fit Result List — h_mmrm_tmb_fit","text":"tmb_object (list) created TMB::MakeADFun(). tmb_opt (list) optimization result. data (data.frame) input data containing variables used formula. weights (vector) weights used fitting process. formula_parts (mmrm_tmb_formula_parts) produced h_mmrm_tmb_formula_parts(). tmb_data (mmrm_tmb_data) produced h_mmrm_tmb_data().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build TMB Fit Result List — h_mmrm_tmb_fit","text":"List class mmrm_tmb : cov: estimated covariance matrix, named list estimated group specific covariance matrices. beta_est: vector coefficient estimates. beta_vcov: Variance-covariance matrix coefficient estimates. theta_est: vector variance parameter estimates. theta_vcov: variance-covariance matrix variance parameter estimates. neg_log_lik: obtained negative log-likelihood. formula_parts: input. data: input. weights: input. reml: input flag. opt_details: list optimization details including convergence code. tmb_object: original TMB object created TMB::MakeADFun(). tmb_data: input.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_formula_parts.html","id":null,"dir":"Reference","previous_headings":"","what":"Processing the Formula for TMB Fit — h_mmrm_tmb_formula_parts","title":"Processing the Formula for TMB Fit — h_mmrm_tmb_formula_parts","text":"Processing Formula TMB Fit","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_formula_parts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Processing the Formula for TMB Fit — h_mmrm_tmb_formula_parts","text":"","code":"h_mmrm_tmb_formula_parts(formula)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_formula_parts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Processing the Formula for TMB Fit — h_mmrm_tmb_formula_parts","text":"formula (formula) original formula.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_formula_parts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Processing the Formula for TMB Fit — h_mmrm_tmb_formula_parts","text":"List class mmrm_tmb_formula_parts elements: formula: original input. model_formula: formula covariance term removed. full_formula: model_formula includes subject_var visit_var. cov_type: string covariance term type (e.g. \"us\"). is_spatial: flag indicator whether covariance structure spatial visit_var: character visit variable name. subject_var: string subject variable name. group_var: string group variable name. group specified, element NULL.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Start Parameters for TMB Fit — h_mmrm_tmb_parameters","title":"Start Parameters for TMB Fit — h_mmrm_tmb_parameters","text":"Start Parameters TMB Fit","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start Parameters for TMB Fit — h_mmrm_tmb_parameters","text":"","code":"h_mmrm_tmb_parameters(formula_parts, tmb_data, start, n_groups = 1L)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start Parameters for TMB Fit — h_mmrm_tmb_parameters","text":"formula_parts (mmrm_tmb_formula_parts) produced h_mmrm_tmb_formula_parts(). tmb_data (mmrm_tmb_data) produced h_mmrm_tmb_data(). start (numeric NULL) optional start values variance parameters. n_groups (int) number groups.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_mmrm_tmb_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start Parameters for TMB Fit — h_mmrm_tmb_parameters","text":"List element theta containing start values variance parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_optimizer_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain Optimizer Function with Character — h_optimizer_fun","title":"Obtain Optimizer Function with Character — h_optimizer_fun","text":"Obtain optimizer function character provided.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_optimizer_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Optimizer Function with Character — h_optimizer_fun","text":"","code":"h_optimizer_fun(optimizer = c(\"L-BFGS-B\", \"BFGS\", \"CG\", \"nlminb\"))"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_optimizer_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Optimizer Function with Character — h_optimizer_fun","text":"optimizer (character) vector optimizers.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_optimizer_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Optimizer Function with Character — h_optimizer_fun","text":"(list) optimizer functions generated h_partial_fun_args().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_partial_fun_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Partial Functions — h_partial_fun_args","title":"Create Partial Functions — h_partial_fun_args","text":"Creates partial functions arguments.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_partial_fun_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Partial Functions — h_partial_fun_args","text":"","code":"h_partial_fun_args(fun, ..., additional_attr = list())"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_partial_fun_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Partial Functions — h_partial_fun_args","text":"fun (function) wrapped. ... Additional arguments fun. additional_attr (list) additional attributes apply result.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_partial_fun_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Partial Functions — h_partial_fun_args","text":"Object S3 class \"partial\", function args attribute (possibly attributes additional_attr).","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_partial_fun_args.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Partial Functions — h_partial_fun_args","text":"function add args attribute original function, add extra class partial function. args argument function, elements ... override existing arguments attribute args. additional_attr override existing attributes.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_print_aic_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing AIC and other Model Fit Criteria — h_print_aic_list","title":"Printing AIC and other Model Fit Criteria — h_print_aic_list","text":"used print.summary.mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_print_aic_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing AIC and other Model Fit Criteria — h_print_aic_list","text":"","code":"h_print_aic_list(aic_list, digits = 1)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_print_aic_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing AIC and other Model Fit Criteria — h_print_aic_list","text":"aic_list (list) list part summary.mmrm(). digits (number) number decimal places used round().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_print_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing MMRM Function Call — h_print_call","title":"Printing MMRM Function Call — h_print_call","text":"used print.summary.mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_print_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing MMRM Function Call — h_print_call","text":"","code":"h_print_call(call, n_obs, n_subjects, n_timepoints)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_print_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing MMRM Function Call — h_print_call","text":"call (call) original mmrm() function call. n_obs (int) number observations. n_subjects (int) number subjects. n_timepoints (int) number timepoints.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_print_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing MMRM Covariance Type — h_print_cov","title":"Printing MMRM Covariance Type — h_print_cov","text":"used print.summary.mmrm().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_print_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing MMRM Covariance Type — h_print_cov","text":"","code":"h_print_cov(cov_type, n_theta, n_groups)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_print_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing MMRM Covariance Type — h_print_cov","text":"cov_type (string) covariance structure abbreviation. n_theta (int) number variance parameters. n_groups (int) number groups.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_quad_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadratic Form Calculations — h_quad_form","title":"Quadratic Form Calculations — h_quad_form","text":"helpers mainly easier readability slightly better efficiency quadratic forms used Satterthwaite calculations.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_quad_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadratic Form Calculations — h_quad_form","text":"","code":"h_quad_form_vec(vec, center)  h_quad_form_mat(mat, center)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_quad_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadratic Form Calculations — h_quad_form","text":"vec (numeric) interpreted row vector. center (matrix) square numeric matrix dimensions x center quadratic form. mat (matrix) numeric matrix multiplied left right center, therefore needs many columns rows columns center.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_quad_form.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Quadratic Form Calculations — h_quad_form","text":"h_quad_form_vec(): calculates number vec %*% center %*% t(vec) numeric (matrix). h_quad_form_mat(): calculates quadratic form mat %*% center %*% t(mat) matrix, result square dimensions identical number rows mat.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_record_all_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture all Output — h_record_all_output","title":"Capture all Output — h_record_all_output","text":"function silences warnings, errors & messages instead returns list containing results (error) + warning error messages character vectors.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_record_all_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capture all Output — h_record_all_output","text":"","code":"h_record_all_output(expr, remove = list())"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_record_all_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capture all Output — h_record_all_output","text":"expr (expression) executed. remove (list) optional list elements warnings, errors, messages can character vectors, removed results specified.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_record_all_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capture all Output — h_record_all_output","text":"list containing result: object returned expr list() error thrown. warnings: NULL character vector warnings thrown. errors: NULL string error thrown. messages: NULL character vector messages produced.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_split_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Control List — h_split_control","title":"Split Control List — h_split_control","text":"Split mmrm_control() object according optimizers use additional arguments replace elements original object.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_split_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Control List — h_split_control","text":"","code":"h_split_control(control, ...)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_split_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Control List — h_split_control","text":"control (mmrm_control) object. ... additional parameters update control object.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_split_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Control List — h_split_control","text":"list mmrm_control entries.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_summarize_all_fits.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing List of Fits — h_summarize_all_fits","title":"Summarizing List of Fits — h_summarize_all_fits","text":"Summarizing List Fits","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_summarize_all_fits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing List of Fits — h_summarize_all_fits","text":"","code":"h_summarize_all_fits(all_fits)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_summarize_all_fits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing List of Fits — h_summarize_all_fits","text":"all_fits (list mmrm_fit try-error) list fits.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_summarize_all_fits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing List of Fits — h_summarize_all_fits","text":"List warnings, messages, log_liks converged results.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_tr.html","id":null,"dir":"Reference","previous_headings":"","what":"Trace of a Matrix — h_tr","title":"Trace of a Matrix — h_tr","text":"Obtain trace matrix matrix diagonal, otherwise raise error.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_tr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trace of a Matrix — h_tr","text":"","code":"h_tr(x)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_tr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trace of a Matrix — h_tr","text":"x (matrix) square matrix input.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_tr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trace of a Matrix — h_tr","text":"trace square matrix.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_var_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the Adjusted Covariance Matrix — h_var_adj","title":"Obtain the Adjusted Covariance Matrix — h_var_adj","text":"Obtains Kenward-Roger adjusted covariance matrix coefficient estimates. Used mmrm() fitting method \"Kenward-Roger\" \"Kenward-Roger-Linear\".","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_var_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the Adjusted Covariance Matrix — h_var_adj","text":"","code":"h_var_adj(v, w, p, q, r, linear = FALSE)"},{"path":"https://openpharma.github.io/mmrm/main/reference/h_var_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the Adjusted Covariance Matrix — h_var_adj","text":"v (matrix) unadjusted covariance matrix. w (matrix) hessian matrix. p (matrix) P matrix h_get_kr_comp(). q (matrix) Q matrix h_get_kr_comp(). r (matrix) R matrix h_get_kr_comp(). linear (logical) whether use linear Kenward-Roger approximation.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/h_var_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the Adjusted Covariance Matrix — h_var_adj","text":"matrix adjusted covariance matrix.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mmrm Package — mmrm-package","title":"mmrm Package — mmrm-package","text":"mmrm implements mixed models repeated measures (MMRM) R.","code":""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mmrm Package — mmrm-package","text":"Maintainer: Daniel Sabanes Bove daniel.sabanes_bove@roche.com Authors: Julia Dedic julia.dedic@roche.com Doug Kelkhoff kelkhoff.douglas@gene.com Kevin Kunzmann kevin.kunzmann@boehringer-ingelheim.com Brian Matthew Lang brian.lang@msd.com Liming Li liming.li@roche.com Ya Wang ya.wang10@gilead.com contributors: Craig Gower-Page craig.gower-page@roche.com [contributor] Boehringer Ingelheim Ltd. [copyright holder, funder] Gilead Sciences, Inc. [copyright holder, funder] F. Hoffmann-La Roche AG [copyright holder, funder] Merck Sharp & Dohme, Inc. [copyright holder, funder]","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an MMRM — mmrm","title":"Fit an MMRM — mmrm","text":"main function fitting MMRM.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an MMRM — mmrm","text":"","code":"mmrm(   formula,   data,   weights = NULL,   reml = TRUE,   control = mmrm_control(...),   ... )"},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an MMRM — mmrm","text":"formula (formula) model formula, see details. data (data) data used model. weights (vector) optional vector weights used fitting process. NULL numeric vector. reml (flag) whether restricted maximum likelihood (REML) estimation used, otherwise maximum likelihood (ML) used. control (mmrm_control) fine-grained fitting specifications list created mmrm_control(). ... arguments passed mmrm_control().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an MMRM — mmrm","text":"mmrm object.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an MMRM — mmrm","text":"formula typically looks like: FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) specifies response covariates usual, exactly one special term defines covariance structure used time point subject variables. covariance structures formula can found covariance_types. time points unique subject. , time points multiple observations subject. rationale observations need correlated, possible within currently implemented covariance structure framework correctly. optimizer set, first default optimizer (L-BFGS-B) used fit model. converges, returned. , available optimizers h_get_optimizers(), including BFGS, CG nlminb tried (parallel n_cores set Windows). none optimizers converge, function fails. Otherwise best fit returned. Note fine-grained control specifications can either passed directly mmrm function, via control argument bundling together mmrm_control() function. used together, since delete arguments passed via mmrm.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit an MMRM — mmrm","text":"mmrm object also mmrm_fit mmrm_tmb object, therefore corresponding methods also work (see mmrm_tmb_methods). Additional contents depend choice adjustment method: Satterthwaite adjustment used, Jacobian information jac_list included. Kenward-Roger adjustment used, kr_comp contains necessary components beta_vcov_adj includes adjusted coefficients covariance matrix. Use package emmeans supported, see emmeans_support.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an MMRM — mmrm","text":"","code":"fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data )  # Direct specification of control details: fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   weights = fev_data$WEIGHTS,   method = \"Kenward-Roger\" )  # Alternative specification via control argument (but you cannot mix the # two approaches): fit <- mmrm(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   control = mmrm_control(method = \"Kenward-Roger\") )"},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Parameters for Fitting an MMRM — mmrm_control","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"Fine-grained specification MMRM fit details possible using control function.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"","code":"mmrm_control(   n_cores = 1L,   method = c(\"Satterthwaite\", \"Kenward-Roger\", \"Kenward-Roger-Linear\"),   start = NULL,   accept_singular = TRUE,   drop_visit_levels = TRUE,   ...,   optimizers = h_get_optimizers(...) )"},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"n_cores (int) number cores used. method (string) adjustment method degrees freedom coefficients covariance matrix. start (numeric NULL) optional start values variance parameters. accept_singular (flag) whether singular design matrices reduced full rank automatically additional coefficient estimates missing. drop_visit_levels (flag) whether drop levels visit variable, visit variable factor, see details. ... additional arguments passed h_get_optimizers(). optimizers (list) optimizer specification, created h_get_optimizers().","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"List class mmrm_control control parameters.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_control.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"drop_visit_levels flag decide whether unobserved visits kept analysis. example, data observations visits VIS1, VIS3 VIS4, default treated equally spaced, distance VIS1 VIS3, VIS3 VIS4, identical. However, can manually convert visit factor, levels = c(\"VIS1\", \"VIS2\", \"VIS3\", \"VIS4\"), also use drop_visits_levels = FALSE, distance VIS1 VIS3 double, VIS2 valid visit. However, please cautious can lead convergence failure using unstructured covariance matrix observations missing visits.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control Parameters for Fitting an MMRM — mmrm_control","text":"","code":"mmrm_control(   optimizer_fun = stats::optim,   optimizer_args = list(method = \"L-BFGS-B\") ) #> $optimizers #> $optimizers$custom_optimizer #> function (par, fn, gr = NULL, ..., method = c(\"Nelder-Mead\",  #>     \"BFGS\", \"CG\", \"L-BFGS-B\", \"SANN\", \"Brent\"), lower = -Inf,  #>     upper = Inf, control = list(), hessian = FALSE)  #> { #>     fn1 <- function(par) fn(par, ...) #>     gr1 <- if (!is.null(gr))  #>         function(par) gr(par, ...) #>     method <- match.arg(method) #>     if ((any(lower > -Inf) || any(upper < Inf)) && !any(method ==  #>         c(\"L-BFGS-B\", \"Brent\"))) { #>         warning(\"bounds can only be used with method L-BFGS-B (or Brent)\") #>         method <- \"L-BFGS-B\" #>     } #>     npar <- length(par) #>     con <- list(trace = 0, fnscale = 1, parscale = rep.int(1,  #>         npar), ndeps = rep.int(0.001, npar), maxit = 100L, abstol = -Inf,  #>         reltol = sqrt(.Machine$double.eps), alpha = 1, beta = 0.5,  #>         gamma = 2, REPORT = 10, warn.1d.NelderMead = TRUE, type = 1,  #>         lmm = 5, factr = 1e+07, pgtol = 0, tmax = 10, temp = 10) #>     nmsC <- names(con) #>     if (method == \"Nelder-Mead\")  #>         con$maxit <- 500 #>     if (method == \"SANN\") { #>         con$maxit <- 10000 #>         con$REPORT <- 100 #>     } #>     con[(namc <- names(control))] <- control #>     if (length(noNms <- namc[!namc %in% nmsC]))  #>         warning(\"unknown names in control: \", paste(noNms, collapse = \", \")) #>     if (con$trace < 0)  #>         warning(\"read the documentation for 'trace' more carefully\") #>     else if (method == \"SANN\" && con$trace && as.integer(con$REPORT) ==  #>         0)  #>         stop(\"'trace != 0' needs 'REPORT >= 1'\") #>     if (method == \"L-BFGS-B\" && any(!is.na(match(c(\"reltol\",  #>         \"abstol\"), namc))))  #>         warning(\"method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol'\") #>     if (npar == 1 && method == \"Nelder-Mead\" && isTRUE(con$warn.1d.NelderMead))  #>         warning(\"one-dimensional optimization by Nelder-Mead is unreliable:\\nuse \\\"Brent\\\" or optimize() directly\") #>     if (npar > 1 && method == \"Brent\")  #>         stop(\"method = \\\"Brent\\\" is only available for one-dimensional optimization\") #>     lower <- as.double(rep_len(lower, npar)) #>     upper <- as.double(rep_len(upper, npar)) #>     res <- if (method == \"Brent\") { #>         if (any(!is.finite(c(upper, lower))))  #>             stop(\"'lower' and 'upper' must be finite values\") #>         res <- optimize(function(par) fn(par, ...)/con$fnscale,  #>             lower = lower, upper = upper, tol = con$reltol) #>         names(res)[names(res) == c(\"minimum\", \"objective\")] <- c(\"par\",  #>             \"value\") #>         res$value <- res$value * con$fnscale #>         c(res, list(counts = c(`function` = NA, gradient = NA),  #>             convergence = 0L, message = NULL)) #>     } #>     else .External2(C_optim, par, fn1, gr1, method, con, lower,  #>         upper) #>     if (hessian)  #>         res$hessian <- .External2(C_optimhess, res$par, fn1,  #>             gr1, con) #>     res #> } #> <bytecode: 0x55d849e3e5a0> #> <environment: namespace:stats> #> attr(,\"args\") #> attr(,\"args\")$control #> list() #>  #> attr(,\"args\")$method #> [1] \"L-BFGS-B\" #>  #> attr(,\"class\") #> [1] \"partial\"  \"function\" #>  #>  #> $start #> NULL #>  #> $accept_singular #> [1] TRUE #>  #> $method #> [1] \"Satterthwaite\" #>  #> $n_cores #> [1] 1 #>  #> $drop_visit_levels #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"mmrm_control\""},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for mmrm Objects — mmrm_methods","text":"","code":"# S3 method for mmrm summary(object, ...)  # S3 method for summary.mmrm print(   x,   digits = max(3, getOption(\"digits\") - 3),   signif.stars = getOption(\"show.signif.stars\"),   ... )"},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for mmrm Objects — mmrm_methods","text":"object (mmrm) fitted MMRM including Jacobian call etc. ... used.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for mmrm Objects — mmrm_methods","text":"Depends method, see Details Functions.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for mmrm Objects — mmrm_methods","text":"printing summary (mmrm) object, following displayed: Formula. formula used model. Data. data used analysis, including number subjects, number valid observations. Covariance. covariance structure number variance parameters. Method. Restricted maximum likelihood(REML) maximum likelihood(ML). Model selection criteria. AIC, BIC, log likelihood deviance. Coefficients. Coefficients covariates. Covariance estimate. covariance estimate(group). covariance structure non-spatial, covariance matrix categorical time points available data displayed. covariance structure spatial, covariance matrix two time points unit distance displayed.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Methods for mmrm Objects — mmrm_methods","text":"summary(mmrm): summarizes MMRM fit results. print(summary.mmrm): prints MMRM fit summary.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for mmrm Objects — mmrm_methods","text":"","code":"formula <- FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) object <- mmrm(formula, fev_data) # Summary: summary(object) #> mmrm fit #>  #> Formula:     FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> Data:        fev_data (used 537 observations from 197 subjects with maximum 4  #> timepoints) #> Covariance:  unstructured (10 variance parameters) #> Method:      Satterthwaite #> Inference:   REML #>  #> Model selection criteria: #>      AIC      BIC   logLik deviance  #>   3406.4   3439.3  -1693.2   3386.4  #>  #> Coefficients:  #>                                Estimate Std. Error        df t value Pr(>|t|) #> (Intercept)                    30.77748    0.88656 218.80000  34.715  < 2e-16 #> RACEBlack or African American   1.53050    0.62448 168.67000   2.451 0.015272 #> RACEWhite                       5.64357    0.66561 157.14000   8.479 1.56e-14 #> SEXFemale                       0.32606    0.53195 166.13000   0.613 0.540744 #> ARMCDTRT                        3.77423    1.07415 145.55000   3.514 0.000589 #> AVISITVIS2                      4.83959    0.80172 143.88000   6.037 1.27e-08 #> AVISITVIS3                     10.34211    0.82269 155.56000  12.571  < 2e-16 #> AVISITVIS4                     15.05390    1.31281 138.47000  11.467  < 2e-16 #> ARMCDTRT:AVISITVIS2            -0.04193    1.12932 138.56000  -0.037 0.970439 #> ARMCDTRT:AVISITVIS3            -0.69369    1.18765 158.17000  -0.584 0.559996 #> ARMCDTRT:AVISITVIS4             0.62423    1.85085 129.72000   0.337 0.736463 #>                                   #> (Intercept)                   *** #> RACEBlack or African American *   #> RACEWhite                     *** #> SEXFemale                         #> ARMCDTRT                      *** #> AVISITVIS2                    *** #> AVISITVIS3                    *** #> AVISITVIS4                    *** #> ARMCDTRT:AVISITVIS2               #> ARMCDTRT:AVISITVIS3               #> ARMCDTRT:AVISITVIS4               #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Covariance estimate: #>         VIS1    VIS2    VIS3    VIS4 #> VIS1 40.5537 14.3960  4.9747 13.3867 #> VIS2 14.3960 26.5715  2.7855  7.4745 #> VIS3  4.9747  2.7855 14.8979  0.9082 #> VIS4 13.3867  7.4745  0.9082 95.5568 #>"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_tmb_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"","code":"# S3 method for mmrm_tmb coef(object, complete = TRUE, ...)  # S3 method for mmrm_tmb fitted(object, ...)  # S3 method for mmrm_tmb model.frame(formula, full = FALSE, ...)  # S3 method for mmrm_tmb logLik(object, ...)  # S3 method for mmrm_tmb formula(x, ...)  # S3 method for mmrm_tmb vcov(object, complete = TRUE, ...)  # S3 method for mmrm_tmb VarCorr(x, sigma = NA, ...)  # S3 method for mmrm_tmb deviance(object, ...)  # S3 method for mmrm_tmb AIC(object, corrected = FALSE, ..., k = 2)  # S3 method for mmrm_tmb BIC(object, ...)  # S3 method for mmrm_tmb print(x, ...)"},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_tmb_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"object (mmrm_tmb) fitted MMRM object. complete (flag) whether include potential non-estimable coefficients. ... used. formula (mmrm_tmb) object. full (flag) whether include subject, visit weight variables. x (mmrm_tmb) object. sigma used (parameter exist MMRM). corrected (flag) whether corrected AIC calculated. k (number) penalty per parameter used; default k = 2 classical AIC.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_tmb_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"Depends method, see Functions.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_tmb_methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"coef(mmrm_tmb): obtains estimated coefficients. fitted(mmrm_tmb): obtains fitted values. model.frame(mmrm_tmb): obtains model frame. logLik(mmrm_tmb): obtains attained log likelihood value. formula(mmrm_tmb): obtains used formula. vcov(mmrm_tmb): obtains variance-covariance matrix estimate coefficients. VarCorr(mmrm_tmb): obtains variance-covariance matrix estimate residuals. deviance(mmrm_tmb): obtains deviance, defined twice negative log likelihood, can either integrated coefficients REML fits usual one ML fits. AIC(mmrm_tmb): obtains Akaike Information Criterion, degrees freedom number variance parameters (n_theta). corrected, multiplied m / (m - n_theta - 1) m number observations minus number coefficients, n_theta + 2 smaller (Hurvich Tsai 1989; Burnham Anderson 1998) . BIC(mmrm_tmb): obtains Bayesian Information Criterion, using natural logarithm number subjects penalty parameter k. print(mmrm_tmb): prints object.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_tmb_methods.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"Hurvich CM, Tsai C (1989). “Regression time series model selection small samples.” Biometrika, 76(2), 297--307. doi:10.2307/2336663 . Burnham KP, Anderson DR (1998). “Practical use information-theoretic approach.” Model selection inference, 75--117. Springer. doi:10.1007/978-1-4757-2917-7_3 .","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/mmrm_tmb_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods for mmrm_tmb Objects — mmrm_tmb_methods","text":"","code":"formula <- FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) object <- fit_mmrm(formula, fev_data, weights = rep(1, nrow(fev_data))) # Estimated coefficients: coef(object) #>                   (Intercept) RACEBlack or African American  #>                   30.77747548                    1.53049977  #>                     RACEWhite                     SEXFemale  #>                    5.64356535                    0.32606192  #>                      ARMCDTRT                    AVISITVIS2  #>                    3.77423004                    4.83958845  #>                    AVISITVIS3                    AVISITVIS4  #>                   10.34211288                   15.05389826  #>           ARMCDTRT:AVISITVIS2           ARMCDTRT:AVISITVIS3  #>                   -0.04192625                   -0.69368537  #>           ARMCDTRT:AVISITVIS4  #>                    0.62422703  # Fitted values: fitted(object) #>        2        4        6        7        8       10       12       13  #> 41.20593 52.08639 35.61706 41.11959 45.83137 37.47363 47.68794 34.87777  #>       14       16       17       19       20       23       25       26  #> 39.67543 50.55589 32.30798 42.65009 47.36187 42.65009 31.10354 35.94313  #>       28       29       30       31       32       33       34       36  #> 46.15744 32.30798 37.14756 42.65009 47.36187 40.19527 44.99293 55.87340  #>       39       41       42       43       44       45       46       47  #> 42.97615 34.87777 39.67543 44.52619 50.55589 30.77748 35.61706 41.11959  #>       51       52       55       59       60       62       64       65  #> 49.84370 55.87340 42.65009 41.11959 45.83137 35.94313 46.15744 36.74710  #>       68       69       70       72       73       74       75       76  #> 51.80100 34.55171 39.34937 50.22983 34.55171 39.34937 44.20013 50.22983  #>       78       79       82       83       84       85       86       87  #> 45.31900 50.16976 44.99293 49.84370 55.87340 40.19527 44.99293 49.84370  #>       88       89       90       91       93       94       95       96  #> 55.87340 32.63404 37.47363 42.97615 40.52133 45.31900 50.16976 56.19946  #>       97       98       99      100      101      102      103      104  #> 40.52133 45.31900 50.16976 56.19946 40.52133 45.31900 50.16976 56.19946  #>      105      107      108      109      110      111      112      113  #> 36.40827 46.05669 52.08639 36.08221 40.87987 45.73063 51.76033 36.08221  #>      114      116      117      118      119      120      121      123  #> 40.87987 51.76033 34.87777 39.67543 44.52619 50.55589 31.10354 41.44565  #>      125      128      129      130      132      133      134      135  #> 36.08221 51.76033 36.08221 40.87987 51.76033 31.10354 35.94313 41.44565  #>      136      137      138      140      142      144      145      146  #> 46.15744 36.40827 41.20593 52.08639 39.67543 50.55589 36.74710 41.58669  #>      147      148      149      151      153      155      156      157  #> 47.08922 51.80100 31.10354 41.44565 31.10354 41.44565 46.15744 32.30798  #>      158      159      162      163      164      165      168      169  #> 37.14756 42.65009 37.14756 42.65009 47.36187 32.30798 47.36187 36.40827  #>      170      171      172      173      177      178      179      180  #> 41.20593 46.05669 52.08639 36.08221 31.10354 35.94313 41.44565 46.15744  #>      181      182      183      185      186      187      190      191  #> 30.77748 35.61706 41.11959 34.55171 39.34937 44.20013 37.14756 42.65009  #>      193      194      195      197      198      199      201      202  #> 36.74710 41.58669 47.08922 34.87777 39.67543 44.52619 36.40827 41.20593  #>      204      206      208      209      210      217      218      219  #> 52.08639 41.20593 52.08639 36.42104 41.26063 34.55171 39.34937 44.20013  #>      221      224      226      227      228      230      231      233  #> 32.30798 47.36187 40.87987 45.73063 51.76033 45.31900 50.16976 40.52133  #>      235      236      237      238      239      240      241      242  #> 50.16976 56.19946 36.40827 41.20593 46.05669 52.08639 34.55171 39.34937  #>      244      246      250      251      252      253      254      256  #> 50.22983 35.94313 41.58669 47.08922 51.80100 32.63404 37.47363 47.68794  #>      257      258      259      260      261      262      263      264  #> 34.87777 39.67543 44.52619 50.55589 34.55171 39.34937 44.20013 50.22983  #>      265      266      267      268      269      270      273      274  #> 40.52133 45.31900 50.16976 56.19946 40.52133 45.31900 32.30798 37.14756  #>      275      276      277      278      280      281      282      283  #> 42.65009 47.36187 32.30798 37.14756 47.36187 34.55171 39.34937 44.20013  #>      284      285      286      287      291      292      293      295  #> 50.22983 34.87777 39.67543 44.52619 46.76315 51.47494 36.74710 47.08922  #>      296      298      299      300      301      304      305      306  #> 51.80100 41.26063 46.76315 51.47494 40.19527 55.87340 34.55171 39.34937  #>      307      308      310      311      312      316      317      318  #> 44.20013 50.22983 45.31900 50.16976 56.19946 46.15744 34.55171 39.34937  #>      319      322      323      324      325      327      328      329  #> 44.20013 41.26063 46.76315 51.47494 32.63404 42.97615 47.68794 40.19527  #>      330      331      332      336      339      340      341      342  #> 44.99293 49.84370 55.87340 46.15744 41.44565 46.15744 36.40827 41.20593  #>      343      344      345      347      349      351      352      353  #> 46.05669 52.08639 36.42104 46.76315 32.63404 42.97615 47.68794 32.30798  #>      354      355      356      357      363      364      365      367  #> 37.14756 42.65009 47.36187 30.77748 50.16976 56.19946 40.52133 50.16976  #>      368      370      371      372      373      375      376      378  #> 56.19946 37.14756 42.65009 47.36187 31.10354 41.44565 46.15744 35.94313  #>      379      381      382      384      385      386      388      389  #> 41.44565 32.63404 37.47363 47.68794 40.19527 44.99293 55.87340 30.77748  #>      390      391      392      394      397      398      399      402  #> 35.61706 41.11959 45.83137 37.14756 32.63404 37.47363 42.97615 44.99293  #>      403      405      406      407      408      409      410      411  #> 49.84370 31.10354 35.94313 41.44565 46.15744 31.10354 35.94313 41.44565  #>      413      415      416      418      419      421      422      423  #> 32.63404 42.97615 47.68794 41.20593 46.05669 34.87777 39.67543 44.52619  #>      424      427      428      429      430      431      432      434  #> 50.55589 47.08922 51.80100 40.19527 44.99293 49.84370 55.87340 37.47363  #>      435      436      438      439      444      445      447      449  #> 42.97615 47.68794 39.34937 44.20013 51.80100 32.63404 42.97615 30.77748  #>      450      451      453      454      455      456      457      458  #> 35.61706 41.11959 32.30798 37.14756 42.65009 47.36187 31.10354 35.94313  #>      459      461      463      464      465      469      470      471  #> 41.44565 36.08221 45.73063 51.76033 32.30798 31.10354 35.94313 41.44565  #>      473      474      477      484      487      489      490      491  #> 40.19527 44.99293 31.10354 51.76033 41.44565 36.74710 41.58669 47.08922  #>      494      495      496      497      498      499      501      502  #> 39.67543 44.52619 50.55589 36.42104 41.26063 46.76315 34.55171 39.34937  #>      504      505      508      509      510      511      512      513  #> 50.22983 36.40827 52.08639 34.87777 39.67543 44.52619 50.55589 40.19527  #>      518      519      521      522      523      524      526      527  #> 41.26063 46.76315 31.10354 35.94313 41.44565 46.15744 35.61706 41.11959  #>      528      530      531      532      534      535      536      537  #> 45.83137 41.26063 46.76315 51.47494 37.14756 42.65009 47.36187 32.30798  #>      538      539      540      541      544      545      546      547  #> 37.14756 42.65009 47.36187 40.52133 56.19946 34.87777 39.67543 44.52619  #>      548      549      550      551      555      556      557      558  #> 50.55589 34.55171 39.34937 44.20013 44.52619 50.55589 32.63404 37.47363  #>      560      562      564      569      570      572      573      574  #> 47.68794 44.99293 55.87340 36.40827 41.20593 52.08639 31.10354 35.94313  #>      575      576      577      578      579      582      583      584  #> 41.44565 46.15744 32.30798 37.14756 42.65009 39.67543 44.52619 50.55589  #>      585      586      587      590      591      593      594      595  #> 31.10354 35.94313 41.44565 40.87987 45.73063 31.10354 35.94313 41.44565  #>      596      599      600      601      602      604      606      608  #> 46.15744 46.76315 51.47494 31.10354 35.94313 46.15744 39.67543 50.55589  #>      609      610      611      612      613      614      616      617  #> 32.30798 37.14756 42.65009 47.36187 32.63404 37.47363 47.68794 34.55171  #>      619      620      621      622      623      624      625      628  #> 44.20013 50.22983 36.42104 41.26063 46.76315 51.47494 36.08221 51.76033  #>      630      631      632      633      634      638      639      640  #> 40.87987 45.73063 51.76033 34.87777 39.67543 39.34937 44.20013 50.22983  #>      642      645      648      650      652      654      655      656  #> 37.47363 30.77748 45.83137 41.26063 51.47494 37.47363 42.97615 47.68794  #>      657      661      665      666      668      669      670      671  #> 40.52133 34.55171 32.30798 37.14756 47.36187 32.63404 37.47363 42.97615  #>      673      674      678      679      680      682      684      685  #> 36.74710 41.58669 45.31900 50.16976 56.19946 35.94313 46.15744 34.87777  #>      686      687      689      690      691      693      694      695  #> 39.67543 44.52619 40.52133 45.31900 50.16976 36.40827 41.20593 46.05669  #>      697      698      700      701      702      704      707      709  #> 32.63404 37.47363 47.68794 36.08221 40.87987 51.76033 42.65009 32.30798  #>      712      713      715      716      717      718      719      721  #> 47.36187 40.19527 49.84370 55.87340 30.77748 35.61706 41.11959 31.10354  #>      723      724      727      728      729      730      734      736  #> 41.44565 46.15744 46.05669 52.08639 36.40827 41.20593 45.31900 56.19946  #>      738      739      740      741      742      744      745      749  #> 37.47363 42.97615 47.68794 36.42104 41.26063 51.47494 32.63404 32.63404  #>      751      753      754      755      757      758      759      760  #> 42.97615 34.87777 39.67543 44.52619 36.40827 41.20593 46.05669 52.08639  #>      761      764      765      766      767      768      770      771  #> 40.19527 55.87340 40.52133 45.31900 50.16976 56.19946 35.61706 41.11959  #>      772      773      774      775      776      778      779      781  #> 45.83137 32.30798 37.14756 42.65009 47.36187 45.31900 50.16976 30.77748  #>      782      784      788      789      790      792      797      798  #> 35.61706 45.83137 47.36187 36.08221 40.87987 51.76033 32.30798 37.14756  #>      800  #> 47.36187  # Model frame: model.frame(object) #>         FEV1                      RACE    SEX ARMCD AVISIT #> 2   39.97105 Black or African American Female   TRT   VIS2 #> 4   20.48379 Black or African American Female   TRT   VIS4 #> 6   31.45522                     Asian   Male   PBO   VIS2 #> 7   36.87889                     Asian   Male   PBO   VIS3 #> 8   48.80809                     Asian   Male   PBO   VIS4 #> 10  35.98699 Black or African American Female   PBO   VIS2 #> 12  37.16444 Black or African American Female   PBO   VIS4 #> 13  33.89229                     Asian Female   TRT   VIS1 #> 14  33.74637                     Asian Female   TRT   VIS2 #> 16  54.45055                     Asian Female   TRT   VIS4 #> 17  32.31386 Black or African American   Male   PBO   VIS1 #> 19  46.79361 Black or African American   Male   PBO   VIS3 #> 20  41.71154 Black or African American   Male   PBO   VIS4 #> 23  39.02423 Black or African American   Male   PBO   VIS3 #> 25  31.93050                     Asian Female   PBO   VIS1 #> 26  32.90947                     Asian Female   PBO   VIS2 #> 28  48.28031                     Asian Female   PBO   VIS4 #> 29  32.23021 Black or African American   Male   PBO   VIS1 #> 30  35.91080 Black or African American   Male   PBO   VIS2 #> 31  45.54898 Black or African American   Male   PBO   VIS3 #> 32  53.02877 Black or African American   Male   PBO   VIS4 #> 33  47.16898                     White   Male   TRT   VIS1 #> 34  46.64287                     White   Male   TRT   VIS2 #> 36  58.09713                     White   Male   TRT   VIS4 #> 39  44.97613 Black or African American Female   PBO   VIS3 #> 41  44.32755                     Asian Female   TRT   VIS1 #> 42  38.97813                     Asian Female   TRT   VIS2 #> 43  43.72862                     Asian Female   TRT   VIS3 #> 44  46.43393                     Asian Female   TRT   VIS4 #> 45  40.34576                     Asian   Male   PBO   VIS1 #> 46  42.76568                     Asian   Male   PBO   VIS2 #> 47  40.11155                     Asian   Male   PBO   VIS3 #> 51  53.31791                     White   Male   TRT   VIS3 #> 52  56.07641                     White   Male   TRT   VIS4 #> 55  41.90837 Black or African American   Male   PBO   VIS3 #> 59  34.65663                     Asian   Male   PBO   VIS3 #> 60  39.07791                     Asian   Male   PBO   VIS4 #> 62  35.89612                     Asian Female   PBO   VIS2 #> 64  47.67264                     Asian Female   PBO   VIS4 #> 65  22.65440                     White Female   PBO   VIS1 #> 68  40.85376                     White Female   PBO   VIS4 #> 69  32.60048                     Asian   Male   TRT   VIS1 #> 70  33.64329                     Asian   Male   TRT   VIS2 #> 72  40.92278                     Asian   Male   TRT   VIS4 #> 73  32.14831                     Asian   Male   TRT   VIS1 #> 74  46.43604                     Asian   Male   TRT   VIS2 #> 75  41.34973                     Asian   Male   TRT   VIS3 #> 76  66.30382                     Asian   Male   TRT   VIS4 #> 78  47.95358                     White Female   TRT   VIS2 #> 79  53.97364                     White Female   TRT   VIS3 #> 82  56.64544                     White   Male   TRT   VIS2 #> 83  49.70872                     White   Male   TRT   VIS3 #> 84  60.40497                     White   Male   TRT   VIS4 #> 85  45.98525                     White   Male   TRT   VIS1 #> 86  51.90911                     White   Male   TRT   VIS2 #> 87  41.50787                     White   Male   TRT   VIS3 #> 88  53.42727                     White   Male   TRT   VIS4 #> 89  23.86859 Black or African American Female   PBO   VIS1 #> 90  35.98563 Black or African American Female   PBO   VIS2 #> 91  43.60626 Black or African American Female   PBO   VIS3 #> 93  29.59773                     White Female   TRT   VIS1 #> 94  35.50688                     White Female   TRT   VIS2 #> 95  55.42944                     White Female   TRT   VIS3 #> 96  52.10530                     White Female   TRT   VIS4 #> 97  31.69644                     White Female   TRT   VIS1 #> 98  32.16159                     White Female   TRT   VIS2 #> 99  51.04735                     White Female   TRT   VIS3 #> 100 55.85987                     White Female   TRT   VIS4 #> 101 49.11706                     White Female   TRT   VIS1 #> 102 49.25544                     White Female   TRT   VIS2 #> 103 51.72211                     White Female   TRT   VIS3 #> 104 69.99128                     White Female   TRT   VIS4 #> 105 22.07169 Black or African American Female   TRT   VIS1 #> 107 46.08393 Black or African American Female   TRT   VIS3 #> 108 52.42288 Black or African American Female   TRT   VIS4 #> 109 37.69466 Black or African American   Male   TRT   VIS1 #> 110 44.59400 Black or African American   Male   TRT   VIS2 #> 111 52.08897 Black or African American   Male   TRT   VIS3 #> 112 58.22961 Black or African American   Male   TRT   VIS4 #> 113 37.22824 Black or African American   Male   TRT   VIS1 #> 114 34.39863 Black or African American   Male   TRT   VIS2 #> 116 36.34012 Black or African American   Male   TRT   VIS4 #> 117 45.44182                     Asian Female   TRT   VIS1 #> 118 41.54847                     Asian Female   TRT   VIS2 #> 119 43.92172                     Asian Female   TRT   VIS3 #> 120 61.83243                     Asian Female   TRT   VIS4 #> 121 27.25656                     Asian Female   PBO   VIS1 #> 123 45.65133                     Asian Female   PBO   VIS3 #> 125 33.19334 Black or African American   Male   TRT   VIS1 #> 128 41.66826 Black or African American   Male   TRT   VIS4 #> 129 27.12753 Black or African American   Male   TRT   VIS1 #> 130 31.74858 Black or African American   Male   TRT   VIS2 #> 132 41.60000 Black or African American   Male   TRT   VIS4 #> 133 39.45250                     Asian Female   PBO   VIS1 #> 134 32.61823                     Asian Female   PBO   VIS2 #> 135 34.62445                     Asian Female   PBO   VIS3 #> 136 45.90515                     Asian Female   PBO   VIS4 #> 137 36.17780 Black or African American Female   TRT   VIS1 #> 138 39.79796 Black or African American Female   TRT   VIS2 #> 140 50.08272 Black or African American Female   TRT   VIS4 #> 142 44.64316                     Asian Female   TRT   VIS2 #> 144 39.73529                     Asian Female   TRT   VIS4 #> 145 34.06164                     White Female   PBO   VIS1 #> 146 40.18592                     White Female   PBO   VIS2 #> 147 41.17584                     White Female   PBO   VIS3 #> 148 57.76669                     White Female   PBO   VIS4 #> 149 38.18460                     Asian Female   PBO   VIS1 #> 151 47.19893                     Asian Female   PBO   VIS3 #> 153 37.32785                     Asian Female   PBO   VIS1 #> 155 43.16048                     Asian Female   PBO   VIS3 #> 156 41.40349                     Asian Female   PBO   VIS4 #> 157 30.15733 Black or African American   Male   PBO   VIS1 #> 158 35.84353 Black or African American   Male   PBO   VIS2 #> 159 40.95250 Black or African American   Male   PBO   VIS3 #> 162 41.37928 Black or African American   Male   PBO   VIS2 #> 163 50.17316 Black or African American   Male   PBO   VIS3 #> 164 45.35226 Black or African American   Male   PBO   VIS4 #> 165 39.06491 Black or African American   Male   PBO   VIS1 #> 168 42.11960 Black or African American   Male   PBO   VIS4 #> 169 29.81042 Black or African American Female   TRT   VIS1 #> 170 42.57055 Black or African American Female   TRT   VIS2 #> 171 47.81652 Black or African American Female   TRT   VIS3 #> 172 68.06024 Black or African American Female   TRT   VIS4 #> 173 35.62071 Black or African American   Male   TRT   VIS1 #> 177 33.89134                     Asian Female   PBO   VIS1 #> 178 36.42808                     Asian Female   PBO   VIS2 #> 179 37.57519                     Asian Female   PBO   VIS3 #> 180 58.46873                     Asian Female   PBO   VIS4 #> 181 19.54516                     Asian   Male   PBO   VIS1 #> 182 31.13541                     Asian   Male   PBO   VIS2 #> 183 40.89955                     Asian   Male   PBO   VIS3 #> 185 22.18809                     Asian   Male   TRT   VIS1 #> 186 41.05857                     Asian   Male   TRT   VIS2 #> 187 37.32452                     Asian   Male   TRT   VIS3 #> 190 43.12432 Black or African American   Male   PBO   VIS2 #> 191 41.99349 Black or African American   Male   PBO   VIS3 #> 193 44.03080                     White Female   PBO   VIS1 #> 194 38.66417                     White Female   PBO   VIS2 #> 195 53.45993                     White Female   PBO   VIS3 #> 197 29.81948                     Asian Female   TRT   VIS1 #> 198 30.43859                     Asian Female   TRT   VIS2 #> 199 40.18095                     Asian Female   TRT   VIS3 #> 201 26.78578 Black or African American Female   TRT   VIS1 #> 202 34.55115 Black or African American Female   TRT   VIS2 #> 204 40.06421 Black or African American Female   TRT   VIS4 #> 206 43.09329 Black or African American Female   TRT   VIS2 #> 208 45.71567 Black or African American Female   TRT   VIS4 #> 209 40.74992                     White   Male   PBO   VIS1 #> 210 44.74635                     White   Male   PBO   VIS2 #> 217 40.14674                     Asian   Male   TRT   VIS1 #> 218 48.75859                     Asian   Male   TRT   VIS2 #> 219 46.43462                     Asian   Male   TRT   VIS3 #> 221 29.33990 Black or African American   Male   PBO   VIS1 #> 224 47.93165 Black or African American   Male   PBO   VIS4 #> 226 41.11632 Black or African American   Male   TRT   VIS2 #> 227 47.05889 Black or African American   Male   TRT   VIS3 #> 228 52.24599 Black or African American   Male   TRT   VIS4 #> 230 54.14236                     White Female   TRT   VIS2 #> 231 50.44618                     White Female   TRT   VIS3 #> 233 37.53657                     White Female   TRT   VIS1 #> 235 49.45840                     White Female   TRT   VIS3 #> 236 59.12866                     White Female   TRT   VIS4 #> 237 40.31268 Black or African American Female   TRT   VIS1 #> 238 39.66049 Black or African American Female   TRT   VIS2 #> 239 50.89726 Black or African American Female   TRT   VIS3 #> 240 56.13116 Black or African American Female   TRT   VIS4 #> 241 32.82981                     Asian   Male   TRT   VIS1 #> 242 46.53837                     Asian   Male   TRT   VIS2 #> 244 51.81265                     Asian   Male   TRT   VIS4 #> 246 29.91939                     Asian Female   PBO   VIS2 #> 250 51.05656                     White Female   PBO   VIS2 #> 251 50.50059                     White Female   PBO   VIS3 #> 252 64.11388                     White Female   PBO   VIS4 #> 253 32.21843 Black or African American Female   PBO   VIS1 #> 254 29.64732 Black or African American Female   PBO   VIS2 #> 256 45.09919 Black or African American Female   PBO   VIS4 #> 257 39.75659                     Asian Female   TRT   VIS1 #> 258 37.28894                     Asian Female   TRT   VIS2 #> 259 44.80145                     Asian Female   TRT   VIS3 #> 260 65.95920                     Asian Female   TRT   VIS4 #> 261 33.43439                     Asian   Male   TRT   VIS1 #> 262 33.57042                     Asian   Male   TRT   VIS2 #> 263 39.91543                     Asian   Male   TRT   VIS3 #> 264 49.57098                     Asian   Male   TRT   VIS4 #> 265 38.91634                     White Female   TRT   VIS1 #> 266 36.69011                     White Female   TRT   VIS2 #> 267 45.66665                     White Female   TRT   VIS3 #> 268 52.07431                     White Female   TRT   VIS4 #> 269 42.21411                     White Female   TRT   VIS1 #> 270 45.02901                     White Female   TRT   VIS2 #> 273 30.98338 Black or African American   Male   PBO   VIS1 #> 274 44.72932 Black or African American   Male   PBO   VIS2 #> 275 40.68711 Black or African American   Male   PBO   VIS3 #> 276 34.71530 Black or African American   Male   PBO   VIS4 #> 277 27.30752 Black or African American   Male   PBO   VIS1 #> 278 37.31585 Black or African American   Male   PBO   VIS2 #> 280 44.83000 Black or African American   Male   PBO   VIS4 #> 281 32.93042                     Asian   Male   TRT   VIS1 #> 282 44.91911                     Asian   Male   TRT   VIS2 #> 283 45.68636                     Asian   Male   TRT   VIS3 #> 284 65.98800                     Asian   Male   TRT   VIS4 #> 285 46.60130                     Asian Female   TRT   VIS1 #> 286 40.89786                     Asian Female   TRT   VIS2 #> 287 46.66708                     Asian Female   TRT   VIS3 #> 291 43.83270                     White   Male   PBO   VIS3 #> 292 44.11604                     White   Male   PBO   VIS4 #> 293 38.29612                     White Female   PBO   VIS1 #> 295 51.38570                     White Female   PBO   VIS3 #> 296 56.20979                     White Female   PBO   VIS4 #> 298 43.45819                     White   Male   PBO   VIS2 #> 299 38.38741                     White   Male   PBO   VIS3 #> 300 56.42818                     White   Male   PBO   VIS4 #> 301 39.05050                     White   Male   TRT   VIS1 #> 304 54.09200                     White   Male   TRT   VIS4 #> 305 31.40521                     Asian   Male   TRT   VIS1 #> 306 46.13330                     Asian   Male   TRT   VIS2 #> 307 45.29845                     Asian   Male   TRT   VIS3 #> 308 28.06936                     Asian   Male   TRT   VIS4 #> 310 42.50283                     White Female   TRT   VIS2 #> 311 46.45368                     White Female   TRT   VIS3 #> 312 64.97366                     White Female   TRT   VIS4 #> 316 43.97847                     Asian Female   PBO   VIS4 #> 317 35.33466                     Asian   Male   TRT   VIS1 #> 318 39.34378                     Asian   Male   TRT   VIS2 #> 319 41.27633                     Asian   Male   TRT   VIS3 #> 322 39.83058                     White   Male   PBO   VIS2 #> 323 43.49673                     White   Male   PBO   VIS3 #> 324 44.06114                     White   Male   PBO   VIS4 #> 325 41.43742 Black or African American Female   PBO   VIS1 #> 327 46.16954 Black or African American Female   PBO   VIS3 #> 328 54.24024 Black or African American Female   PBO   VIS4 #> 329 36.61831                     White   Male   TRT   VIS1 #> 330 42.09272                     White   Male   TRT   VIS2 #> 331 50.69556                     White   Male   TRT   VIS3 #> 332 51.72563                     White   Male   TRT   VIS4 #> 336 53.89947                     Asian Female   PBO   VIS4 #> 339 39.94420                     Asian Female   PBO   VIS3 #> 340 56.42482                     Asian Female   PBO   VIS4 #> 341 41.86385 Black or African American Female   TRT   VIS1 #> 342 34.56420 Black or African American Female   TRT   VIS2 #> 343 38.68927 Black or African American Female   TRT   VIS3 #> 344 62.88743 Black or African American Female   TRT   VIS4 #> 345 28.85343                     White   Male   PBO   VIS1 #> 347 49.29495                     White   Male   PBO   VIS3 #> 349 28.74029 Black or African American Female   PBO   VIS1 #> 351 43.59994 Black or African American Female   PBO   VIS3 #> 352 57.38616 Black or African American Female   PBO   VIS4 #> 353 35.36824 Black or African American   Male   PBO   VIS1 #> 354 43.06110 Black or African American   Male   PBO   VIS2 #> 355 31.27551 Black or African American   Male   PBO   VIS3 #> 356 54.13245 Black or African American   Male   PBO   VIS4 #> 357 25.97050                     Asian   Male   PBO   VIS1 #> 363 51.17493                     White Female   TRT   VIS3 #> 364 48.44043                     White Female   TRT   VIS4 #> 365 43.33128                     White Female   TRT   VIS1 #> 367 55.93546                     White Female   TRT   VIS3 #> 368 54.15312                     White Female   TRT   VIS4 #> 370 40.60252 Black or African American   Male   PBO   VIS2 #> 371 44.44715 Black or African American   Male   PBO   VIS3 #> 372 40.54161 Black or African American   Male   PBO   VIS4 #> 373 33.95563                     Asian Female   PBO   VIS1 #> 375 43.67802                     Asian Female   PBO   VIS3 #> 376 42.76023                     Asian Female   PBO   VIS4 #> 378 42.82678                     Asian Female   PBO   VIS2 #> 379 39.59218                     Asian Female   PBO   VIS3 #> 381 33.49216 Black or African American Female   PBO   VIS1 #> 382 35.39266 Black or African American Female   PBO   VIS2 #> 384 42.36266 Black or African American Female   PBO   VIS4 #> 385 48.54368                     White   Male   TRT   VIS1 #> 386 43.94366                     White   Male   TRT   VIS2 #> 388 47.91204                     White   Male   TRT   VIS4 #> 389 20.72928                     Asian   Male   PBO   VIS1 #> 390 28.00599                     Asian   Male   PBO   VIS2 #> 391 40.19255                     Asian   Male   PBO   VIS3 #> 392 37.79360                     Asian   Male   PBO   VIS4 #> 394 36.75177 Black or African American   Male   PBO   VIS2 #> 397 34.59822 Black or African American Female   PBO   VIS1 #> 398 39.32034 Black or African American Female   PBO   VIS2 #> 399 40.65702 Black or African American Female   PBO   VIS3 #> 402 43.03255                     White   Male   TRT   VIS2 #> 403 54.65715                     White   Male   TRT   VIS3 #> 405 35.55742                     Asian Female   PBO   VIS1 #> 406 43.70215                     Asian Female   PBO   VIS2 #> 407 42.52157                     Asian Female   PBO   VIS3 #> 408 54.89337                     Asian Female   PBO   VIS4 #> 409 32.03460                     Asian Female   PBO   VIS1 #> 410 29.45107                     Asian Female   PBO   VIS2 #> 411 45.35138                     Asian Female   PBO   VIS3 #> 413 38.73784 Black or African American Female   PBO   VIS1 #> 415 41.42283 Black or African American Female   PBO   VIS3 #> 416 47.32385 Black or African American Female   PBO   VIS4 #> 418 47.55310 Black or African American Female   TRT   VIS2 #> 419 49.06509 Black or African American Female   TRT   VIS3 #> 421 29.22591                     Asian Female   TRT   VIS1 #> 422 40.08175                     Asian Female   TRT   VIS2 #> 423 45.68142                     Asian Female   TRT   VIS3 #> 424 41.47403                     Asian Female   TRT   VIS4 #> 427 42.51970                     White Female   PBO   VIS3 #> 428 69.36099                     White Female   PBO   VIS4 #> 429 42.39760                     White   Male   TRT   VIS1 #> 430 43.72376                     White   Male   TRT   VIS2 #> 431 49.47601                     White   Male   TRT   VIS3 #> 432 51.94188                     White   Male   TRT   VIS4 #> 434 40.59100 Black or African American Female   PBO   VIS2 #> 435 39.97833 Black or African American Female   PBO   VIS3 #> 436 31.69049 Black or African American Female   PBO   VIS4 #> 438 37.20517                     Asian   Male   TRT   VIS2 #> 439 46.28740                     Asian   Male   TRT   VIS3 #> 444 41.58720                     White Female   PBO   VIS4 #> 445 32.17365 Black or African American Female   PBO   VIS1 #> 447 40.69375 Black or African American Female   PBO   VIS3 #> 449 32.28771                     Asian   Male   PBO   VIS1 #> 450 41.76205                     Asian   Male   PBO   VIS2 #> 451 40.06768                     Asian   Male   PBO   VIS3 #> 453 29.14213 Black or African American   Male   PBO   VIS1 #> 454 39.50989 Black or African American   Male   PBO   VIS2 #> 455 43.32349 Black or African American   Male   PBO   VIS3 #> 456 47.16756 Black or African American   Male   PBO   VIS4 #> 457 40.93020                     Asian Female   PBO   VIS1 #> 458 42.19406                     Asian Female   PBO   VIS2 #> 459 41.21057                     Asian Female   PBO   VIS3 #> 461 38.54330 Black or African American   Male   TRT   VIS1 #> 463 43.96324 Black or African American   Male   TRT   VIS3 #> 464 42.67652 Black or African American   Male   TRT   VIS4 #> 465 22.79584 Black or African American   Male   PBO   VIS1 #> 469 31.43559                     Asian Female   PBO   VIS1 #> 470 38.85064                     Asian Female   PBO   VIS2 #> 471 48.24288                     Asian Female   PBO   VIS3 #> 473 44.71302                     White   Male   TRT   VIS1 #> 474 51.85370                     White   Male   TRT   VIS2 #> 477 30.56757                     Asian Female   PBO   VIS1 #> 484 59.90473 Black or African American   Male   TRT   VIS4 #> 487 49.76150                     Asian Female   PBO   VIS3 #> 489 47.21985                     White Female   PBO   VIS1 #> 490 40.34525                     White Female   PBO   VIS2 #> 491 48.29793                     White Female   PBO   VIS3 #> 494 44.39634                     Asian Female   TRT   VIS2 #> 495 41.71421                     Asian Female   TRT   VIS3 #> 496 47.37535                     Asian Female   TRT   VIS4 #> 497 42.03797                     White   Male   PBO   VIS1 #> 498 37.56100                     White   Male   PBO   VIS2 #> 499 45.11793                     White   Male   PBO   VIS3 #> 501 34.62530                     Asian   Male   TRT   VIS1 #> 502 45.28206                     Asian   Male   TRT   VIS2 #> 504 63.57761                     Asian   Male   TRT   VIS4 #> 505 35.80878 Black or African American Female   TRT   VIS1 #> 508 52.67314 Black or African American Female   TRT   VIS4 #> 509 35.88734                     Asian Female   TRT   VIS1 #> 510 38.73222                     Asian Female   TRT   VIS2 #> 511 46.70361                     Asian Female   TRT   VIS3 #> 512 53.65398                     Asian Female   TRT   VIS4 #> 513 36.71543                     White   Male   TRT   VIS1 #> 518 41.54317                     White   Male   PBO   VIS2 #> 519 51.67909                     White   Male   PBO   VIS3 #> 521 27.40130                     Asian Female   PBO   VIS1 #> 522 30.33517                     Asian Female   PBO   VIS2 #> 523 37.73092                     Asian Female   PBO   VIS3 #> 524 29.11668                     Asian Female   PBO   VIS4 #> 526 32.08830                     Asian   Male   PBO   VIS2 #> 527 41.66067                     Asian   Male   PBO   VIS3 #> 528 53.90815                     Asian   Male   PBO   VIS4 #> 530 35.06937                     White   Male   PBO   VIS2 #> 531 47.17615                     White   Male   PBO   VIS3 #> 532 56.49347                     White   Male   PBO   VIS4 #> 534 38.88006 Black or African American   Male   PBO   VIS2 #> 535 47.54070 Black or African American   Male   PBO   VIS3 #> 536 43.53705 Black or African American   Male   PBO   VIS4 #> 537 31.82054 Black or African American   Male   PBO   VIS1 #> 538 39.62816 Black or African American   Male   PBO   VIS2 #> 539 44.95543 Black or African American   Male   PBO   VIS3 #> 540 21.11543 Black or African American   Male   PBO   VIS4 #> 541 34.74671                     White Female   TRT   VIS1 #> 544 56.69249                     White Female   TRT   VIS4 #> 545 22.73126                     Asian Female   TRT   VIS1 #> 546 32.50075                     Asian Female   TRT   VIS2 #> 547 42.37206                     Asian Female   TRT   VIS3 #> 548 42.89847                     Asian Female   TRT   VIS4 #> 549 55.62582                     Asian   Male   TRT   VIS1 #> 550 45.38998                     Asian   Male   TRT   VIS2 #> 551 52.66743                     Asian   Male   TRT   VIS3 #> 555 34.18931                     Asian Female   TRT   VIS3 #> 556 45.59740                     Asian Female   TRT   VIS4 #> 557 28.89198 Black or African American Female   PBO   VIS1 #> 558 38.46147 Black or African American Female   PBO   VIS2 #> 560 49.90357 Black or African American Female   PBO   VIS4 #> 562 44.14167                     White   Male   TRT   VIS2 #> 564 55.24278                     White   Male   TRT   VIS4 #> 569 27.38001 Black or African American Female   TRT   VIS1 #> 570 33.63251 Black or African American Female   TRT   VIS2 #> 572 39.34410 Black or African American Female   TRT   VIS4 #> 573 26.98575                     Asian Female   PBO   VIS1 #> 574 24.04175                     Asian Female   PBO   VIS2 #> 575 42.16648                     Asian Female   PBO   VIS3 #> 576 44.75380                     Asian Female   PBO   VIS4 #> 577 31.55469 Black or African American   Male   PBO   VIS1 #> 578 44.42696 Black or African American   Male   PBO   VIS2 #> 579 44.10343 Black or African American   Male   PBO   VIS3 #> 582 37.87445                     Asian Female   TRT   VIS2 #> 583 48.31828                     Asian Female   TRT   VIS3 #> 584 50.21520                     Asian Female   TRT   VIS4 #> 585 41.94615                     Asian Female   PBO   VIS1 #> 586 39.62690                     Asian Female   PBO   VIS2 #> 587 46.69763                     Asian Female   PBO   VIS3 #> 590 43.75255 Black or African American   Male   TRT   VIS2 #> 591 47.38873 Black or African American   Male   TRT   VIS3 #> 593 32.43412                     Asian Female   PBO   VIS1 #> 594 43.07163                     Asian Female   PBO   VIS2 #> 595 42.99551                     Asian Female   PBO   VIS3 #> 596 53.82759                     Asian Female   PBO   VIS4 #> 599 50.64802                     White   Male   PBO   VIS3 #> 600 63.44051                     White   Male   PBO   VIS4 #> 601 34.48949                     Asian Female   PBO   VIS1 #> 602 40.08056                     Asian Female   PBO   VIS2 #> 604 47.46553                     Asian Female   PBO   VIS4 #> 606 37.11697                     Asian Female   TRT   VIS2 #> 608 36.25120                     Asian Female   TRT   VIS4 #> 609 29.20171 Black or African American   Male   PBO   VIS1 #> 610 31.53773 Black or African American   Male   PBO   VIS2 #> 611 42.35683 Black or African American   Male   PBO   VIS3 #> 612 64.78352 Black or African American   Male   PBO   VIS4 #> 613 32.72757 Black or African American Female   PBO   VIS1 #> 614 37.50022 Black or African American Female   PBO   VIS2 #> 616 57.03861 Black or African American Female   PBO   VIS4 #> 617 36.32475                     Asian   Male   TRT   VIS1 #> 619 41.46725                     Asian   Male   TRT   VIS3 #> 620 59.01411                     Asian   Male   TRT   VIS4 #> 621 30.14970                     White   Male   PBO   VIS1 #> 622 34.91740                     White   Male   PBO   VIS2 #> 623 52.13900                     White   Male   PBO   VIS3 #> 624 58.73839                     White   Male   PBO   VIS4 #> 625 35.83185 Black or African American   Male   TRT   VIS1 #> 628 56.41409 Black or African American   Male   TRT   VIS4 #> 630 43.55593 Black or African American   Male   TRT   VIS2 #> 631 44.26320 Black or African American   Male   TRT   VIS3 #> 632 59.25579 Black or African American   Male   TRT   VIS4 #> 633 28.47314                     Asian Female   TRT   VIS1 #> 634 47.47581                     Asian Female   TRT   VIS2 #> 638 46.47483                     Asian   Male   TRT   VIS2 #> 639 51.22677                     Asian   Male   TRT   VIS3 #> 640 45.82777                     Asian   Male   TRT   VIS4 #> 642 39.06783 Black or African American Female   PBO   VIS2 #> 645 29.99542                     Asian   Male   PBO   VIS1 #> 648 54.17796                     Asian   Male   PBO   VIS4 #> 650 44.55743                     White   Male   PBO   VIS2 #> 652 62.59579                     White   Male   PBO   VIS4 #> 654 35.48396 Black or African American Female   PBO   VIS2 #> 655 44.07768 Black or African American Female   PBO   VIS3 #> 656 46.57837 Black or African American Female   PBO   VIS4 #> 657 47.67979                     White Female   TRT   VIS1 #> 661 22.15439                     Asian   Male   TRT   VIS1 #> 665 34.27765 Black or African American   Male   PBO   VIS1 #> 666 36.90059 Black or African American   Male   PBO   VIS2 #> 668 40.54285 Black or African American   Male   PBO   VIS4 #> 669 29.09494 Black or African American Female   PBO   VIS1 #> 670 37.21768 Black or African American Female   PBO   VIS2 #> 671 43.08491 Black or African American Female   PBO   VIS3 #> 673 27.12174                     White Female   PBO   VIS1 #> 674 34.11916                     White Female   PBO   VIS2 #> 678 40.80230                     White Female   TRT   VIS2 #> 679 45.89269                     White Female   TRT   VIS3 #> 680 43.69153                     White Female   TRT   VIS4 #> 682 29.22869                     Asian Female   PBO   VIS2 #> 684 55.68362                     Asian Female   PBO   VIS4 #> 685 31.90698                     Asian Female   TRT   VIS1 #> 686 37.31061                     Asian Female   TRT   VIS2 #> 687 40.75546                     Asian Female   TRT   VIS3 #> 689 42.19474                     White Female   TRT   VIS1 #> 690 44.87228                     White Female   TRT   VIS2 #> 691 47.55198                     White Female   TRT   VIS3 #> 693 50.62894 Black or African American Female   TRT   VIS1 #> 694 45.47551 Black or African American Female   TRT   VIS2 #> 695 48.62168 Black or African American Female   TRT   VIS3 #> 697 29.66493 Black or African American Female   PBO   VIS1 #> 698 34.57406 Black or African American Female   PBO   VIS2 #> 700 38.11676 Black or African American Female   PBO   VIS4 #> 701 33.77204 Black or African American   Male   TRT   VIS1 #> 702 34.26148 Black or African American   Male   TRT   VIS2 #> 704 58.81037 Black or African American   Male   TRT   VIS4 #> 707 39.88119 Black or African American   Male   PBO   VIS3 #> 709 31.62708 Black or African American   Male   PBO   VIS1 #> 712 48.22049 Black or African American   Male   PBO   VIS4 #> 713 42.58829                     White   Male   TRT   VIS1 #> 715 49.33262                     White   Male   TRT   VIS3 #> 716 53.74331                     White   Male   TRT   VIS4 #> 717 29.71857                     Asian   Male   PBO   VIS1 #> 718 30.45651                     Asian   Male   PBO   VIS2 #> 719 38.29800                     Asian   Male   PBO   VIS3 #> 721 36.81040                     Asian Female   PBO   VIS1 #> 723 42.35045                     Asian Female   PBO   VIS3 #> 724 39.39860                     Asian Female   PBO   VIS4 #> 727 49.73629 Black or African American Female   TRT   VIS3 #> 728 41.58082 Black or African American Female   TRT   VIS4 #> 729 43.58901 Black or African American Female   TRT   VIS1 #> 730 40.16762 Black or African American Female   TRT   VIS2 #> 734 41.08206                     White Female   TRT   VIS2 #> 736 69.37409                     White Female   TRT   VIS4 #> 738 41.27625 Black or African American Female   PBO   VIS2 #> 739 44.76138 Black or African American Female   PBO   VIS3 #> 740 39.69815 Black or African American Female   PBO   VIS4 #> 741 38.44296                     White   Male   PBO   VIS1 #> 742 48.20586                     White   Male   PBO   VIS2 #> 744 35.50735                     White   Male   PBO   VIS4 #> 745 32.08153 Black or African American Female   PBO   VIS1 #> 749 44.69256 Black or African American Female   PBO   VIS1 #> 751 42.18689 Black or African American Female   PBO   VIS3 #> 753 37.01741                     Asian Female   TRT   VIS1 #> 754 38.26920                     Asian Female   TRT   VIS2 #> 755 49.28806                     Asian Female   TRT   VIS3 #> 757 40.45953 Black or African American Female   TRT   VIS1 #> 758 45.10337 Black or African American Female   TRT   VIS2 #> 759 45.58250 Black or African American Female   TRT   VIS3 #> 760 62.96989 Black or African American Female   TRT   VIS4 #> 761 30.78252                     White   Male   TRT   VIS1 #> 764 44.69667                     White   Male   TRT   VIS4 #> 765 32.72491                     White Female   TRT   VIS1 #> 766 45.78702                     White Female   TRT   VIS2 #> 767 48.74886                     White Female   TRT   VIS3 #> 768 84.08449                     White Female   TRT   VIS4 #> 770 30.19495                     Asian   Male   PBO   VIS2 #> 771 36.78573                     Asian   Male   PBO   VIS3 #> 772 61.03588                     Asian   Male   PBO   VIS4 #> 773 20.36749 Black or African American   Male   PBO   VIS1 #> 774 35.22480 Black or African American   Male   PBO   VIS2 #> 775 37.42847 Black or African American   Male   PBO   VIS3 #> 776 30.20501 Black or African American   Male   PBO   VIS4 #> 778 49.12862                     White Female   TRT   VIS2 #> 779 47.31234                     White Female   TRT   VIS3 #> 781 19.28388                     Asian   Male   PBO   VIS1 #> 782 30.00682                     Asian   Male   PBO   VIS2 #> 784 49.21768                     Asian   Male   PBO   VIS4 #> 788 40.13353 Black or African American   Male   PBO   VIS4 #> 789 42.34534 Black or African American   Male   TRT   VIS1 #> 790 52.32575 Black or African American   Male   TRT   VIS2 #> 792 69.26254 Black or African American   Male   TRT   VIS4 #> 797 35.70341 Black or African American   Male   PBO   VIS1 #> 798 41.64454 Black or African American   Male   PBO   VIS2 #> 800 54.25081 Black or African American   Male   PBO   VIS4 model.frame(object, full = TRUE) #>         FEV1                      RACE    SEX ARMCD AVISIT USUBJID (weights) #> 2   39.97105 Black or African American Female   TRT   VIS2     PT1         1 #> 4   20.48379 Black or African American Female   TRT   VIS4     PT1         1 #> 6   31.45522                     Asian   Male   PBO   VIS2     PT2         1 #> 7   36.87889                     Asian   Male   PBO   VIS3     PT2         1 #> 8   48.80809                     Asian   Male   PBO   VIS4     PT2         1 #> 10  35.98699 Black or African American Female   PBO   VIS2     PT3         1 #> 12  37.16444 Black or African American Female   PBO   VIS4     PT3         1 #> 13  33.89229                     Asian Female   TRT   VIS1     PT4         1 #> 14  33.74637                     Asian Female   TRT   VIS2     PT4         1 #> 16  54.45055                     Asian Female   TRT   VIS4     PT4         1 #> 17  32.31386 Black or African American   Male   PBO   VIS1     PT5         1 #> 19  46.79361 Black or African American   Male   PBO   VIS3     PT5         1 #> 20  41.71154 Black or African American   Male   PBO   VIS4     PT5         1 #> 23  39.02423 Black or African American   Male   PBO   VIS3     PT6         1 #> 25  31.93050                     Asian Female   PBO   VIS1     PT7         1 #> 26  32.90947                     Asian Female   PBO   VIS2     PT7         1 #> 28  48.28031                     Asian Female   PBO   VIS4     PT7         1 #> 29  32.23021 Black or African American   Male   PBO   VIS1     PT8         1 #> 30  35.91080 Black or African American   Male   PBO   VIS2     PT8         1 #> 31  45.54898 Black or African American   Male   PBO   VIS3     PT8         1 #> 32  53.02877 Black or African American   Male   PBO   VIS4     PT8         1 #> 33  47.16898                     White   Male   TRT   VIS1     PT9         1 #> 34  46.64287                     White   Male   TRT   VIS2     PT9         1 #> 36  58.09713                     White   Male   TRT   VIS4     PT9         1 #> 39  44.97613 Black or African American Female   PBO   VIS3    PT10         1 #> 41  44.32755                     Asian Female   TRT   VIS1    PT11         1 #> 42  38.97813                     Asian Female   TRT   VIS2    PT11         1 #> 43  43.72862                     Asian Female   TRT   VIS3    PT11         1 #> 44  46.43393                     Asian Female   TRT   VIS4    PT11         1 #> 45  40.34576                     Asian   Male   PBO   VIS1    PT12         1 #> 46  42.76568                     Asian   Male   PBO   VIS2    PT12         1 #> 47  40.11155                     Asian   Male   PBO   VIS3    PT12         1 #> 51  53.31791                     White   Male   TRT   VIS3    PT13         1 #> 52  56.07641                     White   Male   TRT   VIS4    PT13         1 #> 55  41.90837 Black or African American   Male   PBO   VIS3    PT14         1 #> 59  34.65663                     Asian   Male   PBO   VIS3    PT15         1 #> 60  39.07791                     Asian   Male   PBO   VIS4    PT15         1 #> 62  35.89612                     Asian Female   PBO   VIS2    PT16         1 #> 64  47.67264                     Asian Female   PBO   VIS4    PT16         1 #> 65  22.65440                     White Female   PBO   VIS1    PT17         1 #> 68  40.85376                     White Female   PBO   VIS4    PT17         1 #> 69  32.60048                     Asian   Male   TRT   VIS1    PT18         1 #> 70  33.64329                     Asian   Male   TRT   VIS2    PT18         1 #> 72  40.92278                     Asian   Male   TRT   VIS4    PT18         1 #> 73  32.14831                     Asian   Male   TRT   VIS1    PT19         1 #> 74  46.43604                     Asian   Male   TRT   VIS2    PT19         1 #> 75  41.34973                     Asian   Male   TRT   VIS3    PT19         1 #> 76  66.30382                     Asian   Male   TRT   VIS4    PT19         1 #> 78  47.95358                     White Female   TRT   VIS2    PT20         1 #> 79  53.97364                     White Female   TRT   VIS3    PT20         1 #> 82  56.64544                     White   Male   TRT   VIS2    PT21         1 #> 83  49.70872                     White   Male   TRT   VIS3    PT21         1 #> 84  60.40497                     White   Male   TRT   VIS4    PT21         1 #> 85  45.98525                     White   Male   TRT   VIS1    PT22         1 #> 86  51.90911                     White   Male   TRT   VIS2    PT22         1 #> 87  41.50787                     White   Male   TRT   VIS3    PT22         1 #> 88  53.42727                     White   Male   TRT   VIS4    PT22         1 #> 89  23.86859 Black or African American Female   PBO   VIS1    PT23         1 #> 90  35.98563 Black or African American Female   PBO   VIS2    PT23         1 #> 91  43.60626 Black or African American Female   PBO   VIS3    PT23         1 #> 93  29.59773                     White Female   TRT   VIS1    PT24         1 #> 94  35.50688                     White Female   TRT   VIS2    PT24         1 #> 95  55.42944                     White Female   TRT   VIS3    PT24         1 #> 96  52.10530                     White Female   TRT   VIS4    PT24         1 #> 97  31.69644                     White Female   TRT   VIS1    PT25         1 #> 98  32.16159                     White Female   TRT   VIS2    PT25         1 #> 99  51.04735                     White Female   TRT   VIS3    PT25         1 #> 100 55.85987                     White Female   TRT   VIS4    PT25         1 #> 101 49.11706                     White Female   TRT   VIS1    PT26         1 #> 102 49.25544                     White Female   TRT   VIS2    PT26         1 #> 103 51.72211                     White Female   TRT   VIS3    PT26         1 #> 104 69.99128                     White Female   TRT   VIS4    PT26         1 #> 105 22.07169 Black or African American Female   TRT   VIS1    PT27         1 #> 107 46.08393 Black or African American Female   TRT   VIS3    PT27         1 #> 108 52.42288 Black or African American Female   TRT   VIS4    PT27         1 #> 109 37.69466 Black or African American   Male   TRT   VIS1    PT28         1 #> 110 44.59400 Black or African American   Male   TRT   VIS2    PT28         1 #> 111 52.08897 Black or African American   Male   TRT   VIS3    PT28         1 #> 112 58.22961 Black or African American   Male   TRT   VIS4    PT28         1 #> 113 37.22824 Black or African American   Male   TRT   VIS1    PT29         1 #> 114 34.39863 Black or African American   Male   TRT   VIS2    PT29         1 #> 116 36.34012 Black or African American   Male   TRT   VIS4    PT29         1 #> 117 45.44182                     Asian Female   TRT   VIS1    PT30         1 #> 118 41.54847                     Asian Female   TRT   VIS2    PT30         1 #> 119 43.92172                     Asian Female   TRT   VIS3    PT30         1 #> 120 61.83243                     Asian Female   TRT   VIS4    PT30         1 #> 121 27.25656                     Asian Female   PBO   VIS1    PT31         1 #> 123 45.65133                     Asian Female   PBO   VIS3    PT31         1 #> 125 33.19334 Black or African American   Male   TRT   VIS1    PT32         1 #> 128 41.66826 Black or African American   Male   TRT   VIS4    PT32         1 #> 129 27.12753 Black or African American   Male   TRT   VIS1    PT33         1 #> 130 31.74858 Black or African American   Male   TRT   VIS2    PT33         1 #> 132 41.60000 Black or African American   Male   TRT   VIS4    PT33         1 #> 133 39.45250                     Asian Female   PBO   VIS1    PT34         1 #> 134 32.61823                     Asian Female   PBO   VIS2    PT34         1 #> 135 34.62445                     Asian Female   PBO   VIS3    PT34         1 #> 136 45.90515                     Asian Female   PBO   VIS4    PT34         1 #> 137 36.17780 Black or African American Female   TRT   VIS1    PT35         1 #> 138 39.79796 Black or African American Female   TRT   VIS2    PT35         1 #> 140 50.08272 Black or African American Female   TRT   VIS4    PT35         1 #> 142 44.64316                     Asian Female   TRT   VIS2    PT36         1 #> 144 39.73529                     Asian Female   TRT   VIS4    PT36         1 #> 145 34.06164                     White Female   PBO   VIS1    PT37         1 #> 146 40.18592                     White Female   PBO   VIS2    PT37         1 #> 147 41.17584                     White Female   PBO   VIS3    PT37         1 #> 148 57.76669                     White Female   PBO   VIS4    PT37         1 #> 149 38.18460                     Asian Female   PBO   VIS1    PT38         1 #> 151 47.19893                     Asian Female   PBO   VIS3    PT38         1 #> 153 37.32785                     Asian Female   PBO   VIS1    PT39         1 #> 155 43.16048                     Asian Female   PBO   VIS3    PT39         1 #> 156 41.40349                     Asian Female   PBO   VIS4    PT39         1 #> 157 30.15733 Black or African American   Male   PBO   VIS1    PT40         1 #> 158 35.84353 Black or African American   Male   PBO   VIS2    PT40         1 #> 159 40.95250 Black or African American   Male   PBO   VIS3    PT40         1 #> 162 41.37928 Black or African American   Male   PBO   VIS2    PT41         1 #> 163 50.17316 Black or African American   Male   PBO   VIS3    PT41         1 #> 164 45.35226 Black or African American   Male   PBO   VIS4    PT41         1 #> 165 39.06491 Black or African American   Male   PBO   VIS1    PT42         1 #> 168 42.11960 Black or African American   Male   PBO   VIS4    PT42         1 #> 169 29.81042 Black or African American Female   TRT   VIS1    PT43         1 #> 170 42.57055 Black or African American Female   TRT   VIS2    PT43         1 #> 171 47.81652 Black or African American Female   TRT   VIS3    PT43         1 #> 172 68.06024 Black or African American Female   TRT   VIS4    PT43         1 #> 173 35.62071 Black or African American   Male   TRT   VIS1    PT44         1 #> 177 33.89134                     Asian Female   PBO   VIS1    PT45         1 #> 178 36.42808                     Asian Female   PBO   VIS2    PT45         1 #> 179 37.57519                     Asian Female   PBO   VIS3    PT45         1 #> 180 58.46873                     Asian Female   PBO   VIS4    PT45         1 #> 181 19.54516                     Asian   Male   PBO   VIS1    PT46         1 #> 182 31.13541                     Asian   Male   PBO   VIS2    PT46         1 #> 183 40.89955                     Asian   Male   PBO   VIS3    PT46         1 #> 185 22.18809                     Asian   Male   TRT   VIS1    PT47         1 #> 186 41.05857                     Asian   Male   TRT   VIS2    PT47         1 #> 187 37.32452                     Asian   Male   TRT   VIS3    PT47         1 #> 190 43.12432 Black or African American   Male   PBO   VIS2    PT48         1 #> 191 41.99349 Black or African American   Male   PBO   VIS3    PT48         1 #> 193 44.03080                     White Female   PBO   VIS1    PT49         1 #> 194 38.66417                     White Female   PBO   VIS2    PT49         1 #> 195 53.45993                     White Female   PBO   VIS3    PT49         1 #> 197 29.81948                     Asian Female   TRT   VIS1    PT50         1 #> 198 30.43859                     Asian Female   TRT   VIS2    PT50         1 #> 199 40.18095                     Asian Female   TRT   VIS3    PT50         1 #> 201 26.78578 Black or African American Female   TRT   VIS1    PT51         1 #> 202 34.55115 Black or African American Female   TRT   VIS2    PT51         1 #> 204 40.06421 Black or African American Female   TRT   VIS4    PT51         1 #> 206 43.09329 Black or African American Female   TRT   VIS2    PT52         1 #> 208 45.71567 Black or African American Female   TRT   VIS4    PT52         1 #> 209 40.74992                     White   Male   PBO   VIS1    PT53         1 #> 210 44.74635                     White   Male   PBO   VIS2    PT53         1 #> 217 40.14674                     Asian   Male   TRT   VIS1    PT55         1 #> 218 48.75859                     Asian   Male   TRT   VIS2    PT55         1 #> 219 46.43462                     Asian   Male   TRT   VIS3    PT55         1 #> 221 29.33990 Black or African American   Male   PBO   VIS1    PT56         1 #> 224 47.93165 Black or African American   Male   PBO   VIS4    PT56         1 #> 226 41.11632 Black or African American   Male   TRT   VIS2    PT57         1 #> 227 47.05889 Black or African American   Male   TRT   VIS3    PT57         1 #> 228 52.24599 Black or African American   Male   TRT   VIS4    PT57         1 #> 230 54.14236                     White Female   TRT   VIS2    PT58         1 #> 231 50.44618                     White Female   TRT   VIS3    PT58         1 #> 233 37.53657                     White Female   TRT   VIS1    PT59         1 #> 235 49.45840                     White Female   TRT   VIS3    PT59         1 #> 236 59.12866                     White Female   TRT   VIS4    PT59         1 #> 237 40.31268 Black or African American Female   TRT   VIS1    PT60         1 #> 238 39.66049 Black or African American Female   TRT   VIS2    PT60         1 #> 239 50.89726 Black or African American Female   TRT   VIS3    PT60         1 #> 240 56.13116 Black or African American Female   TRT   VIS4    PT60         1 #> 241 32.82981                     Asian   Male   TRT   VIS1    PT61         1 #> 242 46.53837                     Asian   Male   TRT   VIS2    PT61         1 #> 244 51.81265                     Asian   Male   TRT   VIS4    PT61         1 #> 246 29.91939                     Asian Female   PBO   VIS2    PT62         1 #> 250 51.05656                     White Female   PBO   VIS2    PT63         1 #> 251 50.50059                     White Female   PBO   VIS3    PT63         1 #> 252 64.11388                     White Female   PBO   VIS4    PT63         1 #> 253 32.21843 Black or African American Female   PBO   VIS1    PT64         1 #> 254 29.64732 Black or African American Female   PBO   VIS2    PT64         1 #> 256 45.09919 Black or African American Female   PBO   VIS4    PT64         1 #> 257 39.75659                     Asian Female   TRT   VIS1    PT65         1 #> 258 37.28894                     Asian Female   TRT   VIS2    PT65         1 #> 259 44.80145                     Asian Female   TRT   VIS3    PT65         1 #> 260 65.95920                     Asian Female   TRT   VIS4    PT65         1 #> 261 33.43439                     Asian   Male   TRT   VIS1    PT66         1 #> 262 33.57042                     Asian   Male   TRT   VIS2    PT66         1 #> 263 39.91543                     Asian   Male   TRT   VIS3    PT66         1 #> 264 49.57098                     Asian   Male   TRT   VIS4    PT66         1 #> 265 38.91634                     White Female   TRT   VIS1    PT67         1 #> 266 36.69011                     White Female   TRT   VIS2    PT67         1 #> 267 45.66665                     White Female   TRT   VIS3    PT67         1 #> 268 52.07431                     White Female   TRT   VIS4    PT67         1 #> 269 42.21411                     White Female   TRT   VIS1    PT68         1 #> 270 45.02901                     White Female   TRT   VIS2    PT68         1 #> 273 30.98338 Black or African American   Male   PBO   VIS1    PT69         1 #> 274 44.72932 Black or African American   Male   PBO   VIS2    PT69         1 #> 275 40.68711 Black or African American   Male   PBO   VIS3    PT69         1 #> 276 34.71530 Black or African American   Male   PBO   VIS4    PT69         1 #> 277 27.30752 Black or African American   Male   PBO   VIS1    PT70         1 #> 278 37.31585 Black or African American   Male   PBO   VIS2    PT70         1 #> 280 44.83000 Black or African American   Male   PBO   VIS4    PT70         1 #> 281 32.93042                     Asian   Male   TRT   VIS1    PT71         1 #> 282 44.91911                     Asian   Male   TRT   VIS2    PT71         1 #> 283 45.68636                     Asian   Male   TRT   VIS3    PT71         1 #> 284 65.98800                     Asian   Male   TRT   VIS4    PT71         1 #> 285 46.60130                     Asian Female   TRT   VIS1    PT72         1 #> 286 40.89786                     Asian Female   TRT   VIS2    PT72         1 #> 287 46.66708                     Asian Female   TRT   VIS3    PT72         1 #> 291 43.83270                     White   Male   PBO   VIS3    PT73         1 #> 292 44.11604                     White   Male   PBO   VIS4    PT73         1 #> 293 38.29612                     White Female   PBO   VIS1    PT74         1 #> 295 51.38570                     White Female   PBO   VIS3    PT74         1 #> 296 56.20979                     White Female   PBO   VIS4    PT74         1 #> 298 43.45819                     White   Male   PBO   VIS2    PT75         1 #> 299 38.38741                     White   Male   PBO   VIS3    PT75         1 #> 300 56.42818                     White   Male   PBO   VIS4    PT75         1 #> 301 39.05050                     White   Male   TRT   VIS1    PT76         1 #> 304 54.09200                     White   Male   TRT   VIS4    PT76         1 #> 305 31.40521                     Asian   Male   TRT   VIS1    PT77         1 #> 306 46.13330                     Asian   Male   TRT   VIS2    PT77         1 #> 307 45.29845                     Asian   Male   TRT   VIS3    PT77         1 #> 308 28.06936                     Asian   Male   TRT   VIS4    PT77         1 #> 310 42.50283                     White Female   TRT   VIS2    PT78         1 #> 311 46.45368                     White Female   TRT   VIS3    PT78         1 #> 312 64.97366                     White Female   TRT   VIS4    PT78         1 #> 316 43.97847                     Asian Female   PBO   VIS4    PT79         1 #> 317 35.33466                     Asian   Male   TRT   VIS1    PT80         1 #> 318 39.34378                     Asian   Male   TRT   VIS2    PT80         1 #> 319 41.27633                     Asian   Male   TRT   VIS3    PT80         1 #> 322 39.83058                     White   Male   PBO   VIS2    PT81         1 #> 323 43.49673                     White   Male   PBO   VIS3    PT81         1 #> 324 44.06114                     White   Male   PBO   VIS4    PT81         1 #> 325 41.43742 Black or African American Female   PBO   VIS1    PT82         1 #> 327 46.16954 Black or African American Female   PBO   VIS3    PT82         1 #> 328 54.24024 Black or African American Female   PBO   VIS4    PT82         1 #> 329 36.61831                     White   Male   TRT   VIS1    PT83         1 #> 330 42.09272                     White   Male   TRT   VIS2    PT83         1 #> 331 50.69556                     White   Male   TRT   VIS3    PT83         1 #> 332 51.72563                     White   Male   TRT   VIS4    PT83         1 #> 336 53.89947                     Asian Female   PBO   VIS4    PT84         1 #> 339 39.94420                     Asian Female   PBO   VIS3    PT85         1 #> 340 56.42482                     Asian Female   PBO   VIS4    PT85         1 #> 341 41.86385 Black or African American Female   TRT   VIS1    PT86         1 #> 342 34.56420 Black or African American Female   TRT   VIS2    PT86         1 #> 343 38.68927 Black or African American Female   TRT   VIS3    PT86         1 #> 344 62.88743 Black or African American Female   TRT   VIS4    PT86         1 #> 345 28.85343                     White   Male   PBO   VIS1    PT87         1 #> 347 49.29495                     White   Male   PBO   VIS3    PT87         1 #> 349 28.74029 Black or African American Female   PBO   VIS1    PT88         1 #> 351 43.59994 Black or African American Female   PBO   VIS3    PT88         1 #> 352 57.38616 Black or African American Female   PBO   VIS4    PT88         1 #> 353 35.36824 Black or African American   Male   PBO   VIS1    PT89         1 #> 354 43.06110 Black or African American   Male   PBO   VIS2    PT89         1 #> 355 31.27551 Black or African American   Male   PBO   VIS3    PT89         1 #> 356 54.13245 Black or African American   Male   PBO   VIS4    PT89         1 #> 357 25.97050                     Asian   Male   PBO   VIS1    PT90         1 #> 363 51.17493                     White Female   TRT   VIS3    PT91         1 #> 364 48.44043                     White Female   TRT   VIS4    PT91         1 #> 365 43.33128                     White Female   TRT   VIS1    PT92         1 #> 367 55.93546                     White Female   TRT   VIS3    PT92         1 #> 368 54.15312                     White Female   TRT   VIS4    PT92         1 #> 370 40.60252 Black or African American   Male   PBO   VIS2    PT93         1 #> 371 44.44715 Black or African American   Male   PBO   VIS3    PT93         1 #> 372 40.54161 Black or African American   Male   PBO   VIS4    PT93         1 #> 373 33.95563                     Asian Female   PBO   VIS1    PT94         1 #> 375 43.67802                     Asian Female   PBO   VIS3    PT94         1 #> 376 42.76023                     Asian Female   PBO   VIS4    PT94         1 #> 378 42.82678                     Asian Female   PBO   VIS2    PT95         1 #> 379 39.59218                     Asian Female   PBO   VIS3    PT95         1 #> 381 33.49216 Black or African American Female   PBO   VIS1    PT96         1 #> 382 35.39266 Black or African American Female   PBO   VIS2    PT96         1 #> 384 42.36266 Black or African American Female   PBO   VIS4    PT96         1 #> 385 48.54368                     White   Male   TRT   VIS1    PT97         1 #> 386 43.94366                     White   Male   TRT   VIS2    PT97         1 #> 388 47.91204                     White   Male   TRT   VIS4    PT97         1 #> 389 20.72928                     Asian   Male   PBO   VIS1    PT98         1 #> 390 28.00599                     Asian   Male   PBO   VIS2    PT98         1 #> 391 40.19255                     Asian   Male   PBO   VIS3    PT98         1 #> 392 37.79360                     Asian   Male   PBO   VIS4    PT98         1 #> 394 36.75177 Black or African American   Male   PBO   VIS2    PT99         1 #> 397 34.59822 Black or African American Female   PBO   VIS1   PT100         1 #> 398 39.32034 Black or African American Female   PBO   VIS2   PT100         1 #> 399 40.65702 Black or African American Female   PBO   VIS3   PT100         1 #> 402 43.03255                     White   Male   TRT   VIS2   PT101         1 #> 403 54.65715                     White   Male   TRT   VIS3   PT101         1 #> 405 35.55742                     Asian Female   PBO   VIS1   PT102         1 #> 406 43.70215                     Asian Female   PBO   VIS2   PT102         1 #> 407 42.52157                     Asian Female   PBO   VIS3   PT102         1 #> 408 54.89337                     Asian Female   PBO   VIS4   PT102         1 #> 409 32.03460                     Asian Female   PBO   VIS1   PT103         1 #> 410 29.45107                     Asian Female   PBO   VIS2   PT103         1 #> 411 45.35138                     Asian Female   PBO   VIS3   PT103         1 #> 413 38.73784 Black or African American Female   PBO   VIS1   PT104         1 #> 415 41.42283 Black or African American Female   PBO   VIS3   PT104         1 #> 416 47.32385 Black or African American Female   PBO   VIS4   PT104         1 #> 418 47.55310 Black or African American Female   TRT   VIS2   PT105         1 #> 419 49.06509 Black or African American Female   TRT   VIS3   PT105         1 #> 421 29.22591                     Asian Female   TRT   VIS1   PT106         1 #> 422 40.08175                     Asian Female   TRT   VIS2   PT106         1 #> 423 45.68142                     Asian Female   TRT   VIS3   PT106         1 #> 424 41.47403                     Asian Female   TRT   VIS4   PT106         1 #> 427 42.51970                     White Female   PBO   VIS3   PT107         1 #> 428 69.36099                     White Female   PBO   VIS4   PT107         1 #> 429 42.39760                     White   Male   TRT   VIS1   PT108         1 #> 430 43.72376                     White   Male   TRT   VIS2   PT108         1 #> 431 49.47601                     White   Male   TRT   VIS3   PT108         1 #> 432 51.94188                     White   Male   TRT   VIS4   PT108         1 #> 434 40.59100 Black or African American Female   PBO   VIS2   PT109         1 #> 435 39.97833 Black or African American Female   PBO   VIS3   PT109         1 #> 436 31.69049 Black or African American Female   PBO   VIS4   PT109         1 #> 438 37.20517                     Asian   Male   TRT   VIS2   PT110         1 #> 439 46.28740                     Asian   Male   TRT   VIS3   PT110         1 #> 444 41.58720                     White Female   PBO   VIS4   PT111         1 #> 445 32.17365 Black or African American Female   PBO   VIS1   PT112         1 #> 447 40.69375 Black or African American Female   PBO   VIS3   PT112         1 #> 449 32.28771                     Asian   Male   PBO   VIS1   PT113         1 #> 450 41.76205                     Asian   Male   PBO   VIS2   PT113         1 #> 451 40.06768                     Asian   Male   PBO   VIS3   PT113         1 #> 453 29.14213 Black or African American   Male   PBO   VIS1   PT114         1 #> 454 39.50989 Black or African American   Male   PBO   VIS2   PT114         1 #> 455 43.32349 Black or African American   Male   PBO   VIS3   PT114         1 #> 456 47.16756 Black or African American   Male   PBO   VIS4   PT114         1 #> 457 40.93020                     Asian Female   PBO   VIS1   PT115         1 #> 458 42.19406                     Asian Female   PBO   VIS2   PT115         1 #> 459 41.21057                     Asian Female   PBO   VIS3   PT115         1 #> 461 38.54330 Black or African American   Male   TRT   VIS1   PT116         1 #> 463 43.96324 Black or African American   Male   TRT   VIS3   PT116         1 #> 464 42.67652 Black or African American   Male   TRT   VIS4   PT116         1 #> 465 22.79584 Black or African American   Male   PBO   VIS1   PT117         1 #> 469 31.43559                     Asian Female   PBO   VIS1   PT118         1 #> 470 38.85064                     Asian Female   PBO   VIS2   PT118         1 #> 471 48.24288                     Asian Female   PBO   VIS3   PT118         1 #> 473 44.71302                     White   Male   TRT   VIS1   PT119         1 #> 474 51.85370                     White   Male   TRT   VIS2   PT119         1 #> 477 30.56757                     Asian Female   PBO   VIS1   PT120         1 #> 484 59.90473 Black or African American   Male   TRT   VIS4   PT121         1 #> 487 49.76150                     Asian Female   PBO   VIS3   PT122         1 #> 489 47.21985                     White Female   PBO   VIS1   PT123         1 #> 490 40.34525                     White Female   PBO   VIS2   PT123         1 #> 491 48.29793                     White Female   PBO   VIS3   PT123         1 #> 494 44.39634                     Asian Female   TRT   VIS2   PT124         1 #> 495 41.71421                     Asian Female   TRT   VIS3   PT124         1 #> 496 47.37535                     Asian Female   TRT   VIS4   PT124         1 #> 497 42.03797                     White   Male   PBO   VIS1   PT125         1 #> 498 37.56100                     White   Male   PBO   VIS2   PT125         1 #> 499 45.11793                     White   Male   PBO   VIS3   PT125         1 #> 501 34.62530                     Asian   Male   TRT   VIS1   PT126         1 #> 502 45.28206                     Asian   Male   TRT   VIS2   PT126         1 #> 504 63.57761                     Asian   Male   TRT   VIS4   PT126         1 #> 505 35.80878 Black or African American Female   TRT   VIS1   PT127         1 #> 508 52.67314 Black or African American Female   TRT   VIS4   PT127         1 #> 509 35.88734                     Asian Female   TRT   VIS1   PT128         1 #> 510 38.73222                     Asian Female   TRT   VIS2   PT128         1 #> 511 46.70361                     Asian Female   TRT   VIS3   PT128         1 #> 512 53.65398                     Asian Female   TRT   VIS4   PT128         1 #> 513 36.71543                     White   Male   TRT   VIS1   PT129         1 #> 518 41.54317                     White   Male   PBO   VIS2   PT130         1 #> 519 51.67909                     White   Male   PBO   VIS3   PT130         1 #> 521 27.40130                     Asian Female   PBO   VIS1   PT131         1 #> 522 30.33517                     Asian Female   PBO   VIS2   PT131         1 #> 523 37.73092                     Asian Female   PBO   VIS3   PT131         1 #> 524 29.11668                     Asian Female   PBO   VIS4   PT131         1 #> 526 32.08830                     Asian   Male   PBO   VIS2   PT132         1 #> 527 41.66067                     Asian   Male   PBO   VIS3   PT132         1 #> 528 53.90815                     Asian   Male   PBO   VIS4   PT132         1 #> 530 35.06937                     White   Male   PBO   VIS2   PT133         1 #> 531 47.17615                     White   Male   PBO   VIS3   PT133         1 #> 532 56.49347                     White   Male   PBO   VIS4   PT133         1 #> 534 38.88006 Black or African American   Male   PBO   VIS2   PT134         1 #> 535 47.54070 Black or African American   Male   PBO   VIS3   PT134         1 #> 536 43.53705 Black or African American   Male   PBO   VIS4   PT134         1 #> 537 31.82054 Black or African American   Male   PBO   VIS1   PT135         1 #> 538 39.62816 Black or African American   Male   PBO   VIS2   PT135         1 #> 539 44.95543 Black or African American   Male   PBO   VIS3   PT135         1 #> 540 21.11543 Black or African American   Male   PBO   VIS4   PT135         1 #> 541 34.74671                     White Female   TRT   VIS1   PT136         1 #> 544 56.69249                     White Female   TRT   VIS4   PT136         1 #> 545 22.73126                     Asian Female   TRT   VIS1   PT137         1 #> 546 32.50075                     Asian Female   TRT   VIS2   PT137         1 #> 547 42.37206                     Asian Female   TRT   VIS3   PT137         1 #> 548 42.89847                     Asian Female   TRT   VIS4   PT137         1 #> 549 55.62582                     Asian   Male   TRT   VIS1   PT138         1 #> 550 45.38998                     Asian   Male   TRT   VIS2   PT138         1 #> 551 52.66743                     Asian   Male   TRT   VIS3   PT138         1 #> 555 34.18931                     Asian Female   TRT   VIS3   PT139         1 #> 556 45.59740                     Asian Female   TRT   VIS4   PT139         1 #> 557 28.89198 Black or African American Female   PBO   VIS1   PT140         1 #> 558 38.46147 Black or African American Female   PBO   VIS2   PT140         1 #> 560 49.90357 Black or African American Female   PBO   VIS4   PT140         1 #> 562 44.14167                     White   Male   TRT   VIS2   PT141         1 #> 564 55.24278                     White   Male   TRT   VIS4   PT141         1 #> 569 27.38001 Black or African American Female   TRT   VIS1   PT143         1 #> 570 33.63251 Black or African American Female   TRT   VIS2   PT143         1 #> 572 39.34410 Black or African American Female   TRT   VIS4   PT143         1 #> 573 26.98575                     Asian Female   PBO   VIS1   PT144         1 #> 574 24.04175                     Asian Female   PBO   VIS2   PT144         1 #> 575 42.16648                     Asian Female   PBO   VIS3   PT144         1 #> 576 44.75380                     Asian Female   PBO   VIS4   PT144         1 #> 577 31.55469 Black or African American   Male   PBO   VIS1   PT145         1 #> 578 44.42696 Black or African American   Male   PBO   VIS2   PT145         1 #> 579 44.10343 Black or African American   Male   PBO   VIS3   PT145         1 #> 582 37.87445                     Asian Female   TRT   VIS2   PT146         1 #> 583 48.31828                     Asian Female   TRT   VIS3   PT146         1 #> 584 50.21520                     Asian Female   TRT   VIS4   PT146         1 #> 585 41.94615                     Asian Female   PBO   VIS1   PT147         1 #> 586 39.62690                     Asian Female   PBO   VIS2   PT147         1 #> 587 46.69763                     Asian Female   PBO   VIS3   PT147         1 #> 590 43.75255 Black or African American   Male   TRT   VIS2   PT148         1 #> 591 47.38873 Black or African American   Male   TRT   VIS3   PT148         1 #> 593 32.43412                     Asian Female   PBO   VIS1   PT149         1 #> 594 43.07163                     Asian Female   PBO   VIS2   PT149         1 #> 595 42.99551                     Asian Female   PBO   VIS3   PT149         1 #> 596 53.82759                     Asian Female   PBO   VIS4   PT149         1 #> 599 50.64802                     White   Male   PBO   VIS3   PT150         1 #> 600 63.44051                     White   Male   PBO   VIS4   PT150         1 #> 601 34.48949                     Asian Female   PBO   VIS1   PT151         1 #> 602 40.08056                     Asian Female   PBO   VIS2   PT151         1 #> 604 47.46553                     Asian Female   PBO   VIS4   PT151         1 #> 606 37.11697                     Asian Female   TRT   VIS2   PT152         1 #> 608 36.25120                     Asian Female   TRT   VIS4   PT152         1 #> 609 29.20171 Black or African American   Male   PBO   VIS1   PT153         1 #> 610 31.53773 Black or African American   Male   PBO   VIS2   PT153         1 #> 611 42.35683 Black or African American   Male   PBO   VIS3   PT153         1 #> 612 64.78352 Black or African American   Male   PBO   VIS4   PT153         1 #> 613 32.72757 Black or African American Female   PBO   VIS1   PT154         1 #> 614 37.50022 Black or African American Female   PBO   VIS2   PT154         1 #> 616 57.03861 Black or African American Female   PBO   VIS4   PT154         1 #> 617 36.32475                     Asian   Male   TRT   VIS1   PT155         1 #> 619 41.46725                     Asian   Male   TRT   VIS3   PT155         1 #> 620 59.01411                     Asian   Male   TRT   VIS4   PT155         1 #> 621 30.14970                     White   Male   PBO   VIS1   PT156         1 #> 622 34.91740                     White   Male   PBO   VIS2   PT156         1 #> 623 52.13900                     White   Male   PBO   VIS3   PT156         1 #> 624 58.73839                     White   Male   PBO   VIS4   PT156         1 #> 625 35.83185 Black or African American   Male   TRT   VIS1   PT157         1 #> 628 56.41409 Black or African American   Male   TRT   VIS4   PT157         1 #> 630 43.55593 Black or African American   Male   TRT   VIS2   PT158         1 #> 631 44.26320 Black or African American   Male   TRT   VIS3   PT158         1 #> 632 59.25579 Black or African American   Male   TRT   VIS4   PT158         1 #> 633 28.47314                     Asian Female   TRT   VIS1   PT159         1 #> 634 47.47581                     Asian Female   TRT   VIS2   PT159         1 #> 638 46.47483                     Asian   Male   TRT   VIS2   PT160         1 #> 639 51.22677                     Asian   Male   TRT   VIS3   PT160         1 #> 640 45.82777                     Asian   Male   TRT   VIS4   PT160         1 #> 642 39.06783 Black or African American Female   PBO   VIS2   PT161         1 #> 645 29.99542                     Asian   Male   PBO   VIS1   PT162         1 #> 648 54.17796                     Asian   Male   PBO   VIS4   PT162         1 #> 650 44.55743                     White   Male   PBO   VIS2   PT163         1 #> 652 62.59579                     White   Male   PBO   VIS4   PT163         1 #> 654 35.48396 Black or African American Female   PBO   VIS2   PT164         1 #> 655 44.07768 Black or African American Female   PBO   VIS3   PT164         1 #> 656 46.57837 Black or African American Female   PBO   VIS4   PT164         1 #> 657 47.67979                     White Female   TRT   VIS1   PT165         1 #> 661 22.15439                     Asian   Male   TRT   VIS1   PT166         1 #> 665 34.27765 Black or African American   Male   PBO   VIS1   PT167         1 #> 666 36.90059 Black or African American   Male   PBO   VIS2   PT167         1 #> 668 40.54285 Black or African American   Male   PBO   VIS4   PT167         1 #> 669 29.09494 Black or African American Female   PBO   VIS1   PT168         1 #> 670 37.21768 Black or African American Female   PBO   VIS2   PT168         1 #> 671 43.08491 Black or African American Female   PBO   VIS3   PT168         1 #> 673 27.12174                     White Female   PBO   VIS1   PT169         1 #> 674 34.11916                     White Female   PBO   VIS2   PT169         1 #> 678 40.80230                     White Female   TRT   VIS2   PT170         1 #> 679 45.89269                     White Female   TRT   VIS3   PT170         1 #> 680 43.69153                     White Female   TRT   VIS4   PT170         1 #> 682 29.22869                     Asian Female   PBO   VIS2   PT171         1 #> 684 55.68362                     Asian Female   PBO   VIS4   PT171         1 #> 685 31.90698                     Asian Female   TRT   VIS1   PT172         1 #> 686 37.31061                     Asian Female   TRT   VIS2   PT172         1 #> 687 40.75546                     Asian Female   TRT   VIS3   PT172         1 #> 689 42.19474                     White Female   TRT   VIS1   PT173         1 #> 690 44.87228                     White Female   TRT   VIS2   PT173         1 #> 691 47.55198                     White Female   TRT   VIS3   PT173         1 #> 693 50.62894 Black or African American Female   TRT   VIS1   PT174         1 #> 694 45.47551 Black or African American Female   TRT   VIS2   PT174         1 #> 695 48.62168 Black or African American Female   TRT   VIS3   PT174         1 #> 697 29.66493 Black or African American Female   PBO   VIS1   PT175         1 #> 698 34.57406 Black or African American Female   PBO   VIS2   PT175         1 #> 700 38.11676 Black or African American Female   PBO   VIS4   PT175         1 #> 701 33.77204 Black or African American   Male   TRT   VIS1   PT176         1 #> 702 34.26148 Black or African American   Male   TRT   VIS2   PT176         1 #> 704 58.81037 Black or African American   Male   TRT   VIS4   PT176         1 #> 707 39.88119 Black or African American   Male   PBO   VIS3   PT177         1 #> 709 31.62708 Black or African American   Male   PBO   VIS1   PT178         1 #> 712 48.22049 Black or African American   Male   PBO   VIS4   PT178         1 #> 713 42.58829                     White   Male   TRT   VIS1   PT179         1 #> 715 49.33262                     White   Male   TRT   VIS3   PT179         1 #> 716 53.74331                     White   Male   TRT   VIS4   PT179         1 #> 717 29.71857                     Asian   Male   PBO   VIS1   PT180         1 #> 718 30.45651                     Asian   Male   PBO   VIS2   PT180         1 #> 719 38.29800                     Asian   Male   PBO   VIS3   PT180         1 #> 721 36.81040                     Asian Female   PBO   VIS1   PT181         1 #> 723 42.35045                     Asian Female   PBO   VIS3   PT181         1 #> 724 39.39860                     Asian Female   PBO   VIS4   PT181         1 #> 727 49.73629 Black or African American Female   TRT   VIS3   PT182         1 #> 728 41.58082 Black or African American Female   TRT   VIS4   PT182         1 #> 729 43.58901 Black or African American Female   TRT   VIS1   PT183         1 #> 730 40.16762 Black or African American Female   TRT   VIS2   PT183         1 #> 734 41.08206                     White Female   TRT   VIS2   PT184         1 #> 736 69.37409                     White Female   TRT   VIS4   PT184         1 #> 738 41.27625 Black or African American Female   PBO   VIS2   PT185         1 #> 739 44.76138 Black or African American Female   PBO   VIS3   PT185         1 #> 740 39.69815 Black or African American Female   PBO   VIS4   PT185         1 #> 741 38.44296                     White   Male   PBO   VIS1   PT186         1 #> 742 48.20586                     White   Male   PBO   VIS2   PT186         1 #> 744 35.50735                     White   Male   PBO   VIS4   PT186         1 #> 745 32.08153 Black or African American Female   PBO   VIS1   PT187         1 #> 749 44.69256 Black or African American Female   PBO   VIS1   PT188         1 #> 751 42.18689 Black or African American Female   PBO   VIS3   PT188         1 #> 753 37.01741                     Asian Female   TRT   VIS1   PT189         1 #> 754 38.26920                     Asian Female   TRT   VIS2   PT189         1 #> 755 49.28806                     Asian Female   TRT   VIS3   PT189         1 #> 757 40.45953 Black or African American Female   TRT   VIS1   PT190         1 #> 758 45.10337 Black or African American Female   TRT   VIS2   PT190         1 #> 759 45.58250 Black or African American Female   TRT   VIS3   PT190         1 #> 760 62.96989 Black or African American Female   TRT   VIS4   PT190         1 #> 761 30.78252                     White   Male   TRT   VIS1   PT191         1 #> 764 44.69667                     White   Male   TRT   VIS4   PT191         1 #> 765 32.72491                     White Female   TRT   VIS1   PT192         1 #> 766 45.78702                     White Female   TRT   VIS2   PT192         1 #> 767 48.74886                     White Female   TRT   VIS3   PT192         1 #> 768 84.08449                     White Female   TRT   VIS4   PT192         1 #> 770 30.19495                     Asian   Male   PBO   VIS2   PT193         1 #> 771 36.78573                     Asian   Male   PBO   VIS3   PT193         1 #> 772 61.03588                     Asian   Male   PBO   VIS4   PT193         1 #> 773 20.36749 Black or African American   Male   PBO   VIS1   PT194         1 #> 774 35.22480 Black or African American   Male   PBO   VIS2   PT194         1 #> 775 37.42847 Black or African American   Male   PBO   VIS3   PT194         1 #> 776 30.20501 Black or African American   Male   PBO   VIS4   PT194         1 #> 778 49.12862                     White Female   TRT   VIS2   PT195         1 #> 779 47.31234                     White Female   TRT   VIS3   PT195         1 #> 781 19.28388                     Asian   Male   PBO   VIS1   PT196         1 #> 782 30.00682                     Asian   Male   PBO   VIS2   PT196         1 #> 784 49.21768                     Asian   Male   PBO   VIS4   PT196         1 #> 788 40.13353 Black or African American   Male   PBO   VIS4   PT197         1 #> 789 42.34534 Black or African American   Male   TRT   VIS1   PT198         1 #> 790 52.32575 Black or African American   Male   TRT   VIS2   PT198         1 #> 792 69.26254 Black or African American   Male   TRT   VIS4   PT198         1 #> 797 35.70341 Black or African American   Male   PBO   VIS1   PT200         1 #> 798 41.64454 Black or African American   Male   PBO   VIS2   PT200         1 #> 800 54.25081 Black or African American   Male   PBO   VIS4   PT200         1 # Log likelihood given the estimated parameters: logLik(object) #> [1] -1693.225 # Formula which was used: formula(object) #> FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID) #> <environment: 0x55d85577c270> # Variance-covariance matrix estimate for coefficients: vcov(object) #>                               (Intercept) RACEBlack or African American #> (Intercept)                     0.7859971                  -0.226212328 #> RACEBlack or African American  -0.2262123                   0.389969478 #> RACEWhite                      -0.1771113                   0.181466304 #> SEXFemale                      -0.1684152                   0.031537926 #> ARMCDTRT                       -0.5674809                   0.028374129 #> AVISITVIS2                     -0.4227565                   0.002972514 #> AVISITVIS3                     -0.5231223                   0.010825469 #> AVISITVIS4                     -0.4406442                   0.002205681 #> ARMCDTRT:AVISITVIS2             0.4225282                   0.005382569 #> ARMCDTRT:AVISITVIS3             0.5218971                   0.011420575 #> ARMCDTRT:AVISITVIS4             0.4489247                  -0.012589283 #>                                  RACEWhite    SEXFemale     ARMCDTRT #> (Intercept)                   -0.177111308 -0.168415217 -0.567480906 #> RACEBlack or African American  0.181466304  0.031537926  0.028374129 #> RACEWhite                      0.443035801  0.023364777 -0.042968995 #> SEXFemale                      0.023364777  0.282971189  0.001814594 #> ARMCDTRT                      -0.042968995  0.001814594  1.153791725 #> AVISITVIS2                    -0.003149280  0.006471853  0.419528600 #> AVISITVIS3                    -0.002952986  0.006771404  0.517277529 #> AVISITVIS4                    -0.008230720  0.004088901  0.440653554 #> ARMCDTRT:AVISITVIS2            0.013485683 -0.016801299 -0.845758354 #> ARMCDTRT:AVISITVIS3            0.006720617 -0.024696304 -1.044355829 #> ARMCDTRT:AVISITVIS4            0.002967665 -0.009038640 -0.877606881 #>                                 AVISITVIS2   AVISITVIS3   AVISITVIS4 #> (Intercept)                   -0.422756455 -0.523122299 -0.440644229 #> RACEBlack or African American  0.002972514  0.010825469  0.002205681 #> RACEWhite                     -0.003149280 -0.002952986 -0.008230720 #> SEXFemale                      0.006471853  0.006771404  0.004088901 #> ARMCDTRT                       0.419528600  0.517277529  0.440653554 #> AVISITVIS2                     0.642749706  0.399048940  0.368340113 #> AVISITVIS3                     0.399048940  0.676823960  0.401800094 #> AVISITVIS4                     0.368340113  0.401800094  1.723478787 #> ARMCDTRT:AVISITVIS2           -0.643020114 -0.399203255 -0.368624024 #> ARMCDTRT:AVISITVIS3           -0.399238901 -0.676484876 -0.401792995 #> ARMCDTRT:AVISITVIS4           -0.368506585 -0.402167824 -1.723586879 #>                               ARMCDTRT:AVISITVIS2 ARMCDTRT:AVISITVIS3 #> (Intercept)                           0.422528163         0.521897062 #> RACEBlack or African American         0.005382569         0.011420575 #> RACEWhite                             0.013485683         0.006720617 #> SEXFemale                            -0.016801299        -0.024696304 #> ARMCDTRT                             -0.845758354        -1.044355829 #> AVISITVIS2                           -0.643020114        -0.399238901 #> AVISITVIS3                           -0.399203255        -0.676484876 #> AVISITVIS4                           -0.368624024        -0.401792995 #> ARMCDTRT:AVISITVIS2                   1.275359305         0.805849821 #> ARMCDTRT:AVISITVIS3                   0.805849821         1.410501907 #> ARMCDTRT:AVISITVIS4                   0.728711516         0.796418986 #>                               ARMCDTRT:AVISITVIS4 #> (Intercept)                           0.448924745 #> RACEBlack or African American        -0.012589283 #> RACEWhite                             0.002967665 #> SEXFemale                            -0.009038640 #> ARMCDTRT                             -0.877606881 #> AVISITVIS2                           -0.368506585 #> AVISITVIS3                           -0.402167824 #> AVISITVIS4                           -1.723586879 #> ARMCDTRT:AVISITVIS2                   0.728711516 #> ARMCDTRT:AVISITVIS3                   0.796418986 #> ARMCDTRT:AVISITVIS4                   3.425654435 # Variance-covariance matrix estimate for residuals: VarCorr(object) #>           VIS1      VIS2       VIS3       VIS4 #> VIS1 40.553664 14.396045  4.9747288 13.3866534 #> VIS2 14.396045 26.571483  2.7854661  7.4744790 #> VIS3  4.974729  2.785466 14.8978517  0.9082111 #> VIS4 13.386653  7.474479  0.9082111 95.5568420 # REML criterion (twice the negative log likelihood): deviance(object) #> [1] 3386.45 # AIC: AIC(object) #> [1] 3406.45 AIC(object, corrected = TRUE) #> [1] 3406.877 # BIC: BIC(object) #> [1] 3439.282"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/reference/refit_multiple_optimizers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refitting MMRM with Multiple Optimizers — refit_multiple_optimizers","text":"","code":"refit_multiple_optimizers(fit, ..., control = mmrm_control(...))"},{"path":"https://openpharma.github.io/mmrm/main/reference/refit_multiple_optimizers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refitting MMRM with Multiple Optimizers — refit_multiple_optimizers","text":"fit (mmrm_fit) original model fit fit_single_optimizer(). ... Additional arguments passed mmrm_control(). control (mmrm_control) object.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/refit_multiple_optimizers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refitting MMRM with Multiple Optimizers — refit_multiple_optimizers","text":"best (terms log likelihood) fit converged.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/refit_multiple_optimizers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Refitting MMRM with Multiple Optimizers — refit_multiple_optimizers","text":"Windows, parallel computations currently implemented.","code":""},{"path":"https://openpharma.github.io/mmrm/main/reference/refit_multiple_optimizers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refitting MMRM with Multiple Optimizers — refit_multiple_optimizers","text":"","code":"fit <- fit_single_optimizer(   formula = FEV1 ~ RACE + SEX + ARMCD * AVISIT + us(AVISIT | USUBJID),   data = fev_data,   weights = rep(1, nrow(fev_data)),   optimizer = \"nlminb\" ) best_fit <- refit_multiple_optimizers(fit)"},{"path":[]},{"path":"https://openpharma.github.io/mmrm/main/news/index.html","id":"new-features-0-2-2-9000","dir":"Changelog","previous_headings":"","what":"New Features","title":"mmrm 0.2.2.9000","text":"Add support Kenward-Roger adjusted coefficients covariance matrix degrees freedom mmrm function call argument method. Options “Kenward-Roger”, “Kenward-Roger-Linear” “Satterthwaite” (still default). Subsequent methods calls respect initial choice, e.g. vcov(fit) return adjusted coefficients covariance matrix Kenward-Roger method used. Update mmrm arguments allow users fine-grained control, e.g. mmrm(..., start = start, optimizer = c(\"BFGS\", \"nlminb\")) set starting values variance estimates choose available optimizers. arguments passed new function mmrm_control. Add new argument drop_visit_levels allow users keep levels visits, even observed data. Dropping unobserved levels done silently previously, now message given. See ?mmrm_control details.","code":""},{"path":"https://openpharma.github.io/mmrm/main/news/index.html","id":"bug-fixes-0-2-2-9000","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"mmrm 0.2.2.9000","text":"Previously duplicate time points present single subject, lead segmentation faults total number unique time points available subject. Now checked duplicate time points per subject, explained also function documentation introduction vignette. Previously mmrm calls, weights object environment formula defined replaced weights used internally. Now behavior removed variable weights e.g. global environment longer replaced.","code":""},{"path":"https://openpharma.github.io/mmrm/main/news/index.html","id":"miscellaneous-0-2-2-9000","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"mmrm 0.2.2.9000","text":"Deprecated free_cores() favor parallelly::availableCores(omit = 1). Deprecated optimizer = \"automatic\" favor specifying optimizer. default, remaining optimizers tried first optimizer fails reach convergence.","code":""},{"path":"https://openpharma.github.io/mmrm/main/news/index.html","id":"mmrm-015","dir":"Changelog","previous_headings":"","what":"mmrm 0.1.5","title":"mmrm 0.1.5","text":"CRAN release: 2022-10-18 First CRAN version package. package fits mixed models repeated measures (MMRM) based marginal linear model without random effects. motivation package fast, reliable (terms convergence behavior) feature complete implementation MMRM R.","code":""},{"path":"https://openpharma.github.io/mmrm/main/news/index.html","id":"new-features-0-1-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"mmrm 0.1.5","text":"Currently 10 covariance structures supported (unstructured; well homogeneous heterogeneous versions Toeplitz, auto-regressive order one, ante-dependence, compound symmetry; spatial exponential). Fast C++ implementation Maximum Likelihood (ML) Restricted Maximum Likelihood (REML) estimation. Currently Satterthwaite adjusted degrees freedom calculation supported. Interface emmeans package computing estimated marginal means (also called least-square means) coefficients. Multiple optimizers run reach convergence many cases possible. Flexible formula based model specification support standard S3 methods summary, logLik, etc.","code":""}]
